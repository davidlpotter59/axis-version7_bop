%%
Screen
        Name = "bopMT10e";
        Type = "Detail" ;
        Highlight=Underscore ;
        Padcharacter=Space ;
        Screensize="dynamic";
        Windowtitle="%a     %s Policy Information - Ver. 7.00    %m";
        Domain="sfpepl" ;
--      resizeable = yes ;
        iconline = 0 ;

        Global Unsigned Ascii Number G_policy_no[9] ,
                                     g_year[4],
                                     g_end_sequence[4] ;

        Global String G_COMPANY_ID[10] ,
                      g_inquiry[1] ;

        local string l_company_id[10] ,
                     l_username[15] ,
                     l_system_id[15] ,
                     l_code[7],
                     l_code_1[7],
                     l_code_2[7],
                     l_code_3[7],
                     l_continue_1[2],
                     l_attorney[1]="N",
                     l_add_endorsement[1] ,
                     l_form_edition[25],
                     l_description[75] ;

        local unsigned ascii number l_state[2],
                                    l_line_of_business[4] ,
                                    l_sub_code[4] ,
                                    l_prior_epl_limit[8] ,
                                    l_override_epl[1],
                                    l_epl_premium[6] ;

        Access sfpepl, Set sfpepl:policy_no    = G_policy_no ,
                           sfpepl:pol_year     = g_year,
                           sfpepl:end_sequence = g_end_sequence, generic

        Include "stdkeys7.inc"

Style Definition

        Include "styles.inc"

Functions

        "redisplay" display/noreturn "bopmt10e" ;

        "func1" display "bopmt10f" tagged premium_fn ;

        Include "stdfunc7.inc"

Menu Definition

        Include "stdmenu7.inc"

}

Toolbar Definition

        Include "stdtoolbar7.inc"
}

        include "stdblanktoolbar7.inc"

}

Toolbar Tagged bop_t Properties
        {
        Text     = "bop"
        FontName = "SansSerif"
        Fontsize = 10
        }
    {
    ToolBarButton
        Properties
            {
            iconname   = "up.bmp"
            tooltip    = "Premium"
            }
        Events
            {
            action = premium_fn
            }
    }

screen entry
access sfpname, set sfpname:policy_no    = g_policy_no,
                    sfpname:pol_year     = g_year,
                    sfpname:end_sequence = g_end_sequence, generic

access bpsdefault1, set bpsdefault1:company_id       = sfpname:company_id,
                        bpsdefault1:line_of_business = sfpname:line_of_business, generic

access sfsemail, set sfsemail:company_id = sfpname:company_id,
                     sfsemail:user_id    = username, generic

if g_inquiry = "Y" then
    begin
    disable(add_fn)
    disable(delete_fn)
    disable(change_fn)
    end

if bpsepl:allow_premium = 0 then
    hide(premium_fn)

access bopgeneral, set bopgeneral:policy_no    = g_policy_no,
                       bopgeneral:pol_year     = g_Year,
                       bopgeneral:end_sequence = g_end_sequence, generic

l_username  = username
l_system_id = "bop"
access sfssecurity_rating, set sfssecurity_rating:company_id = sfpname:company_id,
                               sfssecurity_rating:user_id    = l_username,
                               sfssecurity_rating:system_id  = l_system_id, generic

l_company_id       = sfpname:company_id
l_state            = bopgeneral:state
l_line_of_business = sfpname:line_of_business
access bpsepl, set bpsepl:company_id       = l_company_id,
                   bpsepl:state            = l_state,
                   bpsepl:line_of_business = l_line_of_business,
                   bpsepl:limit            = sfpepl:epl_limit, generic

if bpsepl:allow_premium = 0 then
    disable(premium_fn)

Access Validation
If sfpepl:policy_no <> G_policy_no or
   sfpepl:pol_Year <> g_year or
   sfpepl:end_sequence <> g_end_sequence Then
    Error 1000 ;

screen
{
%%
                                                        _______________
*-------------------------------------------------------------------------------*
| EPL Limit:        ________                                                    |
| EPL Deductible:   _____                                                       |
| Third Party Violations Coverage Option:  _                                    |
| Retroactive Date: __________                                                  |
*-------------------------------------------------------------------------------*

%%

components

fields
        function/noecho/showasguidetext ;
301     begin
        access bopgeneral, set bopgeneral:policy_no    = g_policy_no,
                               bopgeneral:pol_year     = g_year,
                               bopgeneral:end_sequence = g_end_sequence, generic

        if function = "ADD" then
            begin
            sfpepl:policy_no    = g_policy_no
            sfpepl:pol_year     = g_year
            sfpepl:end_sequence = g_end_sequence
            end

        l_company_id       = sfpname:company_id
        l_state            = bopgeneral:state
        l_line_of_business = sfpname:line_of_business

        l_override_epl     = sfpmaster:override_epl

        do read_bopgeneral
        if l_attorney = "Y" then
            begin
            l_continue_1 = dialog("EPL Coverage","warning.bmp","EPL Coverage is not available on this class","OK")
            function = "BACK"
            end

        access bopgeneral, set bopgeneral:policy_no    = g_policy_no,
                               bopgeneral:pol_year     = g_year,
                               bopgeneral:end_sequence = g_end_sequence, generic

        access bpsepl_alias, set bpsepl_alias:company_id       = l_company_id,
                                 bpsepl_alias:state            = l_state,
                                 bpsepl_alias:line_of_business = l_line_of_business, generic

        l_prior_epl_limit = sfpepl:epl_limit
        end
        sfpepl:epl_limit/default
        if bopgeneral:class_code one of 51 and
           bopgeneral:sub_code = 60 then
            error "EPL Coverage is not available on this class"

        access bpsepl, set bpsepl:company_id       = l_company_id,
                           bpsepl:state            = l_state,
                           bpsepl:line_of_business = l_line_of_business,
                           bpsepl:limit            = sfpepl:epl_limit, generic

        if sfpepl:epl_limit <> bpsepl:limit then
            error "Invalid Limit Entered"

        if sfpepl:epl_limit one of 500000, 1000000 and
           l_prior_epl_limit not one of 500000, 1000000 then
            sfpepl:epl_premium = 0

        if bpsepl:allow_premium = 0 then
            begin
            access sfpmaster, set sfpmaster:policy_no    = g_policy_no,
                                  sfpmaster:pol_year     = g_year,
                                  sfpmaster:end_sequence = g_end_sequence, generic

            if sfpmaster:policy_no    = g_policy_no and
               sfpmaster:pol_year     = g_year and
               sfpmaster:end_sequence = g_end_sequence then
                begin
                change sfpmaster
                    begin
                    sfpmaster:override_epl = 0
                    sfpmaster:total[9]     = 0
                    end
                end
            end

        activehelp if bpsepl_alias:hide_activehelp = 0 then
                       bpsepl_alias:limit
                   else
                       null ;
401     begin
        access bpsepl_alias1, set bpsepl_alias1:company_id       = l_company_id,
                                  bpsepl_alias1:state            = l_state,
                                  bpsepl_alias1:line_of_business = l_line_of_business,
                                  bpsepl_alias1:limit            = sfpepl:epl_limit, generic

        if sfpepl:epl_deductible = 0 and
           sfpepl:epl_limit <> 0 then
            sfpepl:epl_deductible = bpsdefault1:epl_deductible
        end
        sfpepl:epl_deductible/default
        hide if sfpepl:epl_limit = 0
        access bpsepl_alt1, set bpsepl_alt1:company_id       = l_company_id,
                                bpsepl_alt1:state            = l_state,
                                bpsepl_alt1:line_of_business = l_line_of_business,
                                bpsepl_alt1:limit            = sfpepl:epl_limit,
                                bpsepl_alt1:deductible       = sfpepl:epl_deductible, generic

        if sfpepl:epl_deductible <> bpsepl_alt1:deductible then
            error "Invalid Limit Entered"

        activehelp bpsepl_alias1:deductible ;
401     begin
        if sfpepl:epl_limit = 0 then
            begin
            sfpepl:epl_deductible   = 0
            sfpepl:epl_premium      = 0
            end

        if bopgeneral:class_code one of 51 and
           bopgeneral:sub_code = 60 then
            begin
            sfpepl:epl_limit        = 0
            sfpepl:epl_deductible   = 0
            end
        end
        sfpepl:epl_deductible/displayonly ;
501     sfpepl:third_party/checkbox/values="0,1"
        hide if sfpepl:epl_limit = 0 ;
601     sfpepl:retro_date ;

}

update
If UPDATEOK = "YES" And
   Abort    = "NO" Then
    Begin
    if function one of "CHANGE" and
       bpsepl:allow_premium = 1 then
        begin
        if l_override_epl = 0 then
            begin
            access sfpmaster, set sfpmaster:policy_no    = g_policy_no,
                                  sfpmaster:pol_year     = g_year,
                                  sfpmaster:end_sequence = g_end_sequence, generic

            if sfpmaster:policy_no    = g_policy_no and
               sfpmaster:pol_year     = g_year and
               sfpmaster:end_sequence = g_end_sequence then
                begin
                change sfpmaster
                    begin
                    sfpmaster:total[9] = 0
                    end
                end
            end

        display modal screen "bopmt10f"
        with initial function "CHANGE"
        end

    if function one of "CHANGE", "ADD", "NEW" then
        begin
        l_state            = bopgeneral:state
        l_company_id       = sfpname:company_id
        l_line_of_business = sfpname:line_of_business
        access sfpmaster, set sfpmaster:policy_no    = g_policy_no,
                              sfpmaster:pol_year     = g_year,
                              sfpmaster:end_sequence = g_end_sequence, generic

        Access BPSEPL, Set BPSEPL:COMPANY_ID       = l_company_id,
                           BPSEPL:STATE            = l_STATE,
                           BPSEPL:LINE_OF_BUSINESS = l_line_of_business,
                           bpsepl:limit            = sfpepl:epl_limit,
                           bpsepl:deductible       = sfpepl:epl_deductible, Generic

        l_code_1 = ""
        l_code_2 = ""
        l_code_3 = ""
        while BPSEPL:COMPANY_ID       = l_company_id and
              BPSEPL:STATE            = l_STATE and
              BPSEPL:LINE_OF_BUSINESS = l_line_of_business and
              bpsepl:limit            = sfpepl:epl_limit and
              bpsepl:deductible       = sfpepl:epl_deductible
            begin
            If sfpmaster:trans_eff >= BPSEPL:EFF_DATE Then
                Begin
                l_code_1 = bpsepl:code[1]
                l_code_2 = bpsepl:code[2]
                l_code_3 = bpsepl:code1[1]
                End

            Next BPSEPL
            End

        If L_CODE_1 <> "" Then
            Begin
            L_CODE = L_CODE_1
            Do ACCESS_sfpEND
            If L_ADD_ENDORSEMENT = "Y" And
               sfpepl:EPL_LIMIT <> 0 Then
                Do ADD_sfpEND
            else
            If L_ADD_ENDORSEMENT = "N" And
               sfpepl:epl_limit = 0 Then
                Do DELETE_sfpEND
            End

        If L_CODE_2 <> "" Then
            Begin
            L_CODE = L_CODE_2
            Do ACCESS_sfpEND
            If L_ADD_ENDORSEMENT = "Y" And
               sfpepl:EPL_LIMIT <> 0 Then
                Do ADD_sfpEND
            else
            If L_ADD_ENDORSEMENT = "N" And
               sfpepl:epl_limit = 0 Then
                Do DELETE_sfpEND
            End

        If L_CODE_3 <> "" Then
            Begin
            L_CODE = L_CODE_3
            Do ACCESS_sfpEND
            If L_ADD_ENDORSEMENT = "Y" And
               sfpepl:EPL_LIMIT <> 0 and
               bopgeneral:state = 19 Then
                Do ADD_sfpEND
            else
            If ((L_ADD_ENDORSEMENT = "N" And
               sfpepl:epl_limit = 0) or
               (l_add_endorsement = "N" and
               bopgeneral:state <> 19)) Then
                Do DELETE_sfpEND
            End
        end
    else
    if function one of "DELETE" then
        begin
        access sfpmaster, set sfpmaster:policy_no    = g_policy_no,
                              sfpmaster:pol_year     = g_year,
                              sfpmaster:end_sequence = g_end_sequence, generic

        l_state            = bopgeneral:state
        l_company_id       = sfpname:company_id
        l_line_of_business = sfpname:line_of_business
        Access BPSEPL, Set BPSEPL:COMPANY_ID       = l_company_id,
                           BPSEPL:STATE            = l_STATE,
                           BPSEPL:LINE_OF_BUSINESS = l_line_of_business,
                           bpsepl:limit            = sfpepl:epl_limit,
                           bpsepl:deductible       = sfpepl:epl_deductible, Generic

        l_code_1 = ""
        l_code_2 = ""
        l_code_3 = ""
        while BPSEPL:COMPANY_ID       = l_company_id and
              BPSEPL:STATE            = l_STATE and
              BPSEPL:LINE_OF_BUSINESS = l_line_of_business and
              bpsepl:limit            = sfpepl:epl_limit and
              bpsepl:deductible       = sfpepl:epl_deductible
            begin
            If sfpmaster:trans_eff >= BPSEPL:EFF_DATE Then
                Begin
                l_code_1 = bpsepl:code[1]
                l_code_2 = bpsepl:code[2]
                l_code_3 = bpsepl:code1[1]
                End

            Next BPSEPL
            End

        If L_CODE_1 <> "" Then
            Begin
            L_CODE = L_CODE_1
            Do DELETE_sfpEND
            End

        If L_CODE_2 <> "" Then
            Begin
            L_CODE = L_CODE_2
            Do DELETE_sfpEND
            End

        If L_CODE_3 <> "" and
           bopgeneral:state = 19 Then
            Begin
            L_CODE = L_CODE_3
            Do DELETE_sfpEND
            End
        end

    function = "redisplay"
    end

Procedure Definition

procedure read_bopgeneral
begin
access bopgeneral, set bopgeneral:policy_no    = g_policy_no,
                       bopgeneral:pol_year     = g_year,
                       bopgeneral:end_sequence = g_end_sequence, generic

l_attorney = "N"
while bopgeneral:policy_no    = g_policy_no and
      bopgeneral:pol_year     = g_year and
      bopgeneral:end_sequence = g_end_sequence
    begin
    if bopgeneral:class_code one of 51 and
       bopgeneral:sub_code = 60 then
        l_attorney = "Y"

    next bopgeneral
    end

end

Procedure ACCESS_sfpEND
Begin
Access sfpEND, Set sfpEND:policy_no    = G_policy_no ,
                   sfpend:pol_year     = g_year,
                   sfpend:end_sequence = g_end_sequence,
                   sfpEND:PREM_NO      = 0,
                   sfpEND:BUILD_NO     = 0, Generic

L_ADD_ENDORSEMENT = "Y"
while sfpEND:policy_no    = G_policy_no and
      sfpend:pol_year     = g_year and
      sfpend:end_sequence = g_end_sequence and
      sfpEND:PREM_NO      = 0 and
      sfpEND:BUILD_NO     = 0
    begin
    If sfpEND:CODE = L_CODE Then
        L_ADD_ENDORSEMENT = "N"

    Next sfpEND
    End

End

Procedure ADD_sfpEND
Begin
Access sfpEND, Set sfpEND:policy_no    = G_policy_no ,
                   sfpend:pol_year     = g_year,
                   sfpend:end_sequence = g_end_sequence,
                   sfpEND:PREM_NO      = 0,
                   sfpEND:BUILD_NO     = 0, Generic

L_SUB_CODE = 0
while sfpEND:policy_no    = G_policy_no and
      sfpend:pol_year     = g_year and
      sfpend:end_sequence = g_end_sequence and
      sfpEND:PREM_NO      = 0 and
      sfpEND:BUILD_NO     = 0
        begin
        L_SUB_CODE = sfpEND:SUB_CODE

        Next sfpEND
        End

L_SUB_CODE = L_SUB_CODE + 10

l_state = bopgeneral:state
Access SFSOPTEND, Set SFSOPTEND:COMPANY_ID       = sfpNAME:COMPANY_ID,
                      SFSOPTEND:STATE            = L_STATE,
                      SFSOPTEND:LINE_OF_BUSINESS = sfpname:LINE_OF_BUSINESS,
                      SFSOPTEND:CODE             = L_CODE, Generic

while SFSOPTEND:COMPANY_ID       = sfpNAME:COMPANY_ID and
      SFSOPTEND:STATE            = L_STATE and
      SFSOPTEND:LINE_OF_BUSINESS = sfpname:LINE_OF_BUSINESS and
      SFSOPTEND:CODE             = L_CODE
        begin
        If (sfpmaster:trans_eff >= SFSOPTEND:EFF_DATE and
           (sfpmaster:trans_eff <= sfsoptend:exp_date or
           sfsoptend:exp_date = 0)) Then
            Begin
            L_FORM_EDITION = SFSOPTEND:FORM_EDITION
            L_DESCRIPTION  = SFSOPTEND:DESCRIPTION
            End

        Next SFSOPTEND
        End

if l_form_edition <> "" then
    begin
    Add sfpEND
        Begin
        sfpEND:policy_no            =       G_policy_no
        sfpend:pol_year             =       g_year
        sfpend:end_sequence         =       g_end_sequence
        sfpEND:PREM_NO              =       0
        sfpEND:BUILD_NO             =       0
        sfpEND:SUB_CODE             =       L_SUB_CODE
        sfpEND:CODE                 =       L_CODE
        sfpEND:FORM_EDITION         =       L_FORM_EDITION
        sfpEND:DESCRIPTION          =       L_DESCRIPTION
        sfpEND:PREMIUM              =       0
        sfpend:lob_end_code         =       "X"
        end
    End

End

Procedure DELETE_sfpEND
Begin
Access sfpEND, Set sfpEND:policy_no    = G_policy_no ,
                   sfpend:pol_year     = g_year,
                   sfpend:end_sequence = g_end_sequence,
                   sfpEND:PREM_NO      = 0,
                   sfpEND:BUILD_NO     = 0, Generic

while sfpEND:policy_no    = G_policy_no and
      sfpend:pol_year     = g_year and
      sfpend:end_sequence = g_end_sequence and
      sfpEND:PREM_NO      = 0 and
      sfpEND:BUILD_NO     = 0
        begin
        If sfpEND:CODE = L_CODE Then
            Delete sfpEND

        Next sfpEND
        End

End

End
