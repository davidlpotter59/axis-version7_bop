%%
Screen
        Name = "bopMT011" ;
        Type = "Multiline" ;
        Repeat LINE_ITEMS, 7 Times Down ;
        Padcharacter = Space ;
        Highlight = Underscore ;
        Screensize = "dynamic" ;
        Windowtitle = "%a    %s Location Totals - Ver. 7.00     %m" ;
        Domain = "bopGENERAL" ;
--      resizeable = yes ;
        iconline = 0 ;

        Global Unsigned Ascii Number G_policy_NO[9] ;
        Global Unsigned Ascii Number G_year[4] ;
        Global Unsigned Ascii Number G_end_sequence[4] ;
        Global Unsigned Ascii Number G_PREM_NO[4] ;
        Global Unsigned Ascii Number G_BUILD_NO[4] ;
        Global Unsigned Ascii Number g_new_quote_no[8] ;
        Global Unsigned Ascii Number g_line_of_business[4] ;
        Global Unsigned Ascii Number g_check_reference[7] ;
        Global Unsigned Ascii Number g_agent_no[4];

        Global Unsigned Ascii Number g_opt[2] ;

        global string g_company[10] ,
                      g_company_id[10],
                      g_function[10],
                      g_first[1],
                      g_first_1[1] ;

        global MMDDYYYY date g_starting_date,
                             g_ending_date,
                             g_eff_date,
                             g_exp_date ;

        global string g_lib_1[10] ,
                      g_name[50] ,
                      g_inquiry[1] ;

        rwdate  l_bu1526_eff_date;

        local wdate l_bpsdefault2_eff_date ;

        global signed ascii number g_final_total[8] ,
                                   g_total[8] ,
                                   g_terrorism[8] ,
                                   g_surcharge[8],
                                   g_boiler[8],
                                   g_territory[8],
                                   g_irpm[8] ,
                                   g_printers_credit[8],
                                   g_total_printers[8],
                                   g_buyback_option[8],
                                   g_fungi_mold[8] ;

        global unsigned ascii number g_loss_income_factor[4]/dec=3,
                                     g_state[2] ;

        global string g_rerate[1] ;

        local array[50] of signed ascii number l_original_bop_premium[9] ;

        local array[50] of unsigned ascii number l_original_building_premium[6],
                                                 l_original_property_premium[6],
                                                 l_original_property_special[6],
                                                 l_original_liability_charge[4] ;

        local signed ascii number l_eq_building_premium[9]=0/dec=2,
                                  l_eq_contents_premium[9]=0/dec=2 ;

        Local Signed Ascii Number   L_PREM[8]=0 ,
                                    L_LOC_TOTAL[8]=0 ,
                                    l_previous_total[8]=0,
                                    l_hired_nonowned_premium[6]=0,
                                    l_previous_surcharge[8]=0,
                                    L_LOC_TOTAL_1[8]=0 ,
                                    L_LOC_TOTAL_2[8]=0,
                                    l_loc_total_3[8]=0,
                                    l_bop_premium[9]=0,
                                    l_hold_bop_premium[9]=0,
                                    L_END_PREMIUM[8]=0 ,
                                    l_adjustment_to_meet_minimum[8]=0,
                                    l_total_printers[8]=0,
                                    l_printers_total[8]=0,
                                    L_IRPM_TOTAL[6]=0 ,
                                    l_premium[9]=0 ,
--                                    l_reins_premium[9]=0,
                                    L_MISC_PREMIUM[8]=0 ,
                                    L_OPTIONAL[8]=0 ,
                                    L_PRINTERS_PERCENT[4]=0/decimals=2,
                                    l_package_deviation[4]=0/dec=2,
                                    L_PRINTERS_CREDIT[6]=0 ,
                                    L_PERCENT_OCCUPIED[3]=0,
                                    L_BOILERS_MINIMUM[8]=0,
                                    L_BUYBACK_OPTION_TOTAL[8]=0,
                                    l_fungi_total[8]=0,
                                    L_TOTAL[8]=0 ,
                                    L_TOTAL_1[8]=0,
                                    L_TOTAL_2[8]=0,
                                    l_total_3[8]=0,
                                    l_total_6[8]=0,
                                    L_TERRITORY_RATING[8]=0,
                                    L_BOILER_PREM_TOTAL[8]=0 ,
                                    l_boiler_printer_total[8]=0,
                                    L_TOTAL_END[8]=0 ,
                                    L_COMM[8]=0/dec=4 ,
                                    L_PACKAGE[8]=0/dec=3 ,
                                    L_IRPM[8]=0/dec=4 ,
                                    L_INSTALLMENT[4]=0 ,
                                    L_RATE_FACTOR[1]=0/dec=2 ,
                                    L_CREDIT_FACTOR[8]=0/dec=3 ,
                                    L_FINAL_TOTAL[8]=0 ,
                                    L_BOILER_PREM[6]=0,
                                    L_MAX_CREDITS[6]=0/decimals=3,
                                    l_location_new_total[8]=0,
                                    L_BPSCREDITS_MAXIMUM[3]=0/decimals=2 ;

        Local Unsigned Ascii Number L_MINIMUM[4]=0 ,
                                    l_row,
                                    l_col,
                                    l_basic_premium[6],
                                    l_bu2510_premium[5]=0,
                                    l_boiler_deductible_factor[5]=0/dec=3,
                                    l_restaurant_premium[4]=0,
                                    l_bu2597_premium[5]=0,
                                    l_zipcode[9]=0,
                                    l_building_code_percent[2]=0,
                                    l_territory_sub_code[4]=10,
                                    l_identity_theft[4]=0,
                                    l_default_off_premises_limit[5],
                                    l_identity_factor[8]=0/dec=4,
                                    l_total_basic_premium[8]=0,
                                    l_total_basic_premium_1[8]=0,
                                    l_val_zipcode[9],
                                    l_bu1526_factor[4]/dec=3,
                                    l_minimum_boiler[4]=0,
                                    l_minimum_1[4]=0,
                                    l_tier[2]=0,
                                    l_epl_extend_premium[6],
                                    l_tier_factor[6]=0/dec=4,
                                    l_fire_premium[6]=0,
                                    l_liability_code[1]=0,
                                    l_location_credit[2]=0,
                                    l_location_count[2]=0,
                                    l_no_locations[2]=0,
                                    l_count_locations[2]=0,
                                    l_employee_limit[8]=0,
--                                    L_CSEXEC_NUMBER[12] ,
                                    l_fuel_pump_charge[3]=0,
                                    l_liability_charge_2[4]=0,
                                    l_liability_charge_3[4]=0,
                                    l_end_sequence[4]=0,
                                    l_short_rate[4]=0/dec=2,
                                    L_OFF_PREMISE_PREM[6] ,
                                    l_off_premises_premium[6]=0,
                                    l_off_premises_limit[8]=0,
                                    l_bop_building_premium[6]=0,
                                    l_eq_construction[1]=0,
                                    l_eq_building_rate[5]=0/dec=3,
                                    l_eq_contents_rate[5]=0/dec=3,
                                    l_eq_deductible[5]=0,
                                    l_deductible_rate[4]=0/dec=2,
                                    l_deductible_per[2]=0 ,
                                    l_eq_deduct_rate[4]=0/dec=2 ,
                                    l_bop_property_premium[6]=0,
                                    l_bop_special_premium[6]=0,
                                    l_sub[2]=0,
                                    l_sub_1[2]=0,
                                    l_minimum_premium_rating[2]=0,
                                    l_change_minimum_rating[1]=0,
                                    l_liability_rate_or_charge[1]=0,
                                    l_mp_building_property[1]=0,
                                    L_FMA_FACTOR[4]=0/decimals=2,
--                                    l_apt_comm_rate[4]=0/dec=2,
                                    l_fungi_factor[6]=0/dec=4,
                                    l_fungi_minimum[4]=0,
                                    l_location_premium_10[8]=0,
                                    l_sfpmaster_total_10[8]=0,
                                    l_location_premium_11[8]=0,
                                    l_rating_territory_factor[5]=0/dec=3,
                                    l_printer[4]=0,
                                    L_TYPE[1]=0,
--                                    l_reins_factor[5]=0/dec=4,
--                                    l_reins_limit[8]=0,
--                                    l_reins_limit1[8]=0,
                                    L_AGENT_COMM[4]=0/decimals=2,
                                    L_CUSTOMER_ADJ_RATE[8]=0/decimals=4,
                                    L_CUSTOMER_ADJ_RATE_SPECIAL[8]=0/decimals=4,
                                    L_LOSS_INCOME_FACTOR_1[3]=0/decimals=2,
                                    L_AR_LIMIT[8]=0,
                                    L_AR_LIMIT_1[8]=0,
                                    L_UTILITY_LIMIT[8]=0,
                                    l_employee_dishonesty[8]=0,
                                    l_computer_limit_1[8]=0,
                                    l_computer_limit_2[8]=0,
                                    l_ar_percent[2]=0,
                                    l_extra_expense_percent[2]=0,
                                    l_signs_percent[2]=0,
                                    l_water_backup_percent[2]=0,
                                    l_valuable_papers_percent[2]=0,
                                    l_computer_hardware_percent[2]=0,
                                    l_computer_software_percent[2]=0,
                                    l_utility_percent[2]=0,
                                    l_mechanical_percent[2]=0,
                                    l_glass_percent[2]=0,
                                    l_indoor_glass_percent[2]=0,
                                    L_COMPUTER_LIMIT[8]=0,
                                    L_MECHANICAL_LIMIT[8]=0,
                                    L_EMPLOYEE_DIS_LIMIT[8]=0,
--                                    l_reins_co[6]=0,
                                    L_EXTERIOR_SIGNS_LIMIT[8]=0,
                                    L_INDOOR_GLASS_LIMIT[8]=0,
                                    L_TERRITORY_BOILER_MINIMUM[8]=0,
                                    L_COUNT[2]=0,
                                    L_WATER_BKUP_LIMIT[8]=0,
                                    L_VALUE_LIMIT[8]=0,
                                    L_VALUE_LIMIT_1[8]=0,
                                    I_CSEXEC_NUMBER[12] ,
                                    L_EDP_LIMIT[8]=0,
                                    L_SURCHARGE[6]=0,
                                    L_SURCHARGE_FACTOR[8]=0/dec=6,
                                    L_SURCHARGE_MINIMUM[2]=0,
                                    L_BOILERS_PREM[6]=0,
                                    L_RECEIPTS[8]=0,
                                    L_RECEIPTS_LIMIT[8]=0,
                                    L_RECEIPTS_CHARGE[4]=0,
                                    L_PRINTERS_ERROR[4]=0;
        Unsigned Ascii Number L_TERRORISM_PREMIUM[8]/decimals =0;
        Unsigned Ascii Number L_tpd6_TERRORISM_PREMIUM[8]/decimals =0;
        Unsigned Ascii Number L_TERROR_PERCENTAGE[5]/decimals=4;
        Unsigned Ascii Number L_TERROR_MINIMUM[3];
        Unsigned Ascii Number L_FOUND[1];
        Unsigned Ascii Number L_SUB_CODE[4];
        Unsigned Ascii Number L_PREM_NO[4];
        Wdate L_TERROR_EFF_DATE;

        local date l_surcharge_date[8] ;

        Local String L_MISC[1]="N" ,
                     l_split_comm[1]="",
                     l_supplemental_form[7],
                     l_str_zipcode[9]="",
                     l_bu2597_mp[1]="N",
                     l_extend_hired_nonowned[1],
                     l_delete_hired_nonowned[1],
                     L_MINIMUM_APPLIES[1]="N" ,
                     L_CSEXEC_APPLICATION[25]="" ,
                     l_minimum_premium_wording[16]="Minimum Premium:",
                     l_liability_first[1]="Y",
                     l_display_field[1],
                     l_enhancement[20]="Special Enhancement:",
                     L_PRO_RATE="PRO RATA" ,
                     L_DESCRIPTION[75],
                     l_policy_wide_First[1]="Y",
                     l_first_loc[1]="Y",
                     L_FORM_EDITION[25],
                     L_FIRST[1]="Y",
                     L_REPORT[15],
                     L_COPY_NAME[20],
                     l_commandline_1[17]="",
                     l_commandline_2[25]="",
                     l_boiler_added[1]="N",
                     l_pro_rata_wording[10]="Pro Rata:",
                     L_DEC[15] ,
                     l_string_printers_credit[16]="Printers Credit:",
                     l_string_printers_total[15]="Printers Total:",
--                     L_MACRO[15] ,
                     L_FMA[1]="N",
                     L_SCREEN[15] ,
                     L_SPRINKLERED[1]="N",
--                     L_INSTALLMENT_WORDING[21]="Installment Charge:",
                     L_BUYBACK[1]="N",
                     L_NO_RATING_FOR_LOCATION[1]="N",
                     L_TERRITORY_WORDING[10]="Territory:",
                     L_MP[3]="MP" ;

/* variables added 05/30/2001 to calculate the payment plan
   option based on company id, line of business and total premium
*/

        Local String L_FIRST_TIME[1]="Y";
        Unsigned Ascii Number L_HOLD_PAYMENT_PLAN[4]=0;
        String L_ENTER[1];
        Signed Ascii Number L_SUB_TOTAL[9]=0/decimals=2;
        Unsigned Ascii Number L_BUILD[4];

/* end of new variables add on 5/30/2001 */

        Include "boprate.var"

        include "update.var"

        include "prorata.var"

        include "amtdue.var"

        include "unbilled.var"

        Access bopGENERAL, Set bopGENERAL:policy_NO = G_policy_NO,
                               bopgeneral:pol_Year = g_year,
                               bopgeneral:end_sequence = g_end_sequence, generic ;

        scrollmessage = "" ;

        Include "stdkeys7.inc"

Functions

        Include "stdfunc7.inc"

        reaccess ;

EVENT DEFINITION
        default eventhandler {
                             "reload" { function = "reaccess" abort () }
                             }

Toolbar Definition
-- needs to be blank

Screen Entry
l_count_locations = 0
l_loc_total_1 = 0
l_loc_total_2 = 0
l_loc_total_3 = 0
l_total = 0
l_sub = 0
l_sub_1 = 0

access sfscompany, set sfscompany:company_id = sfpname:company_id, generic

disable(change_fn)

access sfsline, set sfsline:company_id = sfpname:company_id,
                    sfsline:line_of_business = sfpname:line_of_business,
                    sfsline:lob_subline = "00", generic

do number_locations

Access Validation
If bopGENERAL:policy_NO <> G_policy_NO or
   bopgeneral:pol_Year <> g_year or
   bopgeneral:end_sequence <> g_end_sequence Then
    Error 1000 ;

-- MSO Final Rating Screen

screen
{
%%
_
*------------------------------------------------------------------------------*
|  Loc      Build          Premium        Boiler &             Printers Errors |
|  No         No                          Machinery             & Omissions    |
|  ____      ____        _____________    __________              __________   |
|                                                                              |
|                                                                              |
|                                                                              |
|                                                                              |
|                                                                              |
|                                                                              |
*------------------------------------------------------------------------------*
| ________________       _____________    _______________         __________   |
| Buyback Option Charge: _____________    Fungi/Mold Limitations: __________   |
| Total All Locations:   _____________    __________             ___________   |
| Total Boiler:          _____________    ____________________    __________   |
| ____________________   _____________                                         |
*---------------------------------------*--------------------------------------*
| Total:                 _____________  |               Previous Totals        |
| IRPM Total:            _____________  |        Total:          ____________  |
| EPL:                   _____________  |        Surcharge:      ____________  |
| Terrorism:             _____________  *--------------------------------------*
| Identity Theft:        _____________                                         |
| Final Total:           _____________      Unearned Premium:    ____________  |
| Surcharge:             _____________      ___________________  ____________  |
|                                           ___________________  ____________  |
|                                           ___________________  ____________  |
*------------------------------------------------------------------------------*

%%

components

Fields
101     begin
                l_total_3 = 0
                l_total   = 0
        end
        l_display_field/displayonly/showasguidetext ;
501     begin
            l_boiler_prem          = 0
            l_boiler_prem_total    = 0
            l_buyback_option_total = 0
            l_total_printers       = 0
            l_total                = 0
            l_final_total          = 0
            l_installment          = 0
            l_irpm_total           = 0
            l_territory_rating     = 0
            l_surcharge            = 0
        end
        bopGENERAL:PREM_NO/displayonly   tagged LINE_ITEMS;
502     bopGENERAL:BUILD_NO/displayonly  tagged LINE_ITEMS;
503     Begin
        if g_inquiry not one of "Y" then
            begin
            if sfsline:lob_code one of "CPORTFOLIO" then
                begin
                access sfpmastsupp, set sfpmastsupp:policy_no        = g_policy_no,
                                        sfpmastsupp:pol_year         = g_year,
                                        sfpmastsupp:end_sequence     = g_end_sequence,
                                        sfpmastsupp:line_of_business = g_line_of_business, exact

                if sfpmastsupp:override_location_credit = 0 then
                    do location_credit
                end
            else
                begin
                access sfpmaster, set sfpmaster:policy_no    = g_policy_no,
                                      sfpmaster:pol_year     = g_year,
                                      sfpmaster:end_sequence = g_end_sequence, exact

                if sfpmaster:override_location_credit = 0 then
                    do location_credit
                end

            Do LOC_TOTAL
            If SFSCOMPANY:SPECIAL_TERRITORY_RATING = 1 and
               sfscompany:boiler_rating not one of 4 Then
                begin
                Do TERRITORY_RATING
                end
            l_loc_total_3 = l_loc_total + l_loc_total_3
            do update_location_total
            end
        End
        L_LOC_TOTAL/displayonly/mask="$$$$$$$9.99"  tagged LINE_ITEMS
        hide when g_inquiry = "Y" ;
504     L_BOILERS_PREM/displayonly/mask="$$$$$9.99" tagged LINE_ITEMS
        hide when g_inquiry = "Y" ;
505     L_PRINTERS_ERROR/displayonly/mask="$$$9.99" tagged LINE_ITEMS
        hide when g_inquiry = "Y";

503     begin
            do get_Endorsement_premium
            if sfsline:lob_code one of "CPORTFOLIO" then
                begin
                access sfpmastsupp, set sfpmastsupp:policy_no        = g_policy_no,
                                        sfpmastsupp:pol_year         = g_year,
                                        sfpmastsupp:end_sequence     = g_end_sequence,
                                        sfpmastsupp:line_of_business = g_line_of_business, exact

                l_total_6 = l_total_6 + sfpmastsupp:total[1]
                if l_first_loc = "Y" then
                    begin
                    l_terrorism_premium = sfpmastsupp:terrorism_premium
                    l_first_loc = "N"
                    end
                else
                    l_terrorism_premium = 0
                end
            else
                begin
                access sfpmaster, set sfpmaster:policy_no        = g_policy_no,
                                      sfpmaster:pol_year         = g_year,
                                      sfpmaster:end_sequence     = g_end_sequence, generic

                l_total_6 = l_total_6 + sfpmaster:total[1]
                if l_first_loc = "Y" then
                    begin
                    l_terrorism_premium = sfpmaster:terrorism_premium
                    l_first_loc = "N"
                    end
                else
                    l_terrorism_premium = 0
                end
            l_loc_total = bopgeneral:bop_premium +
                          bopgeneral:optional_total -
                          bopgeneral:boilers_premium +
                          l_end_premium +
                          bopgeneral:liability_charge
            l_loc_total_3 = l_loc_total + l_loc_total_3
        end
        l_loc_total/displayonly/mask="$$$$$$$9.99" tagged LINE_ITEMS
        hide when g_inquiry not one of "Y" ;
504     bopgeneral:BOILERS_PREMIUM/displayonly/mask="$$$$$9.99" tagged LINE_ITEMS
        hide when g_inquiry not one of "Y" ;
505     begin
            l_total_printers = l_total_printers + bopgeneral:printers_error_premium
            l_total_3 = bopgeneral:bop_premium + l_total_3
            l_territory_rating = bopgeneral:territory_charge_credit +
                                 l_territory_rating
        end
        bopgeneral:PRINTERS_ERROR_PREMIUM/displayonly/mask="$$$9.99" tagged LINE_ITEMS
        hide when g_inquiry not one of "Y" ;

101     Begin
        if g_inquiry not one of "Y" then
        begin
        If l_boiler_added = "Y" then
            Begin
            Do BOILER_MINIMUM
            End
        do printers_credit
        if sfscompany:special_territory_rating = 1 and
           sfscompany:boiler_rating not one of 4 then
            begin
            L_TERRITORY_RATING = (L_LOC_TOTAL_1 - (L_LOC_TOTAL_2
                                 + L_BOILER_PREM_TOTAL +
                                 L_TOTAL_PRINTERS))
            end
        else
            l_territory_rating = 0
        Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO    = G_policy_NO,
                                     bopgeneral_alias:pol_year     = g_year,
                                     bopgeneral_alias:end_Sequence = g_end_sequence,
                                     bopgeneral_alias:prem_no      = bopgeneral:prem_no,
                                     bopgeneral_alias:build_no     = bopgeneral:build_no, generic

        Change bopGENERAL_ALIAS
            Begin
            bopGENERAL_ALIAS:territory_charge_credit = l_territory_rating
            End

        l_total = l_total_3
        Do TOTALS
--        if l_adjustment_to_meet_minimum = 0 then
--        l_total_3 = l_total
        if sfpname:company_id = "FARMERS" then
            do rate_epl
        Do FINAL_TOTAL
        If bopGENERAL:REMOVE_TERRORISM_FORM = 0 Then  --they may want to r
            begin
            L_TERRORISM_PREMIUM = 0
            Do GET_TERRORISM_PREMIUM
            If L_IRPM_TOTAL <> 0 Then
                L_IRPM_TOTAL = L_IRPM_TOTAL + l_terrorism_premium
            Else
                L_FINAL_TOTAL = L_FINAL_TOTAL + l_terrorism_premium
            end
        Else
/*            Begin
            do remove_terrorism_form
            do add_terrorism_exclusion
            if sfsline:lob_code one of "CPORTFOLIO" then
                begin
                Access sfpmastsupp, Set sfpmastsupp:policy_NO        = G_policy_NO,
                                        sfpmastsupp:pol_Year         = g_year,
                                        sfpmastsupp:end_sequence     = g_end_Sequence,
                                        sfpmastsupp:line_of_business = g_line_of_business, generic

                Change sfpmastsupp
                    Begin
                    sfpmastsupp:TERRORISM_PREMIUM = 0
                    end
                End
            else
                begin
                Access sfpmaster, Set sfpmaster:policy_NO = G_policy_NO,
                                      sfpmaster:pol_year = g_year,
                                      sfpmaster:end_sequence = g_end_sequence, Generic

                Change sfpMASTER
                    Begin
                    sfpMASTER:TERRORISM_PREMIUM = 0
                    end
                End
            End    */

            Begin
            do remove_terrorism_form
            do add_terrorism_exclusion
            l_state = bopgeneral:state
            do access_sfsmsoterror
            if l_terror_percentage <> 0 then
                begin
                if sfscompany:boiler_rating one of 4 then
                    begin
                    l_tpd6_terrorism_premium = ((L_FINAL_TOTAL - l_boiler_prem_total)
                                               * l_terror_PERCENTAGE)
                    end
                else
                    begin
                    if l_irpm_total <> 0 then
                        l_tpd6_terrorism_premium = l_irpm_total * l_terror_percentage
                    else
                        l_tpd6_terrorism_premium = l_final_total * l_terror_percentage
                    end

                if l_tpd6_terrorism_premium < l_terror_minimum then
                    l_tpd6_terrorism_premium = l_terror_minimum
                end

            if sfsline:lob_code one of "CPORTFOLIO" then
                begin
                Access sfpmastsupp, Set sfpmastsupp:policy_NO        = G_policy_NO,
                                        sfpmastsupp:pol_Year         = g_year,
                                        sfpmastsupp:end_sequence     = g_end_Sequence,
                                        sfpmastsupp:line_of_business = g_line_of_business, generic

                Change sfpmastsupp
                    Begin
                    sfpmastsupp:TERRORISM_PREMIUM = 0
                    end
                End
            else
                begin
                Access sfpMASTER, Set sfpMASTER:policy_NO = G_policy_NO,
                                      sfpmaster:pol_year = g_year,
                                      sfpmaster:end_sequence = g_end_sequence, Generic

                Change sfpMASTER
                    Begin
                    sfpMASTER:TERRORISM_PREMIUM = 0
                    sfpmaster:tpd6_terrorism_premium = l_tpd6_terrorism_premium
                    end
                End
            End

        do identity_theft

        if sfscompany:boiler_rating = 4 then
            do pliga

        if l_irpm_total <> 0 then
            l_irpm_total = l_irpm_total + l_identity_theft
        else
            l_final_total = l_final_total + l_identity_theft

        do update_totals
        if sfpmaster:trans_code one of 14 then
            begin
            do access_arspayplan
            if arspayplan:manual_payment_plan = 0 then
                Do INSTALLMENT
            end
        if sfpname:reinsurance = "Y" then
            do reinsurance

        Do AMT_DUE
        If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
            I_AMT_DUE = I_AMT_DUE + I_INSTALLMENT_AMT_DUE + I_SURCHARGE_AMT_DUE
        Else
            I_AMT_DUE = I_AMT_DUE + I_SURCHARGE_AMT_DUE
        end
        End
        l_display_field/displayonly/showasguidetext
        hide when g_inquiry = "Y" ;

1301    l_string_printers_credit/displayonly/showasguidetext
        hide when sfpname:company_id = "FLEMINGTON" ;
1302    l_printers_credit/displayonly/mask="$$$,$$$.ZZ-"/showasguidetext
        hide when sfpname:company_id not one of "FLEMINGTON"
        hide when g_inquiry = "Y" ;
1302    l_printers_credit/displayonly/mask="$$$,$$$.99-"
        hide when sfpname:company_id one of "FLEMINGTON"
        hide when g_inquiry = "Y" ;
1302    sfpmaster:total[4]/displayonly/mask="$$$,$$$.ZZ-"/showasguidetext
        hide when sfpname:company_id not one of "FLEMINGTON"
        hide when g_inquiry not one of "Y"
        hide when sfsline:lob_code one of "CPORTFOLIO" ;
1302    sfpmaster:total[4]/displayonly/mask="$$$,$$$.99-"
        hide when sfpname:company_id one of "FLEMINGTON"
        hide when g_inquiry not one of "Y"
        hide when sfsline:lob_code one of "CPORTFOLIO" ;
1302    sfpmastsupp:total[4]/displayonly/mask="$$$,$$$.ZZ-"/showasguidetext
        hide when sfpname:company_id not one of "FLEMINGTON"
        hide when g_inquiry not one of "Y"
        hide when sfsline:lob_code not one of "CPORTFOLIO" ;
1302    sfpmastsupp:total[4]/displayonly/mask="$$$,$$$.99-"
        hide when sfpname:company_id one of "FLEMINGTON"
        hide when g_inquiry not one of "Y"
        hide when sfsline:lob_code not one of "CPORTFOLIO" ;

1303    l_string_printers_total/display/showasguidetext
        hide when sfpname:company_id = "FLEMINGTON" ;
1304    l_total_printers/displayonly/mask="$$$,$$$.ZZ-"/showasguidetext
        hide when sfpname:company_id not one of "FLEMINGTON"  ;
1304    l_total_printers/displayonly/mask="$$$,$$$.99-"
        hide when sfpname:company_id one of "FLEMINGTON" ;

1401    l_buyback_option_total/displayonly/mask="$$$,$$$.99-"
        hide when g_inquiry = "Y" ;
1401    sfpmaster:total[3]/displayonly/mask="$$$,$$$.99-"
        hide when g_inquiry not one of "Y"
        hide when sfsline:lob_code one of "CPORTFOLIO" ;
1401    sfpmastsupp:total[3]/displayonly/mask="$$$,$$$.99-"
        hide when g_inquiry not one of "Y"
        hide when sfsline:lob_code not one of "CPORTFOLIO" ;

1402    l_fungi_total/displayonly/mask="$$$,$$$.99-"
        hide when g_inquiry = "Y" ;
1402    sfpmaster:total[5]/displayonly/mask="$$$,$$$.99-"
        hide when g_inquiry not one of "Y"        hide when sfsline:lob_code one of "CPORTFOLIO" ;
1402    sfpmastsupp:total[5]/displayonly/mask="$$$,$$$.99-"
        hide when g_inquiry not one of "Y"
        hide when sfsline:lob_code not one of "CPORTFOLIO" ;

1501    l_loc_total_3/displayonly/mask="$$$,$$$.99-" ;
1502    l_territory_wording/showasguidetext/displayonly
        hide when sfscompany:special_territory_Rating = 0 ;
1503    l_territory_rating/mask="$$$,$$$.99-"/displayonly/showasguidetext
        hide when sfscompany:special_territory_rating = 0 ;

1601    l_boiler_prem_total/mask="$$$,$$$.99-"/displayonly
        hide when g_inquiry = "Y";
1601    sfpmaster:total[2]/displayonly/mask="$$$,$$$.99-"
        hide when g_inquiry not one of "Y"
        hide when sfsline:lob_code one of "CPORTFOLIO" ;
1601    sfpmastsupp:total[2]/displayonly/mask="$$$,$$$.99-"
        hide when g_inquiry not one of "Y"
        hide when sfsline:lob_code not one of "CPORTFOLIO" ;

1602    l_enhancement/showasguidetext/displayonly
        hide when bopgeneral:special_enhancement = 0 ;
1603    l_enhancement_premium/mask="$$$,$$$.99-"/displayonly/showasguidetext
        hide when g_inquiry = "Y"
        hide when bopgeneral:special_enhancement = 0 ;
1603    sfpmaster:total[8]/displayonly/mask="$$$,$$$.99-"
        hide when g_inquiry not one of "Y"
        hide when sfsline:lob_code one of "CPORTFOLIO"
        hide when bopgeneral:special_enhancement = 0 ;
1603    sfpmastsupp:total[8]/displayonly/mask="$$$,$$$.99-"
        hide when g_inquiry not one of "Y"
        hide when sfsline:lob_code not one of "CPORTFOLIO"
        hide when bopgeneral:special_enhancement = 0 ;

1701    l_minimum_premium_wording/displayonly/showasguidetext
        hide when l_adjustment_to_meet_minimum = 0
        hide when g_inquiry = "Y" ;
1701    l_minimum_premium_wording/displayonly/showasguidetext
        hide when sfpmaster:total[6] = 0
        hide when g_inquiry = "N" ;
1702    l_adjustment_to_meet_minimum/mask="$$$,$$$.ZZ-"/displayonly/showasguidetext
        hide when g_inquiry = "Y"
        hide when bopgeneral:adjustment_to_meet_minimum = 0 ;
1702    sfpmaster:total[6]/displayonly/mask="$$$,$$$.ZZ-"/showasguidetext
        hide when g_inquiry not one of "Y"
        hide when sfsline:lob_code one of "CPORTFOLIO" ;
1702    sfpmastsupp:total[6]/displayonly/mask="$$$,$$$.ZZ-"/showasguidetext
        hide when g_inquiry not one of "Y"
        hide when sfsline:lob_code not one of "CPORTFOLIO" ;

1901    l_final_total - l_terrorism_premium - l_identity_theft - sfpmaster:total[9] - sfpmaster:total[10]/mask="$$$,$$$.99-"/displayonly
        hide when g_inquiry = "Y"
        hide when l_irpm_total <> 0;
1901    l_final_total/mask="$$$,$$$.99-"/displayonly
        hide when g_inquiry = "Y"
        hide when l_irpm_total = 0;
1901    sfpmaster:total[18] - sfpmaster:terrorism_premium - l_identity_theft - sfpmaster:total[9] - sfpmaster:total[10]/mask="$$$,$$$.99-"/displayonly
        hide when g_inquiry not one of "Y"
        hide when sfpmaster:total[19] <> 0
        hide when sfsline:lob_code one of "CPORTFOLIO" ;
1901    sfpmaster:total[18]/mask="$$$,$$$.99-"/displayonly
        hide when g_inquiry not one of "Y"
        hide when sfpmaster:total[19] = 0
        hide when sfsline:lob_code one of "CPORTFOLIO" ;
1901    sfpmastsupp:total[18] - sfpmastsupp:terrorism_premium - sfpmastsupp:total[7]/mask="$$$,$$$.99-"/displayonly
        hide when g_inquiry not one of "Y"
        hide when sfpmastsupp:total[19] <> 0
        hide when sfsline:lob_code not one of "CPORTFOLIO" ;
1901    sfpmastsupp:total[18]/mask="$$$,$$$.99-"/displayonly
        hide when g_inquiry not one of "Y"
        hide when sfpmastsupp:total[19] = 0
        hide when sfsline:lob_code not one of "CPORTFOLIO" ;

-- display irpm difference
2001    ((l_irpm_total - l_terrorism_premium - l_identity_theft) -
        l_final_total)/mask="$$$,$$$.99-"/displayonly
        hide when l_irpm_total = 0
        hide when bpsdefault:display_irpm_difference = 0
        hide when g_inquiry = "Y" ;
2001    ((sfpmaster:total[19] - l_terrorism_premium - sfpmaster:total[7]) -
        sfpmaster:total[18])/mask="$$$,$$$.99-"/displayonly
        hide when sfpmaster:total[19] = 0
        hide when g_inquiry not one of "Y"
        hide when sfsline:lob_code one of "CPORTFOLIO"
        hide when bpsdefault:display_irpm_difference = 0 ;
2001    ((sfpmastsupp:total[19] - l_terrorism_premium - sfpmastsupp:total[7]) -
        sfpmastsupp:total[18])/mask="$$$,$$$.99-"/displayonly
        hide when sfpmastsupp:total[19] = 0
        hide when g_inquiry not one of "Y"
        hide when sfsline:lob_code not one of "CPORTFOLIO"
        hide when bpsdefault:display_irpm_difference = 0 ;

-- display entire irpm
2001    l_irpm_total - l_terrorism_premium - l_identity_theft - sfpmaster:total[9] - sfpmaster:total[10]/mask="$$$,$$$.99-"/displayonly
        hide when l_irpm_total = 0
        hide when g_inquiry = "Y"
        hide when bpsdefault:display_irpm_difference <> 0 ;
2001    sfpmaster:total[19] - sfpmaster:terrorism_premium - sfpmaster:total[7] - sfpmaster:total[9] - sfpmaster:total[10]/mask="$$$,$$$.99-"/displayonly
        hide when sfpmaster:total[19] = 0
        hide when g_inquiry not one of "Y"
        hide when sfsline:lob_code one of "CPORTFOLIO"
        hide when bpsdefault:display_irpm_difference <> 0 ;
2001    sfpmastsupp:total[19] - sfpmastsupp:terrorism_premium - sfpmastsupp:total[7]/mask="$$$,$$$.99-"/displayonly
        hide when sfpmastsupp:total[19] = 0
        hide when g_inquiry not one of "Y"
        hide when sfsline:lob_code not one of "CPORTFOLIO"
        hide when bpsdefault:display_irpm_difference <> 0 ;

2101    l_epl_prem + l_epl_extend_premium/mask="$$$,$$$.99-"/displayonly
        hide when g_inquiry = "Y" ;
2101    sfpmaster:total[9] + sfpmaster:total[10]/mask="$$$,$$$.99-"/displayonly
        hide when g_inquiry not one of "Y"
        hide when sfsline:lob_code one of "CPORTFOLIO" ;
2101    sfpmastsupp:total[9] + sfpmaster:total[10]/mask="$$$,$$$.99-"/displayonly
        hide when g_inquiry not one of "Y"
        hide when sfsline:lob_code not one of "CPORTFOLIO" ;

2201    l_terrorism_premium/mask="$$$,$$$.99-"/displayonly
        hide when g_inquiry = "Y" ;
2201    sfpmaster:terrorism_premium/mask="$$$,$$$.99-"/displayonly
        hide when g_inquiry not one of "Y"
        hide when sfsline:lob_code one of "CPORTFOLIO" ;
2201    sfpmastsupp:terrorism_premium/mask="$$$,$$$.99-"/displayonly
        hide when g_inquiry not one of "Y"
        hide when sfsline:lob_code not one of "CPORTFOLIO" ;

2301    l_identity_theft/mask="$$$,$$$.99-"/displayonly
        hide when g_inquiry = "Y" ;
2301    sfpmaster:total[7]/mask="$$$,$$$.99-"/displayonly
        hide when g_inquiry not one of "Y"
        hide when sfsline:lob_code one of "CPORTFOLIO" ;
2301    sfpmastsupp:total[7]/mask="$$$,$$$.99-"/displayonly
        hide when g_inquiry not one of "Y"
        hide when sfsline:lob_code not one of "CPORTFOLIO" ;

2401    l_final_total/mask="$$$,$$$.99-"/displayonly
        hide when g_inquiry = "Y"
        hide when l_irpm_total <> 0 ;
2401    l_irpm_total/mask="$$$,$$$.99-"/displayonly
        hide when g_inquiry = "Y"
        hide when l_irpm_total = 0 ;
2401    sfpmaster:total[18]/mask="$$$,$$$.99-"/displayonly
        hide when g_inquiry not one of "Y"
        hide when sfpmaster:total[19] <> 0
        hide when sfsline:lob_code one of "CPORTFOLIO" ;
2401    sfpmastsupp:total[18]/mask="$$$,$$$.99-"/displayonly
        hide when g_inquiry not one of "Y"
        hide when sfpmastsupp:total[19] <> 0
        hide when sfsline:lob_code not one of "CPORTFOLIO" ;
2401    sfpmaster:total[19]/mask="$$$,$$$.99-"/displayonly
        hide when g_inquiry not one of "Y"
        hide when sfpmaster:total[19] = 0
        hide when sfsline:lob_code one of "CPORTFOLIO" ;
2401    sfpmastsupp:total[19]/mask="$$$,$$$.99-"/displayonly
        hide when g_inquiry not one of "Y"
        hide when sfpmastsupp:total[19] = 0
        hide when sfsline:lob_code not one of "CPORTFOLIO" ;

2501    l_surcharge/mask="$$$,$$$.99-"/displayonly
        hide when g_inquiry = "Y" ;
2501    sfpmaster:surcharge/mask="$$$,$$$.99-"/displayonly
        hide when g_inquiry not one of "Y"
        hide when sfsline:lob_code one of "CPORTFOLIO" ;
2501    sfpmastsupp:surcharge/mask="$$$,$$$.99-"/displayonly
        hide when g_inquiry not one of "Y"
        hide when sfsline:lob_code not one of "CPORTFOLIO" ;

2402    i_amt_due/mask="$$$,$$$.99-"/displayonly
        hide when g_inquiry = "Y" ;
2402    sfpmaster:amt_due_total[1] + sfpmaster:amt_due_total[3]/displayonly/mask="$$$,$$$.99-"
        hide when g_inquiry not one of "Y"
        hide when sfpmaster:trans_code one of 10, 14 ;

2502    L_PRO_RATA_WORDING/displayonly/showasguidetext
        hide when I_PRO_RATA = 0 ;
2503    I_PRO_RATA/displayonly/showasguidetext
        hide when I_PRO_RATA = 0;

2002    L_PREVIOUS_TOTAL/displayonly/mask="$$$$$$9.99" ;
2002    Begin
        if sfsline:lob_code one of "CPORTFOLIO" then
            begin
            L_END_SEQUENCE = G_END_SEQUENCE - 1
            Access SFPMASTSUPP, Set SFPMASTSUPP:POLICY_NO = G_POLICY_NO,
                                    SFPMASTSUPP:POL_YEAR = G_YEAR,
                                    SFPMASTSUPP:END_SEQUENCE = L_END_SEQUENCE,
                                    sfpmastsupp:line_of_business = bopgeneral:line_of_business, Generic

            L_PREVIOUS_TOTAL = SFPMASTSUPP:TOTAL[1] + SFPMASTSUPP:TOTAL[2] +
                               sfpmastsupp:terrorism_premium + sfpmastsupp:total[7]
            L_PREVIOUS_SURCHARGE = SFPMASTSUPP:SURCHARGE
            end
        else
            begin
            L_END_SEQUENCE = G_END_SEQUENCE - 1
            Access SFPMASTER, Set SFPMASTER:POLICY_NO = G_POLICY_NO,
                                  SFPMASTER:POL_YEAR = G_YEAR,
                                  SFPMASTER:END_SEQUENCE = L_END_SEQUENCE, Generic

            L_PREVIOUS_TOTAL = SFPMASTER:TOTAL[1] + SFPMASTER:TOTAL[2] +
                               sfpmaster:terrorism_premium + sfpmaster:total[7] +
                               sfpmaster:total[9] + sfpmaster:total[10]
            L_PREVIOUS_SURCHARGE = SFPMASTER:SURCHARGE
            end
        End
        L_PREVIOUS_TOTAL/mask="$$$$$$9.99"/displayonly ;
2102    L_PREVIOUS_SURCHARGE/displayonly/mask="$$$$$$9.99" ;

2601    Begin
        If SFPNAME:BILL_PLAN = "AC" And
           SFPMASTER:TOTAL[1] <> 0 Then
            I_BILLED = "Billed:"
        End
        I_BILLED/displayonly/showasguidetext ;
2701    Begin
        If SFPNAME:BILL_PLAN = "AC" And
           SFPMASTER:TOTAL[1] <> 0 Then
            I_UNBILLED = "Unbilled:"
        End
        I_UNBILLED/displayonly/showasguidetext  ;
2602    I_BILLED_PREMIUM/displayonly/mask="$$$$$$$9.99"/showasguidetext
        hide when I_BILLED_PREMIUM = 0;
2702    I_UNBILLED_PREMIUM/displayonly/mask="$$$$$$$9.99"/showasguidetext
        hide when I_UNBILLED_PREMIUM = 0 ;

}

screen exit
L_MISC = "N"

Procedure Definition

Procedure RATE_EPL
Begin
--if sfpmaster:override_epl = 0 then
--    begin
if sfpname:company_id = "FARMERS" then
    begin
    l_epl_premium = l_total
    l_commandline_2 = str(bopgeneral:policy_no,9) +
                      str(bopgeneral:pol_year,4) +
                      str(bopgeneral:end_sequence,4) +
                      str(l_epl_premium,8)
    if sfscompany:debug_mode = 0 then
        proc("csbatch bopup11f %s",l_commandline_2)/noconsole
    else
        proc("csbatch bopup11f %s",l_commandline_2)
--    end

    access sfpmaster, set sfpmaster:policy_no    = g_policy_no,
                          sfpmaster:pol_year     = g_year,
                          sfpmaster:end_sequence = g_end_sequence, generic

    l_epl_prem = sfpmaster:total[9]
    end

End

procedure get_endorsement_premium
begin
Access SFSMSOTERROR, Set SFSMSOTERROR:COMPANY_ID       = bopgeneral:COMPANY_ID,
                         SFSMSOTERROR:STATE            = bopgeneral:STATE,
                         SFSMSOTERROR:LINE_OF_BUSINESS = bopgeneral:line_of_business, generic

access sfpend, set sfpend:policy_no    = g_policy_no,
                   sfpend:pol_year     = g_year,
                   sfpend:end_sequence = g_end_sequence, generic

l_end_premium = 0
while sfpend:policy_no    = g_policy_no and
      sfpend:pol_year     = g_year and
      sfpend:end_sequence = g_end_sequence
    begin
    if sfpend:form_edition = "" then
        delete sfpend

    if sfpend:prem_no  = 0 and
       sfpend:build_no = 0 and
       l_policy_wide_first = "Y" then
        begin
        l_total_6 = 0
        if sfpend:terrorism_form = 0 then
            l_end_premium = l_end_premium + sfpend:premium
        end

    next sfpend
    end

l_policy_wide_first = "N"
access sfpend, set sfpend:policy_no    = g_policy_no,
                   sfpend:pol_year     = g_Year,
                   sfpend:end_sequence = g_end_sequence,
                   sfpend:prem_no      = bopgeneral:prem_no,
                   sfpend:build_no     = bopgeneral:build_no, generic

while sfpend:policy_no    = g_policy_no and
      sfpend:pol_year     = g_Year and
      sfpend:end_sequence = g_End_sequence and
      sfpend:prem_no      = bopgeneral:prem_no and
      sfpend:build_no     = bopgeneral:build_no
        begin
        if sfpend:form_edition = "" then
            delete sfpend

        if sfpend:terrorism_form = 0 then
            l_end_premium = l_end_premium + sfpend:premium

        next sfpend
        end

end

procedure number_locations
begin
access bopgeneral_alt, set bopgeneral_alt:policy_no    = g_policy_no,
                           bopgeneral_alt:pol_year     = g_year,
                           bopgeneral_alt:end_sequence = g_end_sequence, generic

l_no_locations = 0
while bopgeneral_alt:policy_no    = g_policy_no and
      bopgeneral_alt:pol_Year     = g_year and
      bopgeneral_alt:end_sequence = g_end_sequence
        begin
        l_no_locations = l_no_locations + 1

        next bopgeneral_alt
        end

end

Procedure AMT_DUE
Begin
/* set effective date using bopmstr:trans_exp and subtracting 1 to get prior
   year, sfpname:eff_date is only correct if updating current policy, if
   updating prior policies sfpname:eff_date will not be correct */

if sfsline:lob_code one of "CPORTFOLIO" then
    begin
    Access SFPMASTER, Set SFPMASTER:POLICY_NO    = G_POLICY_NO,
                          SFPMASTER:POL_YEAR     = G_YEAR,
                          SFPMASTER:END_SEQUENCE = G_END_SEQUENCE, Exact

    Access sfpmastsupp, Set sfpmastsupp:POLICY_NO        = G_POLICY_NO,
                            sfpmastsupp:POL_YEAR         = G_YEAR,
                            sfpmastsupp:END_SEQUENCE     = G_END_SEQUENCE,
                            sfpmastsupp:line_of_business = g_line_of_business, Exact

    I_EFF_DATE     = Dateadd(SFPMASTER:TRANS_EXP,0,-1)
    I_END_SEQUENCE = BOPGENERAL:END_SEQUENCE - 1
    Access SFPMASTSUPP_ALIAS,
       Set SFPMASTSUPP_ALIAS:POLICY_NO    = G_POLICY_NO,
           SFPMASTSUPP_ALIAS:POL_YEAR     = G_YEAR,
           SFPMASTSUPP_ALIAS:END_SEQUENCE = I_END_SEQUENCE,
           sfpmastsupp_alias:line_of_business = g_line_of_business, exact

    I_PREVIOUS                = SFPMASTSUPP_ALIAS:TOTAL[1] + SFPMASTSUPP_ALIAS:TOTAL[2] + sfpmastsupp_alias:terrorism_premium + sfpmastsupp_alias:total[7]
    I_PREVIOUS_WITHOUT_BOILER = SFPMASTSUPP_ALIAS:TOTAL[1]
    I_SURCHARGE_PREVIOUS      = SFPMASTSUPP_ALIAS:SURCHARGE

    I_ANNUAL                  = SFPMASTSUPP:TOTAL[1] + SFPMASTSUPP:TOTAL[2] + sfpmastsupp:terrorism_premium + sfpmastsupp:total[7]
    I_AMT_DUE                 = SFPMASTSUPP:TOTAL[20]
    I_AMT_DUE_WITHOUT_BOILER  = SFPMASTSUPP:TOTAL[1]
    I_SURCHARGE_ANNUAL        = SFPMASTSUPP:SURCHARGE
    I_SURCHARGE_AMT_DUE       = SFPMASTSUPP:SURCHARGE
    I_SURCHARGE               = SFPMASTSUPP:SURCHARGE

    I_INSTALLMENT_ANNUAL      = SFPMASTER:INSTALLMENT_CHARGE
    I_INSTALLMENT_AMT_DUE     = SFPMASTER:INSTALLMENT_CHARGE
    I_INSTALLMENT             = SFPMASTER:INSTALLMENT_CHARGE
    I_TRANS_CODE              = SFPMASTER:TRANS_CODE
    I_EFF_DATE                = SFPNAME:EFF_DATE
    I_TRANS_EFF               = SFPMASTER:TRANS_EFF
    I_TRANS_EXP               = SFPNAME:EXP_DATE
    I_BILL_PLAN               = SFPNAME:BILL_PLAN
    end
else
    begin
    Access SFPMASTER, Set SFPMASTER:POLICY_NO    = G_POLICY_NO,
                          SFPMASTER:POL_YEAR     = G_YEAR,
                          SFPMASTER:END_SEQUENCE = G_END_SEQUENCE, Exact

    I_EFF_DATE = Dateadd(SFPMASTER:TRANS_EXP,0,-1)
    I_END_SEQUENCE = BOPGENERAL:END_SEQUENCE - 1
    Access SFPMASTER_ALIAS, Set SFPMASTER_ALIAS:POLICY_NO    = G_POLICY_NO,
                                SFPMASTER_ALIAS:POL_YEAR     = G_YEAR,
                                SFPMASTER_ALIAS:END_SEQUENCE = I_END_SEQUENCE, Exact

    I_PREVIOUS = SFPMASTER_ALIAS:TOTAL[1] + SFPMASTER_ALIAS:TOTAL[2] + sfpmaster_alias:terrorism_premium + sfpmaster_alias:total[7] +
                 sfpmaster_alias:total[9]
    I_PREVIOUS_WITHOUT_BOILER = SFPMASTER_ALIAS:TOTAL[1]
    I_INSTALLMENT_PREVIOUS = SFPMASTER_ALIAS:INSTALLMENT_CHARGE
    I_SURCHARGE_PREVIOUS = SFPMASTER_ALIAS:SURCHARGE

    I_ANNUAL = SFPMASTER:TOTAL[1] + SFPMASTER:TOTAL[2] + sfpmaster:terrorism_premium + sfpmaster:total[7] +
               sfpmaster:total[9]
    I_AMT_DUE = SFPMASTER:TOTAL[20]
    I_AMT_DUE_WITHOUT_BOILER = SFPMASTER:TOTAL[1]
    I_INSTALLMENT_ANNUAL = SFPMASTER:INSTALLMENT_CHARGE
    I_INSTALLMENT_AMT_DUE = SFPMASTER:INSTALLMENT_CHARGE
    I_SURCHARGE_ANNUAL = SFPMASTER:SURCHARGE
    I_SURCHARGE_AMT_DUE = SFPMASTER:SURCHARGE
    I_TRANS_CODE = SFPMASTER:TRANS_CODE
    I_EFF_DATE = SFPNAME:EFF_DATE
    I_TRANS_EFF = SFPMASTER:TRANS_EFF
    I_TRANS_EXP = SFPNAME:EXP_DATE
    I_BILL_PLAN = SFPNAME:BILL_PLAN
    I_INSTALLMENT = SFPMASTER:INSTALLMENT_CHARGE
    I_SURCHARGE = SFPMASTER:SURCHARGE
    end

if sfpmaster_alias:trans_code one of 11 and
   sfpmaster:trans_code one of 12 then
    begin
    I_ANNUAL = I_ANNUAL - I_PREVIOUS
    I_SURCHARGE_ANNUAL = I_SURCHARGE_ANNUAL - I_SURCHARGE_PREVIOUS

    i_amt_due = i_annual + sfpmaster:total[10]
    i_surcharge_amt_due = i_surcharge_annual
    end
else
    begin
    Include "amtdue.pro"
    end

if sfsline:lob_code one of "CPORTFOLIO" then
    begin
    Access sfpmastsupp, Set sfpmastsupp:POLICY_NO        = G_POLICY_NO,
                            sfpmastsupp:POL_YEAR         = G_YEAR,
                            sfpmastsupp:END_SEQUENCE     = G_END_SEQUENCE,
                            sfpmastsupp:line_of_business = g_line_of_business, Exact

    Change sfpmastsupp
        Begin
        sfpmastsupp:AMT_DUE_TOTAL[1] = I_AMT_DUE
        sfpmastsupp:AMT_DUE_TOTAL[2] = I_INSTALLMENT_AMT_DUE
        sfpmastsupp:AMT_DUE_TOTAL[3] = I_SURCHARGE_AMT_DUE
        If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
            sfpmastsupp:AMT_DUE_TOTAL[20] = I_AMT_DUE + I_INSTALLMENT_AMT_DUE +
                                          I_SURCHARGE_AMT_DUE
        Else
            sfpmastsupp:AMT_DUE_TOTAL[20] = I_AMT_DUE + I_SURCHARGE_AMT_DUE
        sfpmastsupp:RAW_PREMIUM_AMT_DUE = I_AMT_DUE_WITHOUT_BOILER
        sfpmastsupp:total[15]           = i_unbilled_premium
        sfpmastsupp:total[16]           = i_billed_premium
        End
    end
else
    begin
    Access SFPMASTER, Set SFPMASTER:POLICY_NO    = G_POLICY_NO,
                          SFPMASTER:POL_YEAR     = G_YEAR,
                          SFPMASTER:END_SEQUENCE = G_END_SEQUENCE, Exact

    Change SFPMASTER
        Begin
        SFPMASTER:AMT_DUE_TOTAL[1] = I_AMT_DUE
        SFPMASTER:AMT_DUE_TOTAL[2] = I_INSTALLMENT_AMT_DUE
        SFPMASTER:AMT_DUE_TOTAL[3] = I_SURCHARGE_AMT_DUE
        If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
            SFPMASTER:AMT_DUE_TOTAL[20] = I_AMT_DUE + I_INSTALLMENT_AMT_DUE +
                                          I_SURCHARGE_AMT_DUE
        Else
            SFPMASTER:AMT_DUE_TOTAL[20] = I_AMT_DUE + I_SURCHARGE_AMT_DUE
        SFPMASTER:RAW_PREMIUM_AMT_DUE = I_AMT_DUE_WITHOUT_BOILER
        sfpmaster:total[15]           = i_unbilled_premium
        sfpmaster:total[16]           = i_billed_premium
        End
    end

/* end of amt_due */
End

Procedure INSTALLMENT_BUCKETS
Begin
-- this program does not need this so i am putting junk information here
-- this procedure is used in prsup800 and both this program and that program
-- use amtdue.pro so i needed to put this here
I_BILL_PLAN = SFPNAME:BILL_PLAN

End

Procedure PRO_RATA
Begin
I_EFF_DATE = Dateadd(SFPMASTER:TRANS_EXP,0,-1)
I_SHORT_RATE = SFPMASTER:SHORT_RATE
I_TOTAL_DAYS = I_EFF_DATE - SFPMASTER:TRANS_EXP
I_CX_DAYS = I_EFF_DATE - SFPMASTER:TRANS_EFF

Include "prorata.pro"

/* end of pro_rata */
End

Procedure UNBILLED
Begin
/* set i_end_sequence to get the first record of the policy to figure out
   unbilled premium */

I_END_SEQUENCE = 0
if sfsline:lob_code one of "CPORTFOLIO" then
    begin
    Access SFPMASTSUPP_ALIAS, Set SFPMASTSUPP_ALIAS:POLICY_NO    = SFPMASTSUPP:POLICY_NO,
                                  SFPMASTSUPP_ALIAS:POL_YEAR     = SFPMASTSUPP:POL_YEAR,
                                  SFPMASTSUPP_ALIAS:END_SEQUENCE = I_END_SEQUENCE, generic

    I_ORIGINAL_PREMIUM = SFPMASTSUPP_ALIAS:TOTAL[1] +
                        + SFPMASTSUPP_ALIAS:SURCHARGE
    end
else
    begin
    Access SFPMASTER_ALIAS, Set SFPMASTER_ALIAS:POLICY_NO    = SFPMASTER:POLICY_NO,
                                SFPMASTER_ALIAS:POL_YEAR     = SFPMASTER:POL_YEAR,
                                SFPMASTER_ALIAS:END_SEQUENCE = I_END_SEQUENCE, Exact

    I_ORIGINAL_PREMIUM = SFPMASTER_ALIAS:TOTAL[1] + SFPMASTER_ALIAS:INSTALLMENT_CHARGE
                        + SFPMASTER_ALIAS:SURCHARGE
    end

Include "unbilled.pro"

/* end of unbilled */
End

Procedure identity_theft
begin
Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO    = G_policy_NO,
                             bopgeneral_alias:pol_year     = g_Year,
                             bopgeneral_alias:end_sequence = g_end_sequence,
                             bopGENERAL_ALIAS:PREM_NO      = G_PREM_NO,
                             bopGENERAL_ALIAS:BUILD_NO     = G_BUILD_NO, Exact

L_STATE = bopGENERAL_ALIAS:STATE
access bpsrate, set bpsrate:company_id = bopgeneral:company_id,
                    bpsrate:state = bopgeneral:state,
                    bpsrate:line_of_business = bopgeneral:line_of_business, generic

while bpsrate:company_id = bopgeneral:company_id and
      bpsrate:state = bopgeneral:state and
      bpsrate:line_of_business = bopgeneral:line_of_business
        begin
        if sfpname:eff_date >= bpsrate:eff_date then
            begin
            l_identity_factor = bpsrate:identity_factor

            end

        next bpsrate
        end

if l_irpm_total <> 0 then
    l_identity_theft = L_IRPM_TOTAL * l_identity_factor
Else
    l_identity_theft = L_FINAL_TOTAL * l_identity_factor

end

Procedure GET_TERRORISM_PREMIUM
begin
Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = G_policy_NO,
                             bopgeneral_alias:pol_year = g_year,
                             bopgeneral_alias:end_sequence = g_end_sequence,
                             bopGENERAL_ALIAS:PREM_NO  = G_PREM_NO,
                             bopGENERAL_ALIAS:BUILD_NO = G_BUILD_NO, Exact

L_STATE = bopGENERAL_ALIAS:STATE
Do ACCESS_SFSMSOTERROR
if l_terror_percentage <> 0 then
    begin
    if sfscompany:boiler_rating one of 4 then
        begin
        L_TERRORISM_PREMIUM = ((L_FINAL_TOTAL - l_boiler_prem_total)
                               * l_terror_PERCENTAGE)
        end
    else
        begin
        If L_IRPM_TOTAL <> 0 Then
            L_TERRORISM_PREMIUM = L_IRPM_TOTAL * l_terror_percentage
        Else
            L_TERRORISM_PREMIUM = L_FINAL_TOTAL * l_terror_PERCENTAGE
        end

    If L_TERRORISM_PREMIUM <= L_TERROR_MINIMUM Then
        begin
        L_TERRORISM_PREMIUM = L_TERROR_MINIMUM
        end

    Do ADD_TERRORISM_ENDORSEMENT
    do remove_terrorism_exclusion

    end

end

procedure remove_terrorism_exclusion
begin
Access sfpEND, Set sfpEND:policy_NO = G_policy_NO,
                   sfpend:pol_year = g_year,
                   sfpend:end_sequence = g_end_sequence,
                   sfpend:prem_no  = 0,
                   sfpend:build_no = 0, Generic

While sfpEND:policy_NO = G_policy_NO and
      sfpend:pol_year = g_year and
      sfpend:end_sequence = g_end_sequence and
      sfpend:prem_no  = 0 and
      sfpend:build_no = 0
    begin
    If sfpEND:CODE = SFSMSOTERROR:TERRORISM_FORM_TO_REMOVE Then
        begin
        Delete sfpEND
        end

    if sfpend:code = uppercase(sfsmsoterror:tpd_forms_to_print[2]) then
        delete sfpend

     Next sfpEND
     end

end

procedure remove_terrorism_form
begin
Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = G_policy_NO,
                             bopgeneral_alias:pol_year = g_year,
                             bopgeneral_alias:end_sequence = g_end_sequence,
                             bopGENERAL_ALIAS:PREM_NO  = G_PREM_NO,
                             bopGENERAL_ALIAS:BUILD_NO = G_BUILD_NO, Exact

L_STATE = bopGENERAL_ALIAS:STATE
Do ACCESS_SFSMSOTERROR
Access sfpEND, Set sfpEND:policy_NO = G_policy_NO,
                   sfpend:pol_year = g_year,
                   sfpend:end_sequence = g_end_sequence,
                   sfpend:prem_no  = 0,
                   sfpend:build_no = 0, Generic

While sfpEND:policy_NO = G_policy_NO and
      sfpend:pol_Year = g_year and
      sfpend:end_sequence = g_End_sequence and
      sfpend:prem_no  = 0 and
      sfpend:build_no = 0
    begin
    If sfpEND:CODE = SFSMSOTERROR:TERRORISM_FORM_TO_ADD Then
        begin
        Delete sfpEND
        end

    if sfpend:code = uppercase(sfsmsoterror:tpd_forms_to_print[2]) then
        delete sfpend

     Next sfpEND
     end

end

Procedure ADD_TERRORISM_exclusion
begin
Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = G_policy_NO,
                             bopgeneral_alias:pol_year = g_year,
                             bopgeneral_alias:end_sequence = g_end_sequence,
                             bopGENERAL_ALIAS:PREM_NO  = G_PREM_NO,
                             bopGENERAL_ALIAS:BUILD_NO = G_BUILD_NO, Exact

L_STATE = bopGENERAL_ALIAS:STATE
Do ACCESS_SFSMSOTERROR
Access sfpEND, Set sfpEND:policy_NO = G_policy_NO,
                   sfpend:pol_year = g_year,
                   sfpend:end_sequence = g_end_sequence,
                   sfpend:prem_no  = 0,
                   sfpend:build_no = 0, Generic

While sfpEND:policy_NO = G_policy_NO and
      sfpend:pol_Year = g_year and
      sfpend:end_sequence = g_End_sequence and
      sfpend:prem_no  = 0 and
      sfpend:build_no = 0
    begin
    If sfpEND:CODE = SFSMSOTERROR:TERRORISM_FORM_TO_REMOVE Then
        begin
        Delete sfpEND
        end
    if sfpend:code = uppercase(sfsmsoterror:tpd_forms_to_print[2]) then
        delete sfpend

     Next sfpEND
     end

Access sfpEND, Set sfpEND:policy_NO = G_policy_NO,
                   sfpend:pol_year = g_year,
                   sfpend:end_sequence = g_end_sequence, generic

Do SUBCODE
l_sub_code = l_sub_code + 10
L_CODE     = SFSMSOTERROR:TERRORISM_FORM_TO_REMOVE
Do ACCESS_KEY
Add sfpEND
    Begin
    sfpEND:policy_NO        = G_policy_NO
    sfpend:pol_year         = g_year
    sfpend:end_sequence     = g_end_sequence
    sfpEND:PREM_NO          = 0
    sfpEND:BUILD_NO         = 0
    sfpEND:SUB_CODE         = L_SUB_CODE
    sfpEND:CODE             = SFSMSOTERROR:TERRORISM_FORM_TO_REMOVE
    sfpEND:FORM_EDITION     = L_FORM_EDITION
    sfpEND:PREMIUM          = 0
    sfpEND:DESCRIPTION      = L_DESCRIPTION
    sfpend:terrorism_form   = 1
    sfpend:lob_end_code     = "X"
    End

if ((sfscompany:boiler_rating = 4 and
   sfpname:policy_type one of "R") or
   (sfscompany:boiler_rating = 4 and
   sfpname:previous_policy_no <> 0) or
   (sfscompany:boiler_rating = 4 and
   sfpmaster:trans_code one of 14)) then
    begin
    Do SUBCODE
    l_sub_code = l_sub_code + 10
    L_CODE     = uppercase(SFSMSOTERROR:tpd_forms_to_print[2])
    Do ACCESS_KEY
    Add sfpEND
        Begin
        sfpEND:policy_NO        = G_policy_NO
        sfpend:pol_year         = g_year
        sfpend:end_sequence     = g_end_sequence
        sfpEND:PREM_NO          = 0
        sfpEND:BUILD_NO         = 0
        sfpEND:SUB_CODE         = L_SUB_CODE
        sfpEND:CODE             = uppercase(sfsmsoterror:tpd_forms_to_print[2])
        sfpEND:FORM_EDITION     = L_FORM_EDITION
        sfpEND:PREMIUM          = 0
        sfpEND:DESCRIPTION      = L_DESCRIPTION
        sfpend:terrorism_form   = 1
        sfpend:lob_end_code     = "X"
        end
    End

end

Procedure ADD_TERRORISM_ENDORSEMENT
begin
Access sfpEND, Set sfpEND:policy_NO    = G_policy_NO,
                   sfpend:pol_Year     = g_Year,
                   sfpend:end_sequence = g_End_sequence, Generic

L_FOUND = 0
L_FIRST  = "N"
While sfpEND:policy_NO    = G_policy_NO and
      sfpend:pol_year     = g_year and
      sfpend:end_sequence = g_end_sequence
    begin
    If sfpEND:CODE = SFSMSOTERROR:TERRORISM_FORM_TO_ADD Then
        begin
        Delete sfpEND
        end

    if sfpend:code = uppercase(sfsmsoterror:tpd_forms_to_print[2]) then
        delete sfpend
     Next sfpEND
     end

Access sfpEND, Set sfpEND:policy_NO    = G_policy_NO,
                   sfpend:pol_Year     = g_Year,
                   sfpend:end_sequence = g_End_sequence, Generic

Do SUBCODE
l_sub_code = l_sub_code + 10
L_CODE     = SFSMSOTERROR:TERRORISM_FORM_TO_ADD
Do ACCESS_KEY
Add sfpEND
    Begin
    sfpEND:policy_NO        = G_policy_NO
    sfpend:pol_Year         = g_year
    sfpend:end_sequence     = g_End_sequence
    sfpEND:PREM_NO          = 0
    sfpEND:BUILD_NO         = 0
    sfpEND:SUB_CODE         = L_SUB_CODE
    sfpEND:CODE             = SFSMSOTERROR:TERRORISM_FORM_TO_ADD
    sfpEND:FORM_EDITION     = L_FORM_EDITION
    sfpEND:PREMIUM          = L_TERRORISM_PREMIUM
    sfpEND:DESCRIPTION      = L_DESCRIPTION
    sfpend:terrorism_form   = 1
    sfpEND:MINIMUM_PREMIUM  = Str(SFSMSOTERROR:MINIMUM_PREMIUM)
    sfpend:lob_end_code     = "X"
    End

Do ADD_TERROR_PREMIUM_sfpMASTER
end

Procedure ADD_TERROR_PREMIUM_sfpMASTER
begin
if sfsline:lob_code one of "CPORTFOLIO" then
    begin
    Access sfpmastsupp, Set sfpmastsupp:policy_NO        = G_policy_NO,
                            sfpmastsupp:pol_Year         = g_Year,
                            sfpmastsupp:end_sequence     = g_End_sequence,
                            sfpmastsupp:line_of_business = g_line_of_Business, Generic

    If sfpmastsupp:policy_NO    = G_policy_NO and
       sfpmastsupp:pol_year     = g_year and
       sfpmastsupp:end_sequence = g_end_sequence Then
        begin
        Change sfpmastsupp
            Begin
            sfpmastsupp:TERRORISM_PREMIUM = L_TERRORISM_PREMIUM
            End
        end
    end
else
    begin
    Access sfpMASTER, Set sfpMASTER:policy_NO    = G_policy_NO,
                          sfpmaster:pol_Year     = g_Year,
                          sfpmaster:end_sequence = g_End_sequence, Generic

    If sfpMASTER:policy_NO    = G_policy_NO and
       sfpmaster:pol_year     = g_year and
       sfpmaster:end_sequence = g_end_sequence Then
        begin
        Change sfpMASTER
            Begin
            sfpMASTER:TERRORISM_PREMIUM = L_TERRORISM_PREMIUM
            End
        end
    end

end

Procedure ACCESS_SFSMSOTERROR
begin
Access SFSMSOTERROR, Set SFSMSOTERROR:COMPANY_ID       = bopgeneral:COMPANY_ID,
                         SFSMSOTERROR:STATE            = bopgeneral:STATE,
                         SFSMSOTERROR:LINE_OF_BUSINESS = bopgeneral:line_of_business, generic

l_terror_percentage = 0
l_terror_minimum = 0
While SFSMSOTERROR:COMPANY_ID       = bopgeneral:COMPANY_ID And
      SFSMSOTERROR:STATE            = bopgeneral:STATE And
      SFSMSOTERROR:LINE_OF_BUSINESS = bopgeneral:line_of_business
    begin
    if (sfpname:eff_date >= sfsmsoterror:eff_date and
       (sfpname:eff_date <= sfsmsoterror:exp_date or
       sfsmsoterror:exp_date = 0)) then
        begin
        L_TERROR_EFF_DATE   = SFSMSOTERROR:EFF_DATE
        L_TERROR_PERCENTAGE = SFSMSOTERROR:PERCENTAGE
        L_TERROR_MINIMUM    = SFSMSOTERROR:MINIMUM_PREMIUM
        end

    Next SFSMSOTERROR
    end

Access SFSMSOTERROR, Set SFSMSOTERROR:COMPANY_ID       = bopgeneral:COMPANY_ID,
                         SFSMSOTERROR:STATE            = bopgeneral:STATE,
                         SFSMSOTERROR:LINE_OF_BUSINESS = bopgeneral:line_of_business,
                         SFSMSOTERROR:EFF_DATE         = L_TERROR_EFF_DATE, Exact

end

Procedure ACCESS_KEY
Begin
Access SFSOPTEND, Set SFSOPTEND:COMPANY_ID       = bopgeneral:COMPANY_ID ,
                      SFSOPTEND:STATE            = bopgeneral:STATE,
                      SFSOPTEND:LINE_OF_BUSINESS = bopgeneral:line_of_business,
                      SFSOPTEND:CODE             = L_CODE, Generic


While SFSOPTEND:COMPANY_ID       = bopgeneral:COMPANY_ID And
      SFSOPTEND:STATE            = bopgeneral:STATE And
      SFSOPTEND:LINE_OF_BUSINESS = bopgeneral:line_of_business And
      SFSOPTEND:CODE             = L_CODE
        Begin
        If (sfpNAME:EFF_DATE >= SFSOPTEND:EFF_DATE and
           (sfpname:eff_date <= sfsoptend:exp_date or
           sfsoptend:exp_date = 0)) Then
            Begin
            L_DESCRIPTION  = SFSOPTEND:DESCRIPTION
            L_FORM_EDITION = SFSOPTEND:FORM_EDITION
            End
        Next SFSOPTEND
        End

End

Procedure SUBCODE
Begin
Access sfpEND_ALIAS, Set sfpEND_ALIAS:policy_NO    = sfpNAME:policy_NO,
                         sfpend_alias:pol_year     = sfpname:pol_year,
                         sfpend_alias:end_sequence = sfpname:end_sequence,
                         sfpend_alias:prem_no      = 0,
                         sfpend_alias:build_no     = 0, generic

L_SUB_CODE = 0
while sfpEND_ALIAS:policy_NO    = sfpNAME:policy_NO and
      sfpend_alias:pol_Year     = sfpname:pol_year and
      sfpend_alias:end_sequence = sfpname:end_Sequence and
      sfpend_alias:prem_no      = 0 and
      sfpend_alias:build_no     = 0
        begin
        L_SUB_CODE = sfpEND_ALIAS:SUB_CODE

        Next sfpEND_ALIAS
        End

End

Procedure CHECK_LOCATION
Begin
Access sfpLOCATION_ALIAS, Set sfpLOCATION_ALIAS:policy_NO = G_policy_NO,
                              sfplocation_alias:pol_year = g_year,
                              sfplocation_alias:end_sequence = g_end_sequence, Generic

L_NO_RATING_FOR_LOCATION = "N"
while sfpLOCATION_ALIAS:policy_NO = G_policy_NO and
      sfplocation_alias:pol_year = g_year and
      sfplocation_alias:end_sequence = g_End_sequence
    begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = sfpLOCATION_ALIAS:policy_NO,
                                 bopgeneral_alias:pol_year = sfplocation_alias:pol_year,
                                 bopgeneral_alias:end_Sequence = sfplocation_alias:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO  = sfpLOCATION_ALIAS:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = sfpLOCATION_ALIAS:BUILD_NO, Generic

    If sfpLOCATION_ALIAS:PREM_NO  <> bopGENERAL_ALIAS:PREM_NO Or
       sfpLOCATION_ALIAS:BUILD_NO <> bopGENERAL_ALIAS:BUILD_NO Then
        L_NO_RATING_FOR_LOCATION = "Y"

    Next sfpLOCATION_ALIAS
    End

End

procedure reinsurance
begin
l_commandline_2 = str(bopgeneral:policy_no,9) +
                  str(bopgeneral:pol_year,4) +
                  str(bopgeneral:end_sequence,4) +
                  str(l_territory_rating,8)
if sfscompany:debug_mode = 1 then
    proc("csbatch bopup11d %s",l_commandline_2)
else
    proc("csbatch bopup11d %s",l_commandline_2)/noconsole

end

procedure location_credit
begin
access bopgeneral_alias, set bopgeneral_alias:policy_no = bopgeneral:policy_no,
                             bopgeneral_alias:pol_year = bopgeneral:pol_year,
                             bopgeneral_alias:end_sequence = bopgeneral:end_sequence, generic

l_location_count = 0
while bopgeneral_alias:policy_no = bopgeneral:policy_no and
      bopgeneral_alias:pol_Year = bopgeneral:pol_Year and
      bopgeneral_alias:end_sequence = bopgeneral:end_sequence
    begin
    if l_prem_no <> bopgeneral_alias:prem_no then
        begin
        l_prem_no = bopgeneral_alias:prem_no
        l_location_count = l_location_count + 1
        end

    next bopgeneral_alias
    end

if l_location_count > 10 then
    l_location_count = 10
access bpslocation, set bpslocation:company_id       = bopgeneral:company_id,
                        bpslocation:state            = bopgeneral:state,
                        bpslocation:line_of_business = bopgeneral:line_of_business,
                        bpslocation:no_locations     = l_location_count, generic

while bpslocation:company_id       = bopgeneral:company_id and
      bpslocation:state            = bopgeneral:state and
      bpslocation:line_of_business = bopgeneral:line_of_business and
      bpslocation:no_locations     = l_location_count
        begin
        if (sfpname:eff_date >= bpslocation:eff_date and
           (sfpname:eff_date <= bpslocation:exp_date or
           bpslocation:exp_date = 0)) then
            begin
            if sfsline:lob_code one of "CPORTFOLIO" then
                begin
                access sfpmastsupp, set sfpmastsupp:policy_no        = bopgeneral:policy_no,
                                        sfpmastsupp:pol_year         = bopgeneral:pol_Year,
                                        sfpmastsupp:end_sequence     = bopgeneral:end_sequence,
                                        sfpmastsupp:line_of_business = bopgeneral:line_of_business, exact

                if sfpmastsupp:override_location_credit = 0 then
                    begin
                    change sfpmastsupp
                        begin
                        sfpmastsupp:location_credit = bpslocation:credit
                        end
                    end
                end
            else
                begin
                access sfpmaster, set sfpmaster:policy_no    = bopgeneral:policy_no,
                                      sfpmaster:pol_year     = bopgeneral:pol_Year,
                                      sfpmaster:end_sequence = bopgeneral:end_sequence, exact

                if sfpmaster:override_location_credit = 0 then
                    begin
                    change sfpmaster
                        begin
                        sfpmaster:location_credit = bpslocation:credit
                        end
                    end
                end
            end

        next bpslocation
        end

end

Procedure LOC_TOTAL
Begin
l_commandline_2 = str(bopgeneral:policy_no,9) + str(bopgeneral:pol_year,4) + str(bopgeneral:end_sequence,4) +
                  str(bopgeneral:prem_no,4) + str(bopgeneral:build_no,4)
if sfscompany:debug_mode = 0 then
    proc("cli csbatch bopup011c %s",l_commandline_2)/noconsole
else
    proc("cli csbatch bopup011c %s",l_commandline_2)

access sfplocation, set sfplocation:policy_no    = bopgeneral:policy_no,
                        sfplocation:pol_year     = bopgeneral:pol_year,
                        sfplocation:end_sequence = bopgeneral:end_sequence,
                        sfplocation:prem_no      = bopgeneral:prem_no,
                        sfplocation:build_no     = bopgeneral:build_no, generic

Access bpssupplemental, Set bpssupplemental:COMPANY_ID       = bopgeneral:company_id,
                            bpssupplemental:state            = bopgeneral:state,
                            bpssupplemental:LINE_OF_BUSINESS = bopgeneral:line_of_business, generic

l_special_ar_limit          = 0
l_customer_prop_limit       = 0
l_signs_limit               = 0
l_computer_limit_1          = 0
l_computer_limit_2          = 0
l_valuable_papers_limit     = 0
l_fire_limit                = 0
l_ar_percent                = 0
l_signs_percent             = 0
l_water_backup_percent      = 0
l_valuable_papers_percent   = 0
l_computer_hardware_percent = 0
l_computer_software_percent = 0
l_utility_percent           = 0
l_mechanical_percent        = 0
l_glass_percent             = 0
l_indoor_glass_percent      = 0
while bpssupplemental:company_id       = bopgeneral:company_id and
      bpssupplemental:state            = bopgeneral:state and
      bpssupplemental:line_of_business = bopgeneral:line_of_business
        begin
        if sfpname:eff_date >= bpssupplemental:eff_date then
            begin
            L_SPECIAL_AR_LIMIT          = bpssupplemental:ar_limit
            L_CUSTOMER_PROP_LIMIT       = bpssupplemental:CUSTOMER_PROP_LIMIT
            L_SIGNS_LIMIT               = bpssupplemental:SIGNS_LIMIT
            L_VALUABLE_PAPERS_LIMIT     = bpssupplemental:VALUABLE_PAPERS_LIMIT
            l_special_water_backup_limit = bpssupplemental:water_backup_limit
            L_FIRE_LIMIT                = bpssupplemental:FIRE_LIMIT
            l_special_glass_limit       = bpssupplemental:building_glass
            l_special_glass_limit_1     = bpssupplemental:indoor_glass_limit
            l_special_utility_limit     = bpssupplemental:utility_limit
            l_special_mechanical_limit  = bpssupplemental:mechanical_limit
            l_building_code_percent     = bpssupplemental:building_code_percent
            l_computer_limit_1          = bpssupplemental:computer_coverage_hardware +
                                          bpssupplemental:computer_coverage_media
            l_computer_limit_2          = bpssupplemental:extra_expense_limit
            l_computer_hardware         = bpssupplemental:computer_coverage_hardware
            l_computer_software         = bpssupplemental:computer_coverage_media
            l_extra_expense             = bpssupplemental:extra_expense_limit
            l_employee_dishonesty       = bpssupplemental:employee_dishonesty
            l_ar_percent                = bpssupplemental:ar_percent
            l_signs_percent             = bpssupplemental:signs_percent
            l_water_backup_percent      = bpssupplemental:water_backup_percent
            l_valuable_papers_percent   = bpssupplemental:valuable_papers_percent
            l_computer_hardware_percent = bpssupplemental:computer_hardware_percent
            l_computer_software_percent = bpssupplemental:computer_software_percent
            l_extra_expense_percent     = bpssupplemental:extra_expense_percent
            l_utility_percent           = bpssupplemental:utility_percent
            l_mechanical_percent        = bpssupplemental:mechanical_percent
            l_glass_percent             = bpssupplemental:glass_percent
            l_indoor_glass_percent      = bpssupplemental:indoor_glass_percent
            l_off_premises              = bpssupplemental:off_premises_b
            end

       next bpssupplemental
       end

/*l_val_zipcode = sfplocation:zipcode
l_str_zipcode = sfplocation:str_zipcode[1,5] + "0000"
access sfszipcode, set sfszipcode:company_id       = sfpname:company_id,
                       sfszipcode:state            = bopgeneral:state,
                       sfszipcode:line_of_business = bopgeneral:line_of_business,
                       sfszipcode:str_zipcode      = l_str_zipcode, generic

l_tier = 0
while sfszipcode:company_Id       = sfpname:company_id and
      sfszipcode:state            = bopgeneral:state and
      sfszipcode:line_of_business = bopgeneral:line_of_business and
      sfszipcode:str_zipcode      = l_str_zipcode
        begin
        if (sfpname:eff_date >= sfszipcode:eff_date and
           (sfpname:eff_date <= sfszipcode:exp_date or
           sfszipcode:exp_date = 0)) then
            begin
            l_tier            = sfszipcode:tier
            end

        next sfszipcode
        end

if l_tier = 0 then
    l_tier = 3
access sfstier, set sfstier:company_id       = sfpname:company_id,
                    sfstier:state            = bopgeneral:state,
                    sfstier:line_of_business = bopgeneral:line_of_business,
                    sfstier:tier             = l_tier, generic

l_wind_deductible = 0
while sfstier:company_Id       = sfpname:company_id and
      sfstier:state            = bopgeneral:state and
      sfstier:line_of_business = bopgeneral:line_of_business and
      sfstier:tier             = l_tier
        begin
        if (sfpname:eff_date >= sfstier:eff_date and
           (sfpname:eff_date <= sfstier:exp_date or
           sfstier:exp_date = 0)) then
            begin
            l_wind_deductible  = sfstier:wind_deductible
            end

        next sfstier
        end

access bopgeneral_alias, set bopgeneral_alias:policy_no    = bopgeneral:policy_no,
                             bopgeneral_alias:pol_year     = bopgeneral:pol_year,
                             bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                             bopgeneral_alias:prem_no      = bopgeneral:prem_no,
                             bopgeneral_alias:build_no     = bopgeneral:build_no, generic

if bopgeneral_alias:policy_no    = bopgeneral:policy_no and
   bopgeneral_alias:pol_year     = bopgeneral:pol_year and
   bopgeneral_alias:end_sequence = bopgeneral:end_sequence and
   bopgeneral_alias:prem_no      = bopgeneral:prem_no and
   bopgeneral_alias:build_no     = bopgeneral:build_no then
    begin
    change bopgeneral_alias
        begin
        if l_wind_deductible <> 0 then
            bopgeneral_alias:wind_deductible = l_wind_deductible
        bopgeneral_alias:tier            = l_tier
        end
    end*/

l_tier_factor = 0
l_count_locations = l_count_locations + 1
Access SFSLINE_ALIAS, Set SFSLINE_ALIAS:COMPANY_ID = bopgeneral:company_id,
                          SFSLINE_ALIAS:LINE_OF_BUSINESS = bopgeneral:line_of_business,
                          SFSLINE_ALIAS:LOB_SUBLINE = "00",Generic

Access sfpMASTER, Set sfpMASTER:policy_NO = bopGENERAL:policy_NO,
                      sfpmaster:pol_year = bopgeneral:pol_year,
                      sfpmaster:end_sequence = bopgeneral:end_sequence, Generic

If sfpMASTER:policy_NO <> bopGENERAL:policy_NO and
   sfpmaster:pol_year <> bopgeneral:pol_year and
   sfpmaster:end_sequence <> bopgeneral:end_sequence Then
    Add sfpMASTER
        Begin
        sfpMASTER:policy_NO        =       bopGENERAL:policy_NO
        sfpmaster:pol_Year         =       bopgeneral:pol_year
        sfpmaster:End_sequence     =       bopgeneral:end_sequence
        End

if sfsline:lob_code one of "CPORTFOLIO" then
    begin
    access sfpmastsupp, set sfpmastsupp:policy_no        = bopgeneral:policy_no,
                            sfpmastsupp:pol_year         = bopgeneral:pol_year,
                            sfpmastsupp:end_sequence     = bopgeneral:end_sequence,
                            sfpmastsupp:line_of_business = bopgeneral:line_of_business, generic

    l_form = sfpmastsupp:form
    l_off_premises_limit = sfpmastsupp:off_premises_limit
    l_delete_hired_nonowned = sfpmastsupp:delete_hired_nonowned
    l_extend_hired_nonowned = sfpmastsupp:extend_hired_nonowned
    l_liability_code = sfpmastsupp:liability_code
    l_location_credit = sfpmastsupp:location_credit
    l_deductible = sfpmastsupp:deductible
    end
else
    begin
    l_form = sfpmaster:form
    l_off_premises_limit = sfpmaster:off_premises_limit
    l_delete_hired_nonowned = sfpmaster:delete_hired_nonowned
    l_extend_hired_nonowned = sfpmaster:extend_hired_nonowned
    l_liability_code = sfpmaster:liability_code
    l_location_credit = sfpmaster:location_credit
    l_deductible = sfpmaster:deductible
    end

switch(l_form)
  case 1, 3 : begin
              if bopgeneral:Restaurant = 1 then
                  l_supplemental_form = "BU0421"
              else
                  l_supplemental_form = "BU0403"
              end
  default   : begin
              if bopgeneral:restaurant = 1 then
                  l_supplemental_form = "BU0424"
              else
                  l_supplemental_form = "BU0413"
              end
  end

Do RATE_ALARM

access bpsdefault, set bpsdefault:company_id       = bopgeneral:company_id,
                       bpsdefault:line_of_business = bopgeneral:line_of_business,
                       bpsdefault:form             = l_form, generic

access bpsdefault2, set bpsdefault2:company_id = bopgeneral:company_id,
                        bpsdefault2:state = bopgeneral:state,
                        bpsdefault2:line_of_business = bopgeneral:line_of_business,
                        bpsdefault2:supplemental_form = l_supplemental_form, generic

while bpsdefault2:company_id = bopgeneral:company_id and
      bpsdefault2:state = bopgeneral:state and
      bpsdefault2:line_of_business = bopgeneral:line_of_business and
      bpsdefault2:supplemental_form = l_supplemental_form
        begin
        if (sfpname:eff_date >= bpsdefault2:eff_date and
           (sfpname:eff_date <= bpsdefault2:exp_date or
           bpsdefault2:exp_date = 0)) then
            l_bpsdefault2_eff_date = bpsdefault2:eff_date

        next bpsdefault2
        end

access bpsdefault2, set bpsdefault2:company_id = bopgeneral:company_id,
                        bpsdefault2:state = bopgeneral:state,
                        bpsdefault2:line_of_business = bopgeneral:line_of_business,
                        bpsdefault2:supplemental_form = l_supplemental_form,
                        bpsdefault2:eff_date = l_bpsdefault2_eff_date, generic

l_default_off_premises_limit = bpsdefault2:off_premises_b
if l_default_off_premises_limit = 0 then
    l_default_off_premises_limit = bpsdefault:off_premises_b

Access sfpEND, Set sfpEND:policy_NO = bopGENERAL:policy_NO,
                   sfpend:pol_year = bopgeneral:pol_year,
                   sfpend:end_sequence = bopgeneral:end_sequence, generic

L_FMA = "N"
while sfpEND:policy_NO = bopGENERAL:policy_NO and
      sfpend:pol_year = bopgeneral:pol_year and
      sfpend:end_sequence = bopgeneral:end_sequence
    begin
    If sfpEND:CODE one of "FMA100", "BU0507" Then
        Begin
        access bopoperations, set bopoperations:policY_no = sfpend:policy_no,
                                  bopoperations:pol_year = sfpend:pol_year,
                                  bopoperations:end_sequence = sfpend:end_sequence,
                                  bopoperations:prem_no = sfpend:prem_no,
                                  bopoperations:build_no = sfpend:build_no, generic

        if (sfpend:code = "FMA100" or
           (sfpend:code = "BU0507" and
           bopoperations:exclude_adj_injury = "Y")) then
            begin
            L_FMA = "Y"
            L_CODE = sfpend:code
            end
        End

    Next sfpEND
    End

If L_FMA = "Y" Then
    Begin
    Access SFSOPTEND, Set SFSOPTEND:COMPANY_ID       = bopGENERAL:COMPANY_ID,
                          SFSOPTEND:STATE            = bopGENERAL:STATE,
                          SFSOPTEND:LINE_OF_BUSINESS = bopgeneral:line_of_business,
                          SFSOPTEND:CODE             = L_CODE, Generic

    while SFSOPTEND:COMPANY_ID       = bopGENERAL:COMPANY_ID and
          SFSOPTEND:STATE            = bopGENERAL:STATE and
          SFSOPTEND:LINE_OF_BUSINESS = bopgeneral:line_of_business and
          SFSOPTEND:CODE             = L_CODE
        begin
        If (sfpNAME:EFF_DATE >= SFSOPTEND:EFF_DATE and
           (sfpname:eff_date <= sfsoptend:exp_date or
           sfsoptend:exp_date = 0)) Then
            Begin
            L_FMA_FACTOR = SFSOPTEND:PREMIUM_1[1]
            End

        Next SFSOPTEND
        End
    End
Else
    L_FMA_FACTOR = 1.00

if l_fma_factor = 0 then
    l_fma_factor = 1.00
if bopgeneral:liability_only = 1 then
    begin
    do get_liability
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:BUILDING_PREMIUM = bopgeneral:liability_premium
        End
    end

If bopGENERAL:BUILDING_LIMIT <> 0 Then
    Begin
    Do CALC_BUILDING_PREM

    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopgeneral_alias:territory_factors[1] = l_territory_building
    /*    write("%c%s",3005,"                                             ")
        write("%c%n",3005,l_building_limit)
        write("%c%n",3015,l_building_rate)
        write("%c%n",3025,l_building_adjustments)*/
        bopGENERAL_ALIAS:BUILDING_PREMIUM = (L_BUILDING_LIMIT *
                                            (L_BUILDING_RATE *
                                            L_BUILDING_ADJUSTMENTS))
        End

    End
Else
if bopgeneral:liability_only = 0 then
    Begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:BUILDING_PREMIUM = 0
        End
    End

If bopGENERAL:PROPERTY_LIMIT <> 0 Then
    Begin
    Do CALC_PROPERTY_PREM
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:PROPERTY_RATE = L_PROPERTY_RATE *
                                         L_PROPERTY_ADJUSTMENTS
        bopgeneral_alias:territory_factors[2] = l_territory_contents
        bopGENERAL_ALIAS:PROPERTY_PREMIUM = (L_PROPERTY_LIMIT *
                                            (L_PROPERTY_RATE *
                                            L_PROPERTY_ADJUSTMENTS))
        End
    End
Else
    Begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:PROPERTY_PREMIUM = 0
        End
    End

If bopGENERAL:PROPERTY_LIMIT <> 0 And
   L_FORM = 3 Then
    Begin
    if sfscompany:boiler_rating <> 4 then
        begin
        Do CALC_EXPANDED
        end
    else
        do calc_expanded_1
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    l_tier = bopgeneral_alias:tier
    include "sfstier.pro"

    if l_tier_factor = 0 then
        l_tier_factor = 1.00

    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        if sfscompany:boiler_rating = 4 then
            l_territory_expanded = l_territory_contents
        bopgeneral_alias:territory_factors[3] = l_territory_expanded
        bopGENERAL_ALIAS:PROPERTY_SPECIAL = L_SPECIAL * L_LOSS_COST *
                                            L_TERRITORY_EXPANDED *
                                            L_PROPERTY_CREDIT_FACTORS *
--                                            L_WIND_DEDUCT_FACTOR *
                                            L_FMA_FACTOR *
                                            l_tier_factor

        If bopGENERAL_ALIAS:ALARM_FACTOR <> 0 And
           bopGENERAL_ALIAS:ALARM_OPTION[2] = "Y" And
           bopGENERAL_ALIAS:ALARM_OPTION[1] = "N" then
            bopGENERAL_ALIAS:PROPERTY_SPECIAL = bopGENERAL_ALIAS:PROPERTY_SPECIAL *
                                                bopGENERAL_ALIAS:ALARM_FACTOR

        bopGENERAL_ALIAS:ADJUSTMENT_FACTORS = L_PROPERTY_CREDIT_FACTORS *
                                              L_TERRITORY_EXPANDED *
--                                              L_WIND_DEDUCT_FACTOR *
                                              L_FMA_FACTOR *
                                              l_tier_factor
        End
    End
Else
    Begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:PROPERTY_SPECIAL = 0
        End
    End

do minimum_premium
Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                             bopgeneral_alias:pol_year = bopgeneral:pol_year,
                             bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                             bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                             bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

If bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO And
   bopgeneral_alias:pol_year = bopgeneral:pol_year and
   bopgeneral_alias:end_sequence = bopgeneral:end_sequence and
   bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO And
   bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO Then
    Change bopGENERAL_ALIAS
        Begin
        l_sub = l_sub + 1
        bopGENERAL_ALIAS:BOP_PREMIUM = bopGENERAL_ALIAS:BUILDING_PREMIUM +
                                       bopGENERAL_ALIAS:PROPERTY_PREMIUM +
                                       bopGENERAL_ALIAS:PROPERTY_SPECIAL
        l_original_bop_premium[l_sub] = bopGENERAL_ALIAS:BUILDING_PREMIUM +
                                        bopGENERAL_ALIAS:PROPERTY_PREMIUM +
                                        bopGENERAL_ALIAS:PROPERTY_SPECIAL
        l_original_building_premium[l_sub] = bopgeneral_alias:building_premium
        l_original_property_premium[l_sub] = bopgeneral_alias:property_premium
        l_original_property_special[l_sub] = bopgeneral_alias:property_special

        if bopgeneral_alias:bop_premium < l_minimum and
           l_change_minimum_rating = 1 and
           l_mp_building_property = 0 and
           bopgeneral_alias:liability_only = 0 then  -- mp per location
            begin
            l_minimum_applies = "Y"
            bopgeneral_alias:bop_premium = l_minimum
            if bopgeneral_alias:building_premium <> 0 then
                bopgeneral_alias:building_premium = ((l_minimum -
                                                    (bopgeneral_alias:building_premium +
                                                    bopgeneral_alias:property_premium +
                                                    bopgeneral_alias:property_special)) +
                                                    bopgeneral_alias:building_premium)
            else
                bopgeneral_alias:property_premium = ((l_minimum -
                                                    (bopgeneral_alias:property_premium +
                                                    bopgeneral_alias:property_special)) +
                                                    bopgeneral_alias:property_premium)
            end
        end

-- mp per policy checking building and property premiums only
if l_mp_building_property = 1 and
   l_count_locations = l_no_locations then
    begin
    access bopgeneral_alt, set bopgeneral_alt:policy_no = bopgeneral:policy_no,
                               bopgeneral_alt:pol_year = bopgeneral:pol_year,
                               bopgeneral_alt:end_sequence = bopgeneral:end_sequence, generic

    l_bop_premium = 0
    l_bop_building_premium = 0
    l_bop_property_premium = 0
    l_bop_special_premium = 0
    while bopgeneral_alt:policy_no = bopgeneral:policy_no and
          bopgeneral_alt:pol_year = bopgeneral:pol_year and
          bopgeneral_alt:end_sequence = bopgeneral:end_sequence
        begin
        l_bop_premium          = bopgeneral_alt:bop_premium +
                                 l_bop_premium
        l_bop_building_premium = bopgeneral_alt:building_premium +
                                 l_bop_building_premium
        l_bop_property_premium = bopgeneral_alt:property_premium +
                                 l_bop_property_premium
        l_bop_special_premium  = bopgeneral_alt:property_special +
                                 l_bop_special_premium

        next bopgeneral_alt
        end

    if l_bop_premium < l_minimum then
        begin
        l_minimum_applies = "Y"
        Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                     bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                     bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                     bopgeneral_alias:prem_no  = bopgeneral:prem_no,
                                     bopgeneral_alias:build_no = bopgeneral:build_no, generic

        If bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO and
           bopgeneral_alias:pol_year = bopgeneral:pol_year and
           bopgeneral_alias:end_sequence = bopgeneral:end_sequence and
           bopgeneral_alias:prem_no  = bopgeneral:prem_no and
           bopgeneral_alias:build_no = bopgeneral:build_no then
            Change bopGENERAL_ALIAS
                Begin
                if bopgeneral_alias:building_premium <> 0 then
                    begin
                    bopgeneral_alias:adjustment_to_meet_minimum = (l_minimum -
                                                                  (l_bop_building_premium +
                                                                  l_bop_property_premium +
                                                                  l_bop_special_premium))
                    l_adjustment_to_meet_minimum = (l_minimum -
                                                   (l_bop_building_premium +
                                                   l_bop_property_premium +
                                                   l_bop_special_premium))
                    end
                else
                    begin
                    bopgeneral_alias:adjustment_to_meet_minimum = (l_minimum -
                                                                  (l_bop_property_premium +
                                                                  l_bop_special_premium))
                    l_adjustment_to_meet_minimum = (l_minimum -
                                                   (l_bop_property_premium +
                                                   l_bop_special_premium))
                    end
                end
        end
    else
        begin
        l_minimum_applies = "N"
        l_sub_1 = 0
        Access bopGENERAL_ALT, Set bopGENERAL_ALT:policy_NO = bopGENERAL:policy_NO,
                                   bopgeneral_alt:pol_year = bopgeneral:pol_year,
                                   bopgeneral_alt:end_sequence = bopgeneral:end_sequence, generic

        while bopGENERAL_ALT:policy_NO = bopGENERAL:policy_NO and
              bopgeneral_alt:pol_year = bopgeneral:pol_year and
              bopgeneral_alt:end_sequence = bopgeneral:end_sequence
            begin
            l_adjustment_to_meet_minimum = 0
            Change bopGENERAL_ALT
                Begin
                l_sub_1 = l_sub_1 + 1
                bopgeneral_alt:adjustment_to_meet_minimum = 0
                bopgeneral_alt:bop_premium      = l_original_bop_premium[l_sub_1]
                bopgeneral_alt:building_premium = l_original_building_premium[l_sub_1]
                bopgeneral_alt:property_premium = l_original_property_premium[l_sub_1]
                bopgeneral_alt:property_special = l_original_property_special[l_sub_1]
                end

            next bopgeneral_alt
            end
        End

    end

if bopgeneral:fuel_pumps > 0 then
    begin
    access bpsrate, set bpsrate:company_id = bopgeneral:company_id,
                        bpsrate:state = bopgeneral:state,
                        bpsrate:line_of_business = bopgeneral:line_of_business, generic

    while bpsrate:company_id = bopgeneral:company_id and
          bpsrate:state = bopgeneral:state and
          bpsrate:line_of_business = bopgeneral:line_of_business
            begin
            if sfpname:eff_date >= bpsrate:eff_date then
                begin
                l_fuel_pump_charge = bpsrate:fuel_pump_charge

                end

            next bpsrate
            end

    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:fuel_pump_charge = bopgeneral_alias:fuel_pumps *
                                            l_fuel_pump_charge
        End
    End
else
    begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:fuel_pump_charge = 0
        End
    End

If (bopGENERAL:RESTAURANT = 1 or
   (sfsline:option = "P" and
   sfscompany:boiler_rating = 4 and
   bopgeneral:receipts <> 0)) Then
    Do RATE_RESTAURANTS
Else
    Begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:RESTAURANT_ENHANCEMENT = 0
        End
    End

If SFSLINE_ALIAS:OPTION = "P" and
   sfscompany:boiler_rating <> 4 Then
    Begin
    if bopgeneral:special_enhancement = 1 then
        begin
        l_exterior_signs_limit = bopgeneral:property_limit * (l_signs_percent divide 100)
        if l_signs_limit > l_exterior_signs_limit then
            l_exterior_signs_limit = l_signs_limit
        end
    else
        begin
        L_EXTERIOR_SIGNS_LIMIT = (bopGENERAL:PROPERTY_LIMIT *
                                 (BPSDEFAULT:EXTERIOR_SIGNS_PERCENT Divide 100))
        If L_EXTERIOR_SIGNS_LIMIT < BPSDEFAULT:SIGNS_LIMIT Then
            L_EXTERIOR_SIGNS_LIMIT = BPSDEFAULT:SIGNS_LIMIT
        end
    End
Else
if sfscompany:boiler_rating = 2 and
   bopgeneral:special_enhancement = 1 then
    l_exterior_signs_limit = l_signs_limit
else
if bpsdefault2:outdoor_signs <> 0 then
    l_exterior_signs_limit = bpsdefault2:outdoor_signs
else
    L_EXTERIOR_SIGNS_LIMIT = BPSDEFAULT:SIGNS_LIMIT
If bopGENERAL:SIGNS_LIMIT <> L_EXTERIOR_SIGNS_LIMIT Then
    Do RATE_SIGNS
Else
    Begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:SIGNS_PREMIUM = 0
        End
    End

If bopGENERAL:SIGNS_NOT_ATTACHED_LIMIT <> 0 Then
    Do RATE_SIGNS_NOT_ATTACHED
Else
    Begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:SIGNS_NOT_ATTACHED_PREMIUM = 0
        End
    End

If bopGENERAL:GLASS_LIMIT <> 0 Then
    begin
    Do RATE_GLASS
    end
Else
    Begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:GLASS_PREMIUM = 0
        End
    End

if bopgeneral:no_pools <> 0 then
    begin
    l_commandline_2 = str(bopgeneral:policy_no,9) +
                      str(bopgeneral:pol_year,4) +
                      str(bopgeneral:end_sequence,4) +
                      str(bopgeneral:prem_no,4) +
                      str(bopgeneral:build_no,4)
    if sfscompany:debug_mode = 1 then
        proc("csbatch bopup11e %s",l_commandline_2)
    else
        proc("csbatch bopup11e %s",l_commandline_2)/noconsole
    end
else
    Begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:pool_PREMIUM = 0
        End
    End

if bopgeneral:debris_removal_limit <> bpsdefault:debris_removal and
   sfpname:company_id = "LEBINS" then
     begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_no = bopGENERAL:policy_no,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:pollution_PREMIUM = (((bopgeneral_alias:debris_removal_limit -
                                             bpsdefault:debris_removal) divide
                                             l_pollution_per) *
                                            l_pollution_charge)
        End
     end
else
if sfpname:company_id = "LEBINS" then
    Begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_no = bopGENERAL:policy_no,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:pollution_PREMIUM = 0
        End
    End

if bopgeneral:debris_removal_limit <> bpsdefault2:debris_removal_limit and
   bpsdefault2:debris_removal_limit <> 0 and
   sfpname:company_id = "FARMERS" then
    begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_no = bopGENERAL:policy_no,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:debris_removal_PREMIUM = (((bopgeneral_alias:debris_removal_limit -
                                                   bpsdefault2:debris_removal_limit) divide
                                                   l_pollution_per) *
                                                   l_pollution_charge)
        End
    end
   else
if bopgeneral:debris_removal_limit <> bpsdefault:debris_removal and
   bpsdefault2:debris_removal_limit = 0 and
   sfpname:company_id = "FARMERS" then
     begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_no = bopGENERAL:policy_no,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:debris_removal_PREMIUM = (((bopgeneral_alias:debris_removal_limit -
                                                   bpsdefault:debris_removal) divide
                                                   l_pollution_per) *
                                                   l_pollution_charge)
        End
     end
else
if sfpname:company_id = "FARMERS" then
    Begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_no = bopGENERAL:policy_no,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:debris_removal_PREMIUM = 0
        End
    End

/*if bopgeneral:pollution_limit <> bpsdefault:debris_removal and
   sfpname:company_id <> "LEBINS" then
     begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_no = bopGENERAL:policy_no,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:pollution_PREMIUM = (((bopgeneral_alias:pollution_limit -
                                               bpsdefault:debris_removal) divide
                                                   l_pollution_per) *
                                                   l_pollution_charge)
        End
     end
else                              */
if sfpname:company_id <> "LEBINS" then
    Begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_no = bopGENERAL:policy_no,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:pollution_PREMIUM = 0
        End
    End

If bopGENERAL:PROPERTY_LIMIT <> 0 And
   L_FORM <> 3 And
   bopGENERAL:BURGLARY_LIMIT_ON <> 0 Then
    Do RATE_BURGLARY
Else
    Begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:BURGLARY_PREMIUM = 0
        End
    End

If (bopGENERAL:ATTACH_BU5001 = "Y" Or
   (bopGENERAL:PROPERTY_LIMIT <> 0 And
   L_FORM = 3)) Then
    Do RATE_MONEY
Else
    Begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:MONEY_PREMIUM = 0
        End
    End

If SFSLINE_ALIAS:OPTION = "P" and
   sfscompany:boiler_rating <> 4 Then
    Begin
    if bopgeneral:special_enhancement = 1 then
        begin
        l_ar_limit_1 = bopgeneral:property_limit * (l_ar_percent divide 100)
        if l_special_ar_limit > l_ar_limit_1 then
            l_ar_limit_1 = l_special_ar_limit
        end
    else
        begin
        L_AR_LIMIT_1 = (bopGENERAL:PROPERTY_LIMIT *
                       (BPSDEFAULT:AR_PERCENT Divide 100))
        If L_AR_LIMIT_1 < BPSDEFAULT:AR_LIMIT Then
            L_AR_LIMIT_1 = BPSDEFAULT:AR_LIMIT
        end
    End
Else
if sfscompany:boiler_rating = 2 and
   bopgeneral:special_enhancement = 1 then
    l_ar_limit_1 = l_special_ar_limit
else
if bpsdefault2:ar_limit <> 0 then
    l_ar_limit_1 = bpsdefault2:ar_limit
else
    L_AR_LIMIT_1 = BPSDEFAULT:AR_LIMIT
If bopGENERAL:AR_LIMIT <> L_AR_LIMIT_1 Then
    Begin
    L_AR_LIMIT = bopGENERAL:AR_LIMIT - L_AR_LIMIT_1
    Do RATE_AR
    End
Else
    Begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:AR_PREMIUM = 0
        End
    End

l_commandline_2 = str(bopgeneral:policy_no,9) + str(bopgeneral:pol_year,4) +
                  str(bopgeneral:end_sequence,4) + str(bopgeneral:prem_no,4) +
                  str(bopgeneral:build_no,4)

if sfscompany:debug_mode = 1 then
    proc("cli csbatch bopup11h %s",l_commandline_2)
else
    proc("cli csbatch bopup11h %s",l_commandline_2)/noconsole

If SFSLINE_ALIAS:OPTION = "P" and
   sfscompany:boiler_rating <> 4 Then
    Begin
    if bopgeneral:special_enhancement = 1 then
        begin
        l_utility_limit = bopgeneral:property_limit * (l_utility_percent divide 100)
        if l_special_utility_limit > l_utility_limit then
            l_utility_limit = l_special_utility_limit
        end
    else
        begin
        L_UTILITY_LIMIT = (bopGENERAL:PROPERTY_LIMIT *
                          (BPSDEFAULT:UTILITY_PERCENT Divide 100))
        If L_UTILITY_LIMIT < BPSDEFAULT:UTILITY_LIMIT Then
            L_UTILITY_LIMIT = BPSDEFAULT:UTILITY_LIMIT
        If L_UTILITY_LIMIT > BPSDEFAULT:UTILITY_MAX and
           bpsdefault:utility_max <> 0 Then
            L_UTILITY_LIMIT = BPSDEFAULT:UTILITY_MAX
        end
    End
Else
if sfscompany:boiler_rating = 2 and
   bopgeneral:special_enhancement = 1 then
    l_utility_limit = l_special_utility_limit
else
if bpsdefault2:utility_limit <> 0 then
    l_utility_limit = bpsdefault2:utility_limit
else
    L_UTILITY_LIMIT = BPSDEFAULT:UTILITY_LIMIT
If bopGENERAL:UTILITY_LIMIT <> L_UTILITY_LIMIT Then
    Do RATE_UTILITY
Else
    Begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:UTILITY_PREMIUM = 0
        End
    End

If SFSLINE_ALIAS:OPTION = "P" and
   sfscompany:boiler_rating <> 4 Then
    Begin
    if bopgeneral:special_enhancement = 1 then
        begin
        l_mechanical_limit = bopgeneral:property_limit * (l_mechanical_percent divide 100)
        if l_special_mechanical_limit > l_mechanical_limit then
            l_mechanical_limit = l_special_mechanical_limit
        end
    else
        begin
        L_MECHANICAL_LIMIT = (bopGENERAL:PROPERTY_LIMIT *
                             (BPSDEFAULT:MECHANICAL_PERCENT Divide 100))
        If L_MECHANICAL_LIMIT < BPSDEFAULT:MECHANICAL_LIMIT Then
            L_MECHANICAL_LIMIT = BPSDEFAULT:MECHANICAL_LIMIT
        If L_MECHANICAL_LIMIT > BPSDEFAULT:MECHANICAL_MAX Then
            L_MECHANICAL_LIMIT = BPSDEFAULT:MECHANICAL_MAX
        end
    End
Else
if bpsdefault2:mechanical_breakdown <> 0 then
    l_mechanical_limit = bpsdefault2:mechanical_breakdown
else
    L_MECHANICAL_LIMIT = BPSDEFAULT:MECHANICAL_LIMIT
If bopGENERAL:MECHANICAL_LIMIT <> L_MECHANICAL_LIMIT Then
    Do RATE_MECHANICAL
Else
    Begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:MECHANICAL_PREMIUM = 0
        End
    End

If ((l_off_premises_limit <> l_default_off_premises_limit and
   bopgeneral:special_enhancement = 0) or
   (l_off_premises_limit <> l_off_premises and
   bopgeneral:special_enhancement = 1))  Then
    Do RATE_OFF_PREMISES
Else
    Begin
    if sfsline:lob_code = "CPORTFOLIO" then
        begin
        Access sfpmastsupp, Set sfpmastsupp:policy_NO = bopGENERAL:policy_NO,
                                sfpmastsupp:pol_year = bopgeneral:pol_year,
                                sfpmastsupp:end_sequence = bopgeneral:end_sequence,
                                sfpmastsupp:line_of_business = bopgeneral:line_of_business, generic

        Change sfpmastsupp
            Begin
            sfpmastsupp:OFF_PREMISES_PREMIUM = 0
            end
        End
    else
        begin
        Access sfpMASTER, Set sfpMASTER:policy_NO = bopGENERAL:policy_NO,
                              sfpmaster:pol_year = bopgeneral:pol_year,
                              sfpmaster:end_sequence = bopgeneral:end_sequence, Exact

        Change sfpMASTER
            Begin
            sfpMASTER:OFF_PREMISES_PREMIUM = 0
            end
        End
    End

If SFSLINE_ALIAS:OPTION = "P" and
   sfscompany:boiler_rating <> 4 Then
    Begin
    if bopgeneral:special_enhancement = 1 then
        begin
        l_value_limit_1 = bopgeneral:property_limit * (l_valuable_papers_percent divide 100)
        if l_valuable_papers_limit > l_value_limit_1 then
            l_value_limit_1 = l_valuable_papers_limit
        end
    else
        begin
        L_VALUE_LIMIT_1 = (bopGENERAL:PROPERTY_LIMIT *
                          (BPSDEFAULT:VALUABLE_PERCENT Divide 100))
        If L_VALUE_LIMIT_1 < BPSDEFAULT:VALUABLE_PAPERS_LIMIT Then
            L_VALUE_LIMIT_1 = BPSDEFAULT:VALUABLE_PAPERS_LIMIT
        end
    End
Else
if sfscompany:boiler_rating = 2 and
   bopgeneral:special_enhancement = 1 then
    l_value_limit_1 = l_valuable_papers_limit
else
if bpsdefault2:valuable_papers <> 0 then
    l_value_limit_1 = bpsdefault2:valuable_papers
else
    L_VALUE_LIMIT_1 = BPSDEFAULT:VALUABLE_PAPERS_LIMIT
If bopGENERAL:VALUABLE_PAPERS_LIMIT <> L_VALUE_LIMIT_1 Then
    Begin
    L_VALUE_LIMIT = bopGENERAL:VALUABLE_PAPERS_LIMIT - L_VALUE_LIMIT_1
    Do RATE_VALUABLE_PAPERS
    End
Else
    Begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:VALUABLE_PAPERS_PREMIUM = 0
        End
    End

If SFSLINE_ALIAS:OPTION = "P" and
   sfscompany:boiler_rating <> 4 Then
    Begin
    if bopgeneral:special_enhancement = 1 then
        begin
        l_water_bkup_limit = bopgeneral:property_limit * (l_water_backup_percent divide 100)
        if l_special_water_backup_limit > l_water_bkup_limit then
            l_water_bkup_limit = l_special_water_backup_limit
        if l_water_bkup_limit > 15000 and
           sfscompany:boiler_rating = 2 then
            l_water_bkup_limit = 15000
        end
    else
        begin
        L_WATER_BKUP_LIMIT = (bopGENERAL:PROPERTY_LIMIT *
                             (BPSDEFAULT:SEWER_BKUP_PERCENT Divide 100))
        If L_WATER_BKUP_LIMIT < BPSDEFAULT:WATER_BACKUP_LIMIT Then
            L_WATER_BKUP_LIMIT = BPSDEFAULT:WATER_BACKUP_LIMIT
        if l_water_bkup_limit > 15000 and
           sfscompany:boiler_rating = 2 then
            l_water_bkup_limit = 15000
        end
    End
Else
if sfpname:company_id = "NWIC" and
   bopgeneral:state = 29 then
    l_water_bkup_limit = bpsdefault2:water_damage
else
    L_WATER_BKUP_LIMIT = BPSDEFAULT:WATER_BACKUP_LIMIT
If ((bopgeneral:water_backup_limit <> 0 and
   bopgeneral:special_enhancement = 0 and
   bopgeneral:water_backup_limited = "Y") or
   (bopgeneral:water_backup_limit <> l_water_bkup_limit and
   bopgeneral:special_enhancement = 1)) Then
    Do RATE_WATERBACKUP
Else
    Begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:WATER_BACKUP_PREMIUM = 0
        End
    End

If bopGENERAL:ACV_BUILDING = "Y" Then
    Do RATE_ACV_BUILDING
Else
    Begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:ACV_BUILDING_PREMIUM = 0
        End
    End

If bopGENERAL:ACV_CONTENTS = "Y" Then
    Do RATE_ACV_CONTENTS
Else
    Begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:ACV_CONTENTS_PREMIUM = 0
        End
    End

access bpsrate, set bpsrate:company_id = bopgeneral:company_id,
                    bpsrate:state = bopgeneral:state,
                    bpsrate:line_of_business = bopgeneral:line_of_business, generic

while bpsrate:company_id = bopgeneral:company_id and
      bpsrate:state = bopgeneral:state and
      bpsrate:line_of_business = bopgeneral:line_of_business
        begin
        if sfpname:eff_date >= bpsrate:eff_date then
            begin
            l_liability_rate_or_charge = bpsrate:liability_rate_or_charge

            end

        next bpsrate
        end

if l_liability_rate_or_charge not one of 1 then
    begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopgeneral_alias:liability_charge = l_liability_charge
        end
    end
else
    begin
    l_liability_rate_1 = l_liability_rate
    l_liability_charge_1 = (((bopgeneral_alias:building_premium +
                           bopgeneral_alias:property_premium +
                           bopgeneral_alias:acv_building_premium +
                           bopgeneral_alias:acv_contents_premium) *
                           l_liability_rate_1) -
                           (bopgeneral_alias:building_premium +
                           bopgeneral_alias:property_premium +
                           bopgeneral_alias:acv_building_premium +
                           bopgeneral_alias:acv_contents_premium))
    l_original_liability_charge[l_sub] = l_liability_charge_1
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopgeneral_alias:liability_charge = l_liability_charge_1
        end
    l_liability_charge_3 = l_liability_charge_1
    end

if bopgeneral:special_enhancement = 1 and
   sfscompany:boiler_rating = 2 and
   bopgeneral:customer_prop_limit <> l_customer_prop_limit then
    do rate_customer_property
else
if bopgeneral:customer_prop_limit <> bpsdefault2:customers_property_limit and
   sfpname:company_id = "NWIC" and
   bopgeneral:state = 29 and
   bopgeneral:special_enhancement = 0 then
    begin
    l_customer_prop_limit = bpsdefault2:customers_property_limit
    do rate_customer_property
    end
else
If bopGENERAL:CUSTOMER_PROP_LIMIT <> BPSDEFAULT:CUSTOMER_PROP_LIMIT and
   bopgeneral:special_enhancement = 0 Then
    begin
    l_customer_prop_limit = bpsdefault:customer_prop_limit
    Do RATE_CUSTOMER_PROPERTY
    end
Else
    Begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:CUSTOMER_PROP_PREMIUM = 0
        End
    End

if sfscompany:boiler_rating = 2 and
   bopgeneral:special_enhancement = 1 and
   bopgeneral:fire_limit <> l_fire_limit then
    do rate_fire_legal
else
if bopgeneral:fire_limit <> bpsdefault2:fire_explosion and
   sfpname:company_id = "NWIC" and
   bopgeneral:state = 29 and
   bopgeneral:special_enhancement = 0 then
    do rate_fire_legal
else
If bopGENERAL:FIRE_LIMIT <> BPSDEFAULT:FIRE_LIMIT and
   bopgeneral:special_enhancement = 0 Then
    Do RATE_FIRE_LEGAL
Else
    Begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:FIRE_PREMIUM = 0
        End
    End

If ((bopGENERAL:BUILDING_CODE_PERCENT <> BPSDEFAULT:BUILDING_CODE_PERCENT and
   bopgeneral:special_enhancement = 0) or
   (bopgeneral:building_code_percent <> bpsdefault2:building_code_factor and
   sfpname:company_id = "NWIC" and
   bopgeneral:state = 29 and
   bopgeneral:special_enhancement = 0) or
   (bopgeneral:building_code_percent <> l_building_code_percent and
   bopgeneral:special_enhancement = 1)) Then
    Do RATE_BUILDING_CODE
Else
    Begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:BUILDING_CODE_PREMIUM = 0
        End
    End

If bopGENERAL:BOILERS = "Y" and
   bopgeneral:liability_only = 0 and
   sfscompany:boiler_rating not one of 4 then
    begin
    l_boiler_added = "Y"
    Do RATE_BOILERS
    end
Else
if sfscompany:boiler_rating not one of 4 then
    Begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:BOILERS_PREMIUM = 0
        End
    L_BOILERS_PREM = 0
    End

If L_DELETE_HIRED_NONOWNED = "Y" Or
   L_EXTEND_HIRED_NONOWNED = "Y" Then
    Do RATE_HIRED_NONOWNED
Else
    Begin
    if sfsline:lob_code = "CPORTFOLIO" then
        begin
        Access sfpmastsupp, Set sfpmastsupp:policy_NO = bopGENERAL:policy_NO,
                                sfpmastsupp:pol_year = bopgeneral:pol_year,
                                sfpmastsupp:end_sequence = bopgeneral:end_sequence,
                                sfpmastsupp:line_of_business = bopgeneral:line_of_business, generic

        Change sfpmastsupp
            Begin
            sfpmastsupp:hired_nonowned_premium = 0
            end
        End
    else
        begin
        Access sfpMASTER, Set sfpMASTER:policy_NO = bopGENERAL:policy_NO,
                              sfpmaster:pol_year = bopgeneral:pol_year,
                              sfpmaster:end_sequence = bopgeneral:end_sequence, Exact

        Change sfpMASTER
            Begin
            sfpMASTER:HIRED_NONOWNED_PREMIUM = 0
            end
        End
    End

If L_FIRST = "Y" Then
    Begin
    L_FIRST = "N"
    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:OPTIONAL_TOTAL = bopGENERAL_ALIAS:SIGNS_PREMIUM +
                                          bopGENERAL_ALIAS:SIGNS_NOT_ATTACHED_PREMIUM +
                                          bopGENERAL_ALIAS:GLASS_PREMIUM +
                                          bopgeneral_alias:pool_premium +
                                          bopGENERAL_ALIAS:BURGLARY_PREMIUM +
                                          bopGENERAL_ALIAS:MONEY_PREMIUM +
                                          bopGENERAL_ALIAS:AR_PREMIUM +
                                          bopGENERAL_ALIAS:UTILITY_PREMIUM +
                                          bopGENERAL_ALIAS:MECHANICAL_PREMIUM +
                                          bopGENERAL_ALIAS:CUSTOMER_PROP_PREMIUM +
                                          L_OFF_PREMISES_PREMIUM +
                                          bopGENERAL_ALIAS:POLLUTION_PREMIUM +
                                          bopgeneral_alias:debris_removal_premium +
                                          bopGENERAL_ALIAS:VALUABLE_PAPERS_PREMIUM +
                                          bopGENERAL_ALIAS:ACV_BUILDING_PREMIUM +
                                          bopGENERAL_ALIAS:ACV_CONTENTS_PREMIUM +
                                          bopGENERAL_ALIAS:FIRE_PREMIUM +
                                          bopGENERAL_ALIAS:BUILDING_CODE_PREMIUM +
                                          bopGENERAL_ALIAS:BOILERS_PREMIUM +
                                          bopGENERAL_ALIAS:WATER_BACKUP_PREMIUM +
                                          L_HIRED_NONOWNED_PREMIUM +
                                          bopGENERAL_ALIAS:RESTAURANT_ENHANCEMENT +
                                          bopgeneral_alias:fuel_pump_charge
        End
    End
Else
    Begin
    Change bopGENERAL_ALIAS
        Begin
        If bopGENERAL_ALIAS:OFF_PREMISES_LIMIT <> L_OFF_PREMISES_LIMIT Then
            L_OFF_PREMISE_PREM = bopGENERAL_ALIAS:OFF_PREMISES_PREMIUM
        Else
            L_OFF_PREMISE_PREM = 0
        if bpsdefault:fire_legal_policy_wide = 1 then
            begin
            l_fire_premium = 0
            bopgeneral_alias:fire_premium = 0
            end
        else
            l_fire_premium = bopgeneral_alias:fire_premium

        bopGENERAL_ALIAS:OPTIONAL_TOTAL = bopGENERAL_ALIAS:SIGNS_PREMIUM +
                                          bopGENERAL_ALIAS:SIGNS_NOT_ATTACHED_PREMIUM +
                                          bopGENERAL_ALIAS:GLASS_PREMIUM +
                                          bopgeneral_alias:pool_premium +
                                          L_OFF_PREMISE_PREM +
                                          bopGENERAL_ALIAS:BURGLARY_PREMIUM +
                                          bopGENERAL_ALIAS:MONEY_PREMIUM +
                                          bopGENERAL_ALIAS:AR_PREMIUM +
                                          bopGENERAL_ALIAS:UTILITY_PREMIUM +
                                          bopGENERAL_ALIAS:MECHANICAL_PREMIUM +
                                          bopGENERAL_ALIAS:CUSTOMER_PROP_PREMIUM +
                                          bopGENERAL_ALIAS:POLLUTION_PREMIUM +
                                          bopgeneral_alias:debris_removal_premium +
                                          bopGENERAL_ALIAS:VALUABLE_PAPERS_PREMIUM +
                                          bopGENERAL_ALIAS:ACV_BUILDING_PREMIUM +
                                          bopGENERAL_ALIAS:ACV_CONTENTS_PREMIUM +
                                          L_FIRE_PREMIUM +
                                          bopGENERAL_ALIAS:BUILDING_CODE_PREMIUM +
                                          bopGENERAL_ALIAS:BOILERS_PREMIUM +
                                          bopGENERAL_ALIAS:WATER_BACKUP_PREMIUM +
                                          bopGENERAL_ALIAS:RESTAURANT_ENHANCEMENT +
                                          bopgeneral_alias:fuel_pump_charge
        End
    End

--write("%c%n",1005,bopgeneral_alias:optional_total)

l_end_premium = 0
if l_policy_wide_first = "Y" then
    begin
    Access sfpEND, Set sfpEND:policy_NO = bopGENERAL:policy_NO,
                       sfpend:pol_year = bopgeneral:pol_year,
                       sfpend:end_sequence = bopgeneral:end_sequence,
                       sfpEND:PREM_NO  = 0,
                       sfpEND:BUILD_NO = 0, Generic

    while sfpEND:policy_NO = bopGENERAL:policy_NO and
          sfpend:pol_year = bopgeneral:pol_year and
          sfpend:end_sequence = bopgeneral:end_sequence and
          sfpEND:PREM_NO  = 0 and
          sfpEND:BUILD_NO = 0
        begin
        L_UPDATE_SFPEND_PREMIUM = 0
        L_CODE = sfpEND:CODE
        Do RATE_ENDORSEMENTS
        if l_update_sfpend_premium <> 0 then
            begin
            Change sfpEND
                Begin
                sfpEND:PREMIUM = L_UPDATE_SFPEND_PREMIUM
                End
            L_END_PREMIUM = L_END_PREMIUM + L_UPDATE_SFPEND_PREMIUM
            end

        if sfpend:code one of "FMA100", "BU0507" then
            begin
            access sfpmaster, set sfpmaster:policy_no = sfpend:policy_no,
                                  sfpmaster:pol_year = sfpend:pol_year,
                                  sfpmaster:end_sequence = sfpend:end_sequence, generic

            access bopoperations, set bopoperations:policY_no = sfpend:policy_no,
                                      bopoperations:pol_year = sfpend:pol_year,
                                      bopoperations:end_sequence = sfpend:end_sequence,
                                      bopoperations:prem_no = sfpend:prem_no,
                                      bopoperations:build_no = sfpend:build_no, generic

            if sfpmaster:policy_no = sfpend:policy_no and
               sfpmaster:pol_year = sfpend:pol_year and
               sfpmaster:end_sequence = sfpend:end_sequence then
                begin
                if (sfpend:code = "FMA100" or
                   (sfpend:code = "BU0507" and
                   bopoperations:exclude_adj_injury = "Y")) then
                    begin
                    change sfpmaster
                        begin
                        sfpmaster:personal_add_injury = 0
                        end
                    end
                end
            end

        Next sfpEND
        End

    l_policy_wide_first = "N"
    end

Access sfpEND, Set sfpEND:policy_NO = bopGENERAL:policy_NO,
                   sfpend:pol_year = bopgeneral:pol_year,
                   sfpend:end_sequence = bopgeneral:end_sequence,
                   sfpEND:PREM_NO  = bopGENERAL:PREM_NO,
                   sfpEND:BUILD_NO = bopGENERAL:BUILD_NO, Generic

while sfpEND:policy_NO = bopGENERAL:policy_NO and
      sfpend:pol_year = bopgeneral:pol_year and
      sfpend:end_sequence = bopgeneral:end_sequence and
      sfpEND:PREM_NO  = bopGENERAL:PREM_NO and
      sfpEND:BUILD_NO = bopGENERAL:BUILD_NO
    begin
    L_UPDATE_SFPEND_PREMIUM = 0
    L_CODE = sfpEND:CODE
    Do RATE_ENDORSEMENTS
    if l_update_sfpend_premium <> 0 then
        begin
        Change sfpEND
            Begin
            sfpEND:PREMIUM = L_UPDATE_SFPEND_PREMIUM
            End
        L_END_PREMIUM = L_END_PREMIUM + L_UPDATE_SFPEND_PREMIUM
        end

        if sfpend:code one of "FMA100", "BU0507" then
            begin
            access sfpmaster, set sfpmaster:policy_no = sfpend:policy_no,
                                  sfpmaster:pol_year = sfpend:pol_year,
                                  sfpmaster:end_sequence = sfpend:end_sequence, generic

            access bopoperations, set bopoperations:policY_no = sfpend:policy_no,
                                      bopoperations:pol_year = sfpend:pol_year,
                                      bopoperations:end_sequence = sfpend:end_sequence,
                                      bopoperations:prem_no = sfpend:prem_no,
                                      bopoperations:build_no = sfpend:build_no, generic

            if sfpmaster:policy_no = sfpend:policy_no and
               sfpmaster:pol_year = sfpend:pol_year and
               sfpmaster:end_sequence = sfpend:end_sequence then
                begin
                if (sfpend:code = "FMA100" or
                   (sfpend:code = "BU0507" and
                   bopoperations:exclude_adj_injury = "Y")) then
                    begin
                    change sfpmaster
                        begin
                        sfpmaster:personal_add_injury = 0
                        end
                    end
                end
            end
Next sfpEND
End

Access sfpMISC, Set sfpMISC:policy_NO = G_policy_NO,
                    sfpmisc:pol_year = g_year,
                    sfpmisc:end_sequence = g_end_sequence, Generic

L_MISC_PREMIUM = 0
If L_MISC <> "Y" Then
    Begin
    while sfpMISC:policy_NO = G_policy_NO and
          sfpmisc:pol_year = g_year and
          sfpmisc:end_sequence = g_end_sequence
        begin
        if ((sfpmisc:lob_end_code one of "B" and
           sfsline:lob_code one of "CPORTFOLIO") or
           sfsline:lob_code not one of "CPORTFOLIO") then
            begin
            L_MISC_PREMIUM = L_MISC_PREMIUM + sfpMISC:PREMIUM
            L_MISC = "Y"
            end

        Next sfpMISC
        End
    End

L_PREM = bopGENERAL_ALIAS:BOP_PREMIUM

-- boilers does not get any discounts, credits or surcharges, need to take this
-- out of the optional total and put back in after credits have been applied

access bpsrate, set bpsrate:company_id = bopgeneral:company_id,
                    bpsrate:state = bopgeneral:state,
                    bpsrate:line_of_business = bopgeneral:line_of_business, generic

while bpsrate:company_id = bopgeneral:company_id and
      bpsrate:state = bopgeneral:state and
      bpsrate:line_of_business = bopgeneral:line_of_business
        begin
        if sfpname:eff_date >= bpsrate:eff_date then
            begin
            l_liability_rate_or_charge = bpsrate:liability_rate_or_charge

            end

        next bpsrate
        end

-- liability mp per policy
if l_liability_rate_or_charge one of 1 and
   l_liability_first = "Y" then
    begin
    l_liability_First = "N"
    access bopgeneral_alt, set bopgeneral_alt:policy_no = bopgeneral:policy_no,
                               bopgeneral_alt:pol_year = bopgeneral:pol_year,
                               bopgeneral_alt:end_sequence = bopgeneral:end_sequence, generic

    l_liability_charge_2 = 0
    while bopgeneral_alt:policy_no = bopgeneral:policy_no and
          bopgeneral_alt:pol_Year = bopgeneral:pol_year and
          bopgeneral_alt:end_sequence = bopgeneral:end_sequence
        begin
        l_liability_charge_2 = l_liability_charge_2 +
                               bopgeneral_alt:liability_charge

        next bopgeneral_alt
        end

    if l_liability_charge_2 < l_liability_charge then
        begin
        Access bopGENERAL_ALT, Set bopGENERAL_ALT:policy_NO = bopGENERAL:policy_NO,
                                   bopgeneral_alt:pol_year = bopgeneral:pol_year,
                                   bopgeneral_alt:end_sequence = bopgeneral:end_sequence, generic

        Change bopGENERAL_ALT
            Begin
            l_liability_charge_3            = (bopgeneral_alt:liability_charge +
                                              (l_liability_charge -
                                              l_liability_charge_2))
            bopgeneral_alt:liability_charge = (bopgeneral_alt:liability_charge +
                                              (l_liability_charge -
                                              l_liability_charge_2))
            end

        end
    else
        begin
        Access bopGENERAL_ALT, Set bopGENERAL_ALT:policy_NO = bopGENERAL:policy_NO,
                                   bopgeneral_alt:pol_year = bopgeneral:pol_year,
                                   bopgeneral_alt:end_sequence = bopgeneral:end_sequence, generic

        l_liability_charge_3 = l_original_liability_charge[1]
        l_sub_1 = 0
        while bopGENERAL_ALT:policy_NO = bopGENERAL:policy_NO and
              bopgeneral_alt:pol_year = bopgeneral:pol_Year and
              bopgeneral_alt:end_sequence = bopgeneral:end_sequence
            begin
            l_sub_1 = l_sub_1 + 1
            Change bopGENERAL_ALT
                Begin
                bopgeneral_alt:liability_charge = l_original_liability_charge[l_sub_1]
                end
            next bopgeneral_alt
            end
        end

    end

if l_liability_rate_or_charge not one of 1 then
    begin
    L_OPTIONAL    = ((bopGENERAL_ALIAS:OPTIONAL_TOTAL -
                    bopGENERAL_ALIAS:BOILERS_PREMIUM) +
                    L_LIABILITY_CHARGE)
    end
else
    begin
    L_OPTIONAL    = ((bopGENERAL_ALIAS:OPTIONAL_TOTAL -
                    bopGENERAL_ALIAS:BOILERS_PREMIUM) +
                    L_LIABILITY_CHARGE_3)
    end

L_BOILER_PREM = bopGENERAL_ALIAS:BOILERS_PREMIUM + L_BOILER_PREM
L_TOTAL_END   = L_OPTIONAL + L_END_PREMIUM

Do GET_RATE

if bopgeneral:boilers = "Y" and
   bopgeneral:liability_only = 0 and
   sfscompany:boiler_Rating one of 4 then
    begin
    l_boiler_added = "Y"
    do rate_boilers
    end
else
if sfscompany:boiler_rating one of 4 then
    begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    change bopgeneral_alias
        begin
        bopgeneral_alias:boilers_premium = 0
        end
    l_boilers_prem = 0
    end

/* end of loc total */
End

Procedure RATE_ALARM
Begin
Access BPSCREDITS, Set BPSCREDITS:COMPANY_ID       = bopgeneral:company_id,
                       BPSCREDITS:STATE            = bopGENERAL:STATE,
                       BPSCREDITS:LINE_OF_BUSINESS = bopgeneral:line_of_business, Generic

while BPSCREDITS:COMPANY_ID       = bopgeneral:company_id and
      BPSCREDITS:STATE            = bopGENERAL:STATE and
      BPSCREDITS:LINE_OF_BUSINESS = bopgeneral:line_of_business
    begin
    If sfpNAME:EFF_DATE >= BPSCREDITS:EFF_DATE Then
        Begin
        L_FACTOR = BPSCREDITS:ALARM_FACTOR[1]
        L_SUPERIOR_FACTOR = BPSCREDITS:ALARM_FACTOR[2]
        l_pollution_per = bpscredits:pollution_per
        l_pollution_charge = bpscredits:pollution_charge
        End

    Next BPSCREDITS
    End

access bpsrate, set bpsrate:company_id = bopgeneral:company_id,
                    bpsrate:state = bopgeneral:state,
                    bpsrate:line_of_business = bopgeneral:line_of_business, generic

while bpsrate:company_id = bopgeneral:company_id and
      bpsrate:state = bopgeneral:state and
      bpsrate:line_of_business = bopgeneral:line_of_business
        begin
        if sfpname:eff_date >= bpsrate:eff_date then
            begin
            l_liability_rate_or_charge = bpsrate:liability_rate_or_charge

            end

        next bpsrate
        end

Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                             bopgeneral_alias:pol_year = bopgeneral:pol_year,
                             bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                             bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                             bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

Change bopGENERAL_ALIAS
    Begin
    If bopGENERAL_ALIAS:BURGLAR_ALARM_SYSTEM = "" Then
        bopGENERAL_ALIAS:BURGLAR_ALARM_SYSTEM = "N"

    if l_liability_rate_or_charge not one of 1 then
        begin
        If bopGENERAL_ALIAS:ALARM_OPTION[1] = "Y" Or
           bopGENERAL_ALIAS:ALARM_OPTION[2] = "Y" And
           bopGENERAL_ALIAS:ALARM_OPTION[3] = "N" Then
            bopGENERAL_ALIAS:ALARM_FACTOR = L_FACTOR
        If bopGENERAL_ALIAS:ALARM_OPTION[3] = "Y" Then
           bopGENERAL_ALIAS:ALARM_FACTOR = L_SUPERIOR_FACTOR

        If bopGENERAL_ALIAS:ALARM_OPTION[1] = "N" And
           bopGENERAL_ALIAS:ALARM_OPTION[2] = "N" And
           bopGENERAL_ALIAS:ALARM_OPTION[3] = "N" And
           bopGENERAL_ALIAS:BURGLAR_ALARM_SYSTEM = "N" Then
            bopGENERAL_ALIAS:ALARM_FACTOR = 1.00
        end
    else
        begin
        if bopgeneral_alias:alarm_factor = 0 then
            bopgeneral_alias:alarm_factor = 1.00
        end
    End

End

Procedure CALC_BUILDING_PREM
Begin
Do ACCESS_LOSSCOST

L_RECORD_TYPE = 2
L_COMPANY_ID = bopgeneral:company_id
L_LINE_OF_BUSINESS = bopgeneral:line_of_business
L_TERRITORY = 999
L_RATING_ID = "4"
L_CONSTRUCTION_STRING = Str(bopGENERAL:CONSTRUCTION)
L_STATE = bopGENERAL:STATE
L_PROTECTION = bopGENERAL:PROTECTION
L_EFF_DATE = sfpNAME:EFF_DATE
L_TYPE = bopGENERAL:BOP_TYPE
L_RATE_NO = bopGENERAL:RATE_NO
Access BPSCREDITS, Set BPSCREDITS:COMPANY_ID = L_COMPANY_ID,
                       BPSCREDITS:STATE = L_STATE,
                       BPSCREDITS:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS, Generic

while BPSCREDITS:COMPANY_ID       = L_COMPANY_ID and
      BPSCREDITS:STATE            = L_STATE and
      BPSCREDITS:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS
    begin
    If L_EFF_DATE >= BPSCREDITS:EFF_DATE Then
        L_PERCENT_OCCUPIED  = BPSCREDITS:PERCENT_OCCUPIED

    Next BPSCREDITS
    End

If bopGENERAL:TENANT = "N" And
   bopGENERAL:PERCENT_OCCUPIED >= L_PERCENT_OCCUPIED Then
    L_OCCUPIED = "O"
Else
    L_OCCUPIED = "L"

If L_TYPE <> 8 Then
    Begin
    if bopgeneral:company_id one of "DELOS", "GGUND" then
        begin
        include "bpsbuild1.inc"
        end
    else
        begin
        Include "bpsbuild.inc"
        end
    End
Else
If L_TYPE = 8 Then
    Begin
    Do ACCESS_LOSSCOST

    L_RECORD_TYPE = 1
    L_COMPANY_ID = bopgeneral:company_id
    L_LINE_OF_BUSINESS = bopgeneral:line_of_business
    L_TERRITORY = 999
    L_RATING_ID = "4"
    L_CONSTRUCTION = bopGENERAL:CONSTRUCTION
    L_STATE = bopGENERAL:STATE
    L_PROTECTION = bopGENERAL:PROTECTION
    L_EFF_DATE = sfpNAME:EFF_DATE
    L_TYPE = bopGENERAL:BOP_TYPE
    L_RATE_NO = bopGENERAL:RATE_NO
    Access BPSCREDITS, Set BPSCREDITS:COMPANY_ID = L_COMPANY_ID,
                           BPSCREDITS:STATE = L_STATE,
                           BPSCREDITS:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS, Generic

    while BPSCREDITS:COMPANY_ID       = L_COMPANY_ID and
          BPSCREDITS:STATE            = L_STATE and
          BPSCREDITS:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS
        begin
        If L_EFF_DATE >= BPSCREDITS:EFF_DATE Then
            L_PERCENT_OCCUPIED  = BPSCREDITS:PERCENT_OCCUPIED

        Next BPSCREDITS
        End

    If bopGENERAL:TENANT = "N" And
       bopGENERAL:PERCENT_OCCUPIED >= L_PERCENT_OCCUPIED Then
        L_OCCUPIED = "O"
    Else
        L_OCCUPIED = "L"

    Include "bpsprop.inc"
    L_BUILDING_RATE = L_PROPERTY_RATE
    End

If (L_FORM = 2 or
   (L_form = 1 and
   sfpname:company_id = "CCMI")) Then
    begin
    Do GET_BUILDING_CREDIT
    end
Do GET_INFLATION_GUARD
Do GET_CREDITS
Do GET_LIABILITY

-- only apts and condo that are leased have a building liability charge
-- all others make 1.00

-- liability on building only applies if no personal property, otherwise only appliable
-- on personal property

If bopGENERAL:PROPERTY_LIMIT <> 0 Then
    L_LIABILITY_RATE_1 = 1.00
Else
    L_LIABILITY_RATE_1 = L_LIABILITY_RATE * L_AGGREGATE_FACTOR

if sfscompany:boiler_rating one of 4 and
   bopgeneral:state one of 29 then
    begin
    l_territory_building = bopgeneral:rating_territory_factor *
                           bopgeneral:special_exposure_factor
    end
else
if sfscompany:boiler_rating one of 4 and
   bopgeneral:state not one of 29 then
    begin
    l_territory_building = bopgeneral:rating_territory_factor
    end
else
    Do GET_TERRITORY_FACTORS
Do GET_WIND_DEDUCTIBLE

L_BUILDING_RATE = (((L_BUILDING_RATE - L_BUILDING_CREDIT) * L_LOSS_COST) *
                   L_INFLATION_FACTOR)

access bpsrate, set bpsrate:company_id = bopgeneral:company_id,
                    bpsrate:state = bopgeneral:state,
                    bpsrate:line_of_business = bopgeneral:line_of_business, generic

while bpsrate:company_id = bopgeneral:company_id and
      bpsrate:state = bopgeneral:state and
      bpsrate:line_of_business = bopgeneral:line_of_business
        begin
        if sfpname:eff_date >= bpsrate:eff_date then
            begin
            l_liability_rate_or_charge = bpsrate:liability_rate_or_charge

            end

        next bpsrate
        end

Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                             bopgeneral_alias:pol_year = bopgeneral:pol_year,
                             bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                             bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                             bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

l_tier = bopgeneral_alias:tier
include "sfstier.pro"

if l_tier_factor = 0 then
    l_tier_factor = 1.00

if l_wind_exclusion_factor = 0 or
   bopgeneral_alias:windstorm_exclusion = 0 then
    l_wind_exclusion_factor = 1.00

/*write("%c%s",1005,"                                                                                        ")
write("%c%n",1005,l_building_credit_factors)
write("%c%n",1015,l_liability_rate_1)
write("%c%n",1025,l_territory_building)
write("%c%n",1035,l_wind_deduct_factor)
write("%c%n",1045,l_building_sprinkler)
write("%c%n",1055,l_tier_factor)
write("%c%n",1065,l_fma_factor)
write("%c%n",1075,l_wind_exclusion_factor)*/

if l_liability_rate_or_charge not one of 1 then
    begin
    L_BUILDING_ADJUSTMENTS = L_BUILDING_CREDIT_FACTORS * L_LIABILITY_RATE_1 *
                             L_TERRITORY_BUILDING * L_WIND_DEDUCT_FACTOR *
                             L_BUILDING_SPRINKLER * L_FMA_FACTOR *
                             l_tier_factor * l_wind_exclusion_factor
    end
else
    begin
    L_BUILDING_ADJUSTMENTS = L_BUILDING_CREDIT_FACTORS * l_aggregate_factor *
                             L_TERRITORY_BUILDING * L_WIND_DEDUCT_FACTOR *
                             L_BUILDING_SPRINKLER * L_FMA_FACTOR *
                             l_tier_factor * l_wind_exclusion_factor
    end

L_BUILDING_LIMIT = ((bopGENERAL:BUILDING_LIMIT + bopGENERAL:OTHER_STRUCTURES) Divide 1000)

Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                             bopgeneral_alias:pol_year = bopgeneral:pol_year,
                             bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                             bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                             bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

if sfscompany:boiler_rating <> 4 then
begin
if l_liability_rate_or_charge not one of 1 then
    begin
    If bopGENERAL_ALIAS:ALARM_OPTION[1] = "Y" And
       bopGENERAL_ALIAS:ALARM_OPTION[2] = "Y" And
       bopGENERAL_ALIAS:ALARM_OPTION[3] = "N" Then
        L_BUILDING_ADJUSTMENTS = L_BUILDING_ADJUSTMENTS * bopGENERAL_ALIAS:ALARM_FACTOR
    If bopGENERAL_ALIAS:ALARM_OPTION[1] = "Y" And
       bopGENERAL_ALIAS:ALARM_OPTION[2] = "N" And
       bopGENERAL_ALIAS:ALARM_OPTION[3] = "N" Then
        L_BUILDING_ADJUSTMENTS = L_BUILDING_ADJUSTMENTS * bopGENERAL_ALIAS:ALARM_FACTOR
    If bopGENERAL_ALIAS:ALARM_OPTION[3] = "Y" Then
        L_BUILDING_ADJUSTMENTS = L_BUILDING_ADJUSTMENTS * bopGENERAL_ALIAS:ALARM_FACTOR
    end
else
    begin
    if bopgeneral_alias:alarm_option[1] = "Y" and
       bopgeneral_alias:alarm_option[2] = "Y" then
        l_building_adjustments = l_building_adjustments *
                                 bopgeneral_alias:alarm_factor
    if bopgeneral_alias:alarm_option[1] = "Y" and
       bopgeneral_alias:alarm_option[2] = "N" then
        l_building_adjustments = l_building_adjustments *
                                 bopgeneral_alias:alarm_factor
    end
end

--write("%c%n",1085,l_building_adjustments)
End

Procedure GET_BUILDING_CREDIT
Begin
L_COMPANY_ID = bopgeneral:company_id
L_LINE_OF_BUSINESS = bopgeneral:line_of_business
L_RECORD_TYPE = 3
L_TERRITORY = 999
L_STATE = bopGENERAL:STATE
L_EFF_DATE = sfpNAME:EFF_DATE
L_FORM = L_FORM

Include "bpsspecbld.inc"

L_BUILDING_CREDIT = L_BLD_RATE

/* end of calc_building_special */
End

Procedure GET_INFLATION_GUARD
Begin
L_COMPANY_ID = bopgeneral:company_id
L_STATE = bopGENERAL:STATE
L_LINE_OF_BUSINESS = bopgeneral:line_of_business
L_INFLATION_GUARD = bopGENERAL:AUTO_PERCENT
L_EFF_DATE = sfpNAME:EFF_DATE

Include "sfsinflation.inc"

If L_INFLATION_FACTOR = 0 Then
    L_INFLATION_FACTOR = 1.00

End

Procedure GET_LIABILITY
Begin
Switch(L_LIABILITY_CODE)
  Case 2  : Begin
            L_RATING_ID = "7"
            L_CONSTRUCTION_STRING = "7"
            End
  Case 3  : Begin
            L_RATING_ID = "8"
            L_CONSTRUCTION_STRING = "8"
            End
  Case 4  : Begin
            L_RATING_ID = "A"
            L_CONSTRUCTION_STRING = "A"
            End
  Default : Begin
            L_RATING_ID = "6"
            L_CONSTRUCTION_STRING = "6"
            End
  End
L_COMPANY_ID = bopgeneral:company_id
L_LINE_OF_BUSINESS = bopgeneral:line_of_business
L_TERRITORY = 999
L_PROTECTION = bopGENERAL:PROTECTION
L_STATE = bopGENERAL:STATE
L_EFF_DATE = sfpNAME:EFF_DATE
L_TYPE = bopGENERAL:BOP_TYPE
L_RECORD_TYPE = 2
Access BPSCREDITS, Set BPSCREDITS:COMPANY_ID = L_COMPANY_ID,
                       BPSCREDITS:STATE = L_STATE,
                       BPSCREDITS:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS, Generic

while BPSCREDITS:COMPANY_ID       = L_COMPANY_ID and
      BPSCREDITS:STATE            = L_STATE and
      BPSCREDITS:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS
    begin
    If L_EFF_DATE >= BPSCREDITS:EFF_DATE Then
        L_PERCENT_OCCUPIED  = BPSCREDITS:PERCENT_OCCUPIED

    Next BPSCREDITS
    End

If bopGENERAL:TENANT = "N" And
   bopGENERAL:PERCENT_OCCUPIED  >= L_PERCENT_OCCUPIED Then
    L_OCCUPIED = "O"
Else
    L_OCCUPIED = "L"
L_RATE_NO = bopGENERAL:RATE_NO

Include "bpsliab.inc"

If L_LIABILITY_RATE = 0 Then
    L_LIABILITY_RATE = 1.00

End

Procedure CALC_PROPERTY_PREM
Begin
Do ACCESS_LOSSCOST

L_RECORD_TYPE = 1
L_COMPANY_ID = bopgeneral:company_id
L_LINE_OF_BUSINESS = bopgeneral:line_of_business
L_TERRITORY = 999
L_RATING_ID = "4"
L_CONSTRUCTION = bopGENERAL:CONSTRUCTION
L_STATE = bopGENERAL:STATE
L_PROTECTION = bopGENERAL:PROTECTION
L_EFF_DATE = sfpNAME:EFF_DATE
L_TYPE = bopGENERAL:BOP_TYPE
L_RATE_NO = bopGENERAL:RATE_NO
Access BPSCREDITS, Set BPSCREDITS:COMPANY_ID = L_COMPANY_ID,
                       BPSCREDITS:STATE = L_STATE,
                       BPSCREDITS:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS, Generic

while BPSCREDITS:COMPANY_ID       = L_COMPANY_ID and
      BPSCREDITS:STATE            = L_STATE and
      BPSCREDITS:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS
    begin
    If L_EFF_DATE >= BPSCREDITS:EFF_DATE Then
        L_PERCENT_OCCUPIED  = BPSCREDITS:PERCENT_OCCUPIED

    Next BPSCREDITS
    End

If bopGENERAL:TENANT = "N" And
   bopGENERAL:PERCENT_OCCUPIED >= L_PERCENT_OCCUPIED Then
    L_OCCUPIED = "O"
Else
    L_OCCUPIED = "L"

If (L_TYPE = 1 Or
   L_TYPE = 2 Or
   L_TYPE = 8 Or
   L_TYPE = 9 or
   (sfscompany:property_rating = 1 and
   bopgeneral:rate_no <> 0)) Then
    begin
    Include "bpsprop.inc"
    end

-- if apartment/condo use building rates
If (L_TYPE <> 1 And
   L_TYPE <> 2 And
   L_TYPE <> 8 And
   L_TYPE <> 9 and
   (sfscompany:property_rating not one of 1 or
   bopgeneral:rate_no = 0)) Then
    Begin
    L_RECORD_TYPE = 2
    L_COMPANY_ID = bopgeneral:company_id
    L_LINE_OF_BUSINESS = bopgeneral:line_of_business
    L_TERRITORY = 999
    L_RATING_ID = "4"
    L_CONSTRUCTION_STRING = Str(bopGENERAL:CONSTRUCTION)
    L_STATE = bopGENERAL:STATE
    L_PROTECTION = bopGENERAL:PROTECTION
    L_EFF_DATE = sfpNAME:EFF_DATE
    L_TYPE = bopGENERAL:BOP_TYPE
    L_RATE_NO = bopGENERAL:RATE_NO
    Access BPSCREDITS, Set BPSCREDITS:COMPANY_ID = L_COMPANY_ID,
                           BPSCREDITS:STATE = L_STATE,
                           BPSCREDITS:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS, Generic

    while BPSCREDITS:COMPANY_ID       = L_COMPANY_ID and
          BPSCREDITS:STATE            = L_STATE and
          BPSCREDITS:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS
        begin
        If L_EFF_DATE >= BPSCREDITS:EFF_DATE Then
            L_PERCENT_OCCUPIED  = BPSCREDITS:PERCENT_OCCUPIED

        Next BPSCREDITS
        End

    If bopGENERAL:TENANT = "N" And
       bopGENERAL:PERCENT_OCCUPIED >= L_PERCENT_OCCUPIED Then
        L_OCCUPIED = "O"
    Else
        L_OCCUPIED = "L"

    Include "bpsbuild.inc"

    L_PROPERTY_RATE = L_BUILDING_RATE
    End

If l_type = 9 and
   sfscompany:boiler_rating = 1 then
    Begin
    L_RECORD_TYPE = 2
    L_COMPANY_ID = bopgeneral:company_id
    L_LINE_OF_BUSINESS = bopgeneral:line_of_business
    L_TERRITORY = 999
    L_RATING_ID = "4"
    L_CONSTRUCTION_STRING = Str(bopGENERAL:CONSTRUCTION)
    L_STATE = bopGENERAL:STATE
    L_PROTECTION = bopGENERAL:PROTECTION
    L_EFF_DATE = sfpNAME:EFF_DATE
    L_TYPE = bopGENERAL:BOP_TYPE
    L_RATE_NO = bopGENERAL:RATE_NO
    Access BPSCREDITS, Set BPSCREDITS:COMPANY_ID = L_COMPANY_ID,
                           BPSCREDITS:STATE = L_STATE,
                           BPSCREDITS:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS, Generic

    while BPSCREDITS:COMPANY_ID       = L_COMPANY_ID and
          BPSCREDITS:STATE            = L_STATE and
          BPSCREDITS:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS
        begin
        If L_EFF_DATE >= BPSCREDITS:EFF_DATE Then
            L_PERCENT_OCCUPIED  = BPSCREDITS:PERCENT_OCCUPIED

        Next BPSCREDITS
        End

    If bopGENERAL:TENANT = "N" And
       bopGENERAL:PERCENT_OCCUPIED >= L_PERCENT_OCCUPIED Then
        L_OCCUPIED = "O"
    Else
        L_OCCUPIED = "L"

    Include "bpsbuild.inc"

    L_PROPERTY_RATE = L_BUILDING_RATE
    End

Do GET_CREDITS
Do GET_LIABILITY
If L_LIABILITY_RATE = 0 Then
    L_LIABILITY_RATE = 1.00

if sfscompany:boiler_rating one of 4 and
   bopgeneral:state one of 29 then
    begin
    l_territory_contents = bopgeneral:rating_territory_factor *
                           bopgeneral:special_exposure_factor
    end
else
if sfscompany:boiler_rating one of 4 and
   bopgeneral:state not one of 29 then
    begin
    if bopgeneral:territory_factors[2] <> 0 then
        l_territory_contents = bopgeneral:territory_factors[2]
    else
        l_territory_contents = bopgeneral:rating_territory_factor
    end
else
    Do GET_TERRITORY_FACTORS

l_wind_deduct_factor = 0
Do GET_WIND_DEDUCTIBLE

L_PROPERTY_LIMIT = bopGENERAL:PROPERTY_LIMIT Divide 1000
access bpsrate, set bpsrate:company_id = bopgeneral:company_id,
                    bpsrate:state = bopgeneral:state,
                    bpsrate:line_of_business = bopgeneral:line_of_business, generic

while bpsrate:company_id = bopgeneral:company_id and
      bpsrate:state = bopgeneral:state and
      bpsrate:line_of_business = bopgeneral:line_of_business
        begin
        if sfpname:eff_date >= bpsrate:eff_date then
            begin
            l_liability_rate_or_charge = bpsrate:liability_rate_or_charge

            end

        next bpsrate
        end

Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                             bopgeneral_alias:pol_year = bopgeneral:pol_year,
                             bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                             bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                             bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

l_tier = bopgeneral_alias:tier
include "sfstier.pro"

if l_tier_factor = 0 then
    l_tier_factor = 1.00

if l_wind_exclusion_factor = 0 or
   bopgeneral_alias:windstorm_exclusion = 0 then
    l_wind_exclusion_factor = 1.00

if l_liability_rate_or_charge not one of 1 then
    begin
    if bopgeneral_alias:property_limit = 0 then
        L_PROPERTY_ADJUSTMENTS = L_PROPERTY_CREDIT_FACTORS *
                                 L_TERRITORY_CONTENTS * L_WIND_DEDUCT_FACTOR *
                                 L_CONTENTS_SPRINKLER *
                                 L_FMA_FACTOR * l_tier_factor *
                                 l_wind_exclusion_factor
    else
        begin
/*        write("%c%s",1005,"                                                                                    ")
        write("%c%n",1005,l_property_credit_factors)
        write("%c%n",1015,l_liability_rate)
        write("%c%n",1025,l_territory_contents)
        write("%c%n",1035,l_wind_deduct_factor)
        write("%c%n",1045,l_aggregate_factor)
        write("%c%n",1055,l_contents_sprinkler)
        write("%c%n",1065,l_wind_exclusion_factor)
        write("%c%n",1075,l_fma_factor)
        write("%c%n",1085,l_tier_factor)
        read(10,01,"press enter",l_enter,1)*/
        L_PROPERTY_ADJUSTMENTS = L_PROPERTY_CREDIT_FACTORS * L_LIABILITY_RATE *
                                 L_TERRITORY_CONTENTS * L_WIND_DEDUCT_FACTOR *
                                 L_AGGREGATE_FACTOR * L_CONTENTS_SPRINKLER *
                                 l_wind_exclusion_factor *
                                 L_FMA_FACTOR * l_tier_factor
--write("%c%n",2005,l_property_adjustments)
        end
    end
else
    begin
    L_PROPERTY_ADJUSTMENTS = L_PROPERTY_CREDIT_FACTORS * l_aggregate_factor *
                             L_TERRITORY_CONTENTS * L_WIND_DEDUCT_FACTOR *
                             L_CONTENTS_SPRINKLER *
                             L_FMA_FACTOR * l_tier_factor
    end

L_PROPERTY_RATE = L_PROPERTY_RATE * L_LOSS_COST
L_PROPERTY_RATE_1 = L_PROPERTY_RATE
--write("%c%n",2015,l_property_rate)
--write("%c%n",2025,l_property_rate_1)
Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                             bopgeneral_alias:pol_year = bopgeneral:pol_year,
                             bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                             bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                             bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

if sfscompany:boiler_Rating <> 4 then
begin
if l_liability_rate_or_charge not one of 1 then
    begin
    If bopGENERAL_ALIAS:ALARM_OPTION[1] = "Y" And
       bopGENERAL_ALIAS:ALARM_OPTION[2] = "Y" And
       bopGENERAL_ALIAS:ALARM_OPTION[3] = "N" Then
        L_PROPERTY_ADJUSTMENTS = L_PROPERTY_ADJUSTMENTS * bopGENERAL_ALIAS:ALARM_FACTOR
    If bopGENERAL_ALIAS:ALARM_OPTION[1] = "Y" And
       bopGENERAL_ALIAS:ALARM_OPTION[2] = "N" And
       bopGENERAL_ALIAS:ALARM_OPTION[3] = "N" Then
        L_PROPERTY_ADJUSTMENTS = L_PROPERTY_ADJUSTMENTS * bopGENERAL_ALIAS:ALARM_FACTOR
    If bopGENERAL_ALIAS:ALARM_OPTION[3] = "Y" Then
        L_PROPERTY_ADJUSTMENTS = L_PROPERTY_ADJUSTMENTS * bopGENERAL_ALIAS:ALARM_FACTOR
    end
else
    begin
    if bopgeneral_alias:alarm_option[1] = "Y" and
       bopgeneral_alias:alarm_option[2] = "Y" then
        L_PROPERTY_ADJUSTMENTS = L_PROPERTY_ADJUSTMENTS *
                                 bopGENERAL_ALIAS:ALARM_FACTOR
    if bopgeneral_alias:alarm_option[1] = "Y" and
       bopgeneral_alias:alarm_option[2] = "N" then
        L_PROPERTY_ADJUSTMENTS = L_PROPERTY_ADJUSTMENTS *
                                 bopGENERAL_ALIAS:ALARM_FACTOR
    end
end

--write("%c%n",2035,l_property_adjustments)
End

Procedure CALC_EXPANDED
Begin
L_COMPANY_ID = sfpname:company_id
L_STATE = bopGENERAL:STATE
L_LINE_OF_BUSINESS = bopgeneral:line_of_business
L_RECORD_TYPE = 3
L_TERRITORY = 999
If bopGENERAL:PROPERTY_LIMIT <= 10000 Then
    L_SPECIAL_LIMIT_1 = 100
Else
    L_SPECIAL_LIMIT_1 = bopGENERAL:PROPERTY_LIMIT Divide 100
L_EFF_DATE = sfpNAME:EFF_DATE
L_RATE_GROUP = bopGENERAL:RATE_GROUP

If L_SPECIAL_LIMIT_1 < 2001 and
   bopgeneral:property_limit < 1000000 Then
    Begin
    l_special_limit = l_special_limit_1
    Include "bpsspecprop.inc"
    End
Else
if l_special_limit_1 => 2001 or
   bopgeneral:property_limit > 999999 then
    Begin
    L_SPECIAL_LIMIT = 2000
    Include "bpsspecprop1.inc"
    L_SPECIAL_LIMIT_1 = 200000
    L_SPECIAL_LIMIT_2 = ((bopGENERAL:PROPERTY_LIMIT -
                        L_SPECIAL_LIMIT_1) Divide 50000)
    L_SPECIAL_PREMIUM = ((L_SPECIAL_LIMIT_2 * L_SPECIAL_EACH_ADDL) +
                        L_SPECIAL)
    L_SPECIAL = L_SPECIAL_PREMIUM
    End

Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = G_policy_NO,
                             bopgeneral_alias:pol_year = bopgeneral:pol_year,
                             bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                             bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                             bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

if l_liability_rate_or_charge not one of 1 then
    begin
    If bopGENERAL_ALIAS:ALARM_OPTION[1] = "Y" And
       bopGENERAL_ALIAS:ALARM_OPTION[2] = "Y" And
       bopGENERAL_ALIAS:ALARM_OPTION[3] = "N" Then
        L_PROPERTY_CREDIT_FACTORS = L_PROPERTY_CREDIT_FACTORS *
                                    bopGENERAL_ALIAS:ALARM_FACTOR
    If bopGENERAL_ALIAS:ALARM_OPTION[1] = "Y" And
       bopGENERAL_ALIAS:ALARM_OPTION[2] = "N" And
       bopGENERAL_ALIAS:ALARM_OPTION[3] = "N" Then
        L_PROPERTY_CREDIT_FACTORS = L_PROPERTY_CREDIT_FACTORS *
                                    bopGENERAL_ALIAS:ALARM_FACTOR

    If bopGENERAL_ALIAS:ALARM_OPTION[3] = "Y" Then
        L_PROPERTY_CREDIT_FACTORS = L_PROPERTY_CREDIT_FACTORS *
                                    bopGENERAL_ALIAS:ALARM_FACTOR
    end
else
    begin
    if bopgeneral_alias:alarm_option[1] = "Y" and
       bopgeneral_alias:alarm_option[2] = "Y" then
        l_property_credit_factors = l_property_credit_factors *
                                    bopgeneral_alias:alarm_factor
    if bopgeneral_alias:alarm_option[1] = "N" and
       bopgeneral_alias:alarm_option[2] = "Y" then
        l_property_credit_factors = l_property_credit_factors *
                                    bopgeneral_alias:alarm_factor
    end

/* end of calc_property_special */
End

Procedure CALC_EXPANDED_1
Begin
L_COMPANY_ID = bopgeneral:company_id
L_STATE = bopGENERAL:STATE
L_LINE_OF_BUSINESS = bopgeneral:line_of_business
L_RECORD_TYPE = 3
L_TERRITORY = 999
If bopGENERAL:PROPERTY_LIMIT <= 10000 Then
    L_SPECIAL_LIMIT = 100
Else
    L_SPECIAL_LIMIT = bopGENERAL:PROPERTY_LIMIT Divide 100
L_EFF_DATE = sfpNAME:EFF_DATE
L_RATE_GROUP = bopGENERAL:RATE_GROUP

If L_SPECIAL_LIMIT < 9501 and
   bopgeneral:property_limit < 1000000 Then
    Begin
    Include "bpsspecprop.inc"
    End
Else
if l_special_limit => 9501 or
   bopgeneral:property_limit > 999999 then
    Begin
    L_SPECIAL_LIMIT = 2000
    Include "bpsspecprop1.inc"
    L_SPECIAL_LIMIT_1 = 200000
    L_SPECIAL_LIMIT_2 = ((bopGENERAL:PROPERTY_LIMIT -
                        L_SPECIAL_LIMIT_1) Divide 50000)
    L_SPECIAL_PREMIUM = ((L_SPECIAL_LIMIT_2 * L_SPECIAL_EACH_ADDL) +
                        L_SPECIAL)
    L_SPECIAL = L_SPECIAL_PREMIUM
    End

Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = G_policy_NO,
                             bopgeneral_alias:pol_year = g_year,
                             bopgeneral_alias:end_sequence = g_end_sequence,
                             bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                             bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

if l_liability_rate_or_charge not one of 1 and
   sfscompany:boiler_rating <> 4 then
    begin
    If bopGENERAL_ALIAS:ALARM_OPTION[1] = "Y" And
       bopGENERAL_ALIAS:ALARM_OPTION[2] = "Y" And
       bopGENERAL_ALIAS:ALARM_OPTION[3] = "N" Then
        L_PROPERTY_CREDIT_FACTORS = L_PROPERTY_CREDIT_FACTORS *
                                    bopGENERAL_ALIAS:ALARM_FACTOR
    If bopGENERAL_ALIAS:ALARM_OPTION[1] = "Y" And
       bopGENERAL_ALIAS:ALARM_OPTION[2] = "N" And
       bopGENERAL_ALIAS:ALARM_OPTION[3] = "N" Then
        L_PROPERTY_CREDIT_FACTORS = L_PROPERTY_CREDIT_FACTORS *
                                    bopGENERAL_ALIAS:ALARM_FACTOR

    If bopGENERAL_ALIAS:ALARM_OPTION[3] = "Y" Then
        L_PROPERTY_CREDIT_FACTORS = L_PROPERTY_CREDIT_FACTORS *
                                    bopGENERAL_ALIAS:ALARM_FACTOR
    end
else
if sfscompany:boiler_rating <> 4 then
    begin
    if bopgeneral_alias:alarm_option[1] = "Y" and
       bopgeneral_alias:alarm_option[2] = "Y" then
        l_property_credit_factors = l_property_credit_factors *
                                    bopgeneral_alias:alarm_factor
    if bopgeneral_alias:alarm_option[1] = "N" and
       bopgeneral_alias:alarm_option[2] = "Y" then
        l_property_credit_factors = l_property_credit_factors *
                                    bopgeneral_alias:alarm_factor
    end

/* end of calc_property_special */
End

Procedure GET_CREDITS
Begin
L_COMPANY_ID = bopgeneral:company_id
L_STATE = bopGENERAL:STATE
L_LINE_OF_BUSINESS = bopgeneral:line_of_business
L_EFF_DATE = sfpNAME:EFF_DATE
L_LOSSES = bopGENERAL:LOSS_YEARS
L_MULTI_LOCATION = L_LOCATION_CREDIT
L_BUILDING_YEAR = Year(sfpNAME:EFF_DATE) - bopGENERAL:CONSTRUCTION_YEAR
L_TYPE = bopGENERAL:BOP_TYPE
L_SINGLE_OCCUPANCY = bopGENERAL:SINGLE_OCCUPANCY
Access BPSCREDITS, Set BPSCREDITS:COMPANY_ID = L_COMPANY_ID,
                       BPSCREDITS:STATE = L_STATE,
                       BPSCREDITS:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS, Generic

while BPSCREDITS:COMPANY_ID       = L_COMPANY_ID and
      BPSCREDITS:STATE            = L_STATE and
      BPSCREDITS:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS
    begin
    If L_EFF_DATE >= BPSCREDITS:EFF_DATE Then
        L_PERCENT_OCCUPIED  = BPSCREDITS:PERCENT_OCCUPIED

    Next BPSCREDITS
    End

If bopGENERAL:TENANT = "N" And
   bopGENERAL:PERCENT_OCCUPIED  >= L_PERCENT_OCCUPIED Then
    L_OWNER = "O"
Else
    L_OWNER = "L"
L_SPRINKLERED = bopGENERAL:SPRINKLERS

Include "bpscredit.inc"

Do GET_DEDUCTIBLE

--write("%c%s",3005,"                                                                     ")
If SFSCOMPANY:CUSTOMER_PROPERTY_RATING one of 2, 4 or -- ficof
   sfscompany:loss_income_rating = 3 Then  -- lebins
    Begin
    L_LOSS_INCOME_FACTOR_1 = 1.00
    If bopGENERAL:LIMIT_LOSS_INCOME = "Y" Then
        Begin
        L_LOSS_INCOME_LIMIT = 99999999
        Do GET_LOSS_INCOME
        L_LOSS_INCOME_FACTOR_1 = L_LOSS_INCOME_FACTOR_1 * L_LOSS_INCOME_FACTOR
--        write("%c%n",3005,l_loss_income_factor)
        End

    If bopGENERAL:DELETE_LOSS_INCOME = "Y" Then
        Begin
        L_LOSS_INCOME_LIMIT = 99999998
        Do GET_LOSS_INCOME
        L_LOSS_INCOME_FACTOR_1 = L_LOSS_INCOME_FACTOR_1 * L_LOSS_INCOME_FACTOR
--        write("%c%n",3015,l_loss_income_factor)
        End

    If bopGENERAL:WHOLESALER = "Y" Then
        Begin
        If bopGENERAL:WHOLESALER_PERCENT = 200  Then
            L_LOSS_INCOME_LIMIT = 99999997
        If bopGENERAL:WHOLESALER_PERCENT = 100 Then
            L_LOSS_INCOME_LIMIT = 99999996
        Do GET_LOSS_INCOME
        L_LOSS_INCOME_FACTOR_1 = L_LOSS_INCOME_FACTOR_1 * L_LOSS_INCOME_FACTOR
--        write("%c%n",3025,l_loss_income_factor)
        End

    If bopGENERAL:LOSS_INCOME_LIMIT <> 0 Then
        Begin
        L_LOSS_INCOME_LIMIT = bopGENERAL:LOSS_INCOME_LIMIT
        Do GET_LOSS_INCOME
        L_LOSS_INCOME_FACTOR_1 = L_LOSS_INCOME_FACTOR_1 * L_LOSS_INCOME_FACTOR
--        write("%c%n",3035,l_loss_income_factor)
        End

    L_LOSS_INCOME_FACTOR = L_LOSS_INCOME_FACTOR_1
--    write("%c%n",3045,l_loss_income_factor_1)
--    pause(1000)
    End
Else
    Begin
    If bopGENERAL:LIMIT_LOSS_INCOME = "Y" Then
        L_LOSS_INCOME_LIMIT = 99999999
    Else
    If bopGENERAL:DELETE_LOSS_INCOME = "Y" Then
        L_LOSS_INCOME_LIMIT = 99999998
    Else
    If bopGENERAL:WHOLESALER = "Y" And
       bopGENERAL:WHOLESALER_PERCENT = 200  Then
        L_LOSS_INCOME_LIMIT = 99999997
    Else
    If bopGENERAL:WHOLESALER = "Y" And
       bopGENERAL:WHOLESALER_PERCENT = 100 Then
        L_LOSS_INCOME_LIMIT = 99999996
    Else
        L_LOSS_INCOME_LIMIT = bopGENERAL:LOSS_INCOME_LIMIT

    Do GET_LOSS_INCOME
    End

L_MAX_CREDITS = L_NEW_BUILDING_FACTOR * L_EXPERIENCE_FACTOR *
                L_MULTI_LOCATION_FACTOR
If ((bopGENERAL:ALARM_OPTION[1] = "Y" Or
   bopGENERAL:ALARM_OPTION[2] = "Y") And
   bopGENERAL:ALARM_OPTION[3] = "N") Then
    L_MAX_CREDITS = L_MAX_CREDITS * L_FACTOR
If bopGENERAL:ALARM_OPTION[3] = "Y" Then
    L_MAX_CREDITS = L_MAX_CREDITS * L_SUPERIOR_FACTOR

If bopGENERAL:LOSS_INCOME_FACTOR <> 0 Then
    L_LOSS_INCOME_FACTOR = bopGENERAL:LOSS_INCOME_FACTOR

access bpsrate, set bpsrate:company_id = bopgeneral:company_id,
                    bpsrate:state = bopgeneral:state,
                    bpsrate:line_of_business = bopgeneral:line_of_business, generic

l_weather_factor = 1.00
while bpsrate:company_id = bopgeneral:company_id and
      bpsrate:state = bopgeneral:state and
      bpsrate:line_of_business = bopgeneral:line_of_business
        begin
        if sfpname:eff_date >= bpsrate:eff_date then
            begin
            if bopgeneral:weather_related = 1 then
                l_weather_factor = bpsrate:weather_related_factor[1]
            else
            if bopgeneral:weather_related = 2 then
                l_weather_factor = bpsrate:weather_related_factor[2]
            else
                l_weather_factor = 1.00

            end

        next bpsrate
        end

if sfscompany:boiler_rating = 1 then
    l_weather_factor = 1.00

/*write("%c%s",2005,"                                                                                                               ")
write("%c%n",2005,l_experience_factor)
write("%c%n",2015,l_new_building_factor)
write("%c%n",2025,l_multi_location_factor)
write("%c%n",2035,l_apt_condo_factor)
write("%c%n",2045,l_deductible_factor)
write("%c%n",2055,l_loss_income_factor)
write("%c%n",2065,l_single_owner_factor)
write("%c%n",2075,l_weather_factor)
pause(2000)*/
L_BUILDING_CREDIT_FACTORS = L_EXPERIENCE_FACTOR *
                            L_NEW_BUILDING_FACTOR * L_MULTI_LOCATION_FACTOR *
                            L_APT_CONDO_FACTOR * L_DEDUCTIBLE_FACTOR *
                            L_LOSS_INCOME_FACTOR * L_SINGLE_OWNER_FACTOR *
                            l_weather_factor
if sfscompany:boiler_rating = 1 then
    begin
    L_PROPERTY_CREDIT_FACTORS = L_EXPERIENCE_FACTOR *
                                L_MULTI_LOCATION_FACTOR * L_APT_CONDO_FACTOR *
                                L_DEDUCTIBLE_FACTOR * L_LOSS_INCOME_FACTOR *
                                L_SINGLE_OWNER_FACTOR * l_weather_factor
    end
else
    begin
    L_PROPERTY_CREDIT_FACTORS = L_EXPERIENCE_FACTOR *
                                L_MULTI_LOCATION_FACTOR * L_APT_CONDO_FACTOR *
                                L_DEDUCTIBLE_FACTOR * L_LOSS_INCOME_FACTOR *
                                L_SINGLE_OWNER_FACTOR
    end

if sfscompany:boiler_rating = 4 then
    begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_no,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    If bopGENERAL_ALIAS:ALARM_OPTION[1] = "Y" And
       bopGENERAL_ALIAS:ALARM_OPTION[2] = "Y" And
       bopGENERAL_ALIAS:ALARM_OPTION[3] = "N" Then
        begin
        L_building_credit_factors = l_building_credit_factors * bopGENERAL_ALIAS:ALARM_FACTOR
        l_property_credit_factors = l_property_credit_factors * bopgeneral_alias:alarm_factor
        end
    If bopGENERAL_ALIAS:ALARM_OPTION[1] = "Y" And
       bopGENERAL_ALIAS:ALARM_OPTION[2] = "N" And
       bopGENERAL_ALIAS:ALARM_OPTION[3] = "N" Then
        begin
        l_building_credit_factors = l_building_credit_factors * bopGENERAL_ALIAS:ALARM_FACTOR
        l_property_credit_factors = l_property_credit_factors * bopGENERAL_ALIAS:ALARM_FACTOR
        end
    If bopGENERAL_ALIAS:ALARM_OPTION[3] = "Y" Then
        begin
        L_BUILDING_credit_factors = L_BUILDING_credit_factors * bopGENERAL_ALIAS:ALARM_FACTOR
        L_property_credit_factors = L_property_credit_factors * bopGENERAL_ALIAS:ALARM_FACTOR
        end
    end

End

Procedure GET_DEDUCTIBLE
Begin
L_COMPANY_ID = bopgeneral:company_id
L_STATE = bopGENERAL:STATE
L_LINE_OF_BUSINESS = bopgeneral:line_of_business
L_DEDUCTIBLE = L_DEDUCTIBLE
L_DEDUCTIBLE_LIMIT = 99999999
L_EFF_DATE = sfpNAME:EFF_DATE

Include "sfsdeductible.inc"

End

Procedure GET_LOSS_INCOME
Begin
L_COMPANY_ID = bopgeneral:company_id
L_STATE = bopGENERAL:STATE
L_LINE_OF_BUSINESS = bopgeneral:line_of_business
L_EFF_DATE = sfpNAME:EFF_DATE

Include "bpslossincome.inc"

End

Procedure GET_TERRITORY_FACTORS
Begin
L_COMPANY_ID = bopgeneral:company_id
L_STATE = bopGENERAL:STATE
L_LINE_OF_BUSINESS = bopgeneral:line_of_business
L_TERRITORY = bopGENERAL:TERRITORY
l_str_zipcode = str(sfplocation:zipcode[1,5]) + "0000"
l_zipcode = val(l_str_zipcode)
L_EFF_DATE = sfpNAME:EFF_DATE

if ((bopgeneral:state = 37 and
   sfscompany:boiler_rating = 4) or
   (sfpname:company_id one of "NWIC", "FARMERS" and
   bopgeneral:state = 29)) then
    begin
    include "sfsterritory1.inc"
    if l_territory_building = 0 then
        begin
        include "sfsterrfactor.inc"
        end
    end
else
    begin
    Include "sfsterrfactor.inc"
    end

End

Procedure GET_WIND_DEDUCTIBLE
Begin
L_COMPANY_ID = bopgeneral:company_id
L_STATE = bopGENERAL:STATE
L_LINE_OF_BUSINESS = bopgeneral:line_of_business
L_DEDUCTIBLE = L_DEDUCTIBLE
L_WIND_DEDUCTIBLE = bopGENERAL:WIND_DEDUCTIBLE
L_EFF_DATE = sfpNAME:EFF_DATE

Include "sfswinddeduct.inc"

If L_WIND_DEDUCT_FACTOR = 0 Then
    L_WIND_DEDUCT_FACTOR = 1.00

End

Procedure ACCESS_LOSSCOST
Begin
L_COMPANY_ID = bopgeneral:company_id
L_STATE = bopGENERAL:STATE
L_LINE_OF_BUSINESS = bopgeneral:line_of_business
Access SFSLOSSCOST, Set SFSLOSSCOST:COMPANY_ID = L_COMPANY_ID,
                        SFSLOSSCOST:STATE = L_STATE,
                        SFSLOSSCOST:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS, Generic

while SFSLOSSCOST:COMPANY_ID       = L_COMPANY_ID and
      SFSLOSSCOST:STATE            = L_STATE and
      SFSLOSSCOST:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS
    begin
    If sfpNAME:EFF_DATE >= SFSLOSSCOST:EFF_DATE Then
        L_LOSS_COST = SFSLOSSCOST:RATE

    Next SFSLOSSCOST
    End

If L_LOSS_COST = 0 Then
    L_LOSS_COST = 1.0000

/* end of access_sfslosscost */
End

Procedure RATE_RESTAURANTS
Begin
L_COMPANY_ID = bopgeneral:company_id
L_STATE = bopGENERAL:STATE
L_LINE_OF_BUSINESS = bopgeneral:line_of_business
L_RECEIPTS = bopGENERAL:RECEIPTS
L_EFF_DATE = sfpNAME:EFF_DATE
l_code = ""
l_restaurant_premium = 0

Include "rest.pro"

Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                             bopgeneral_alias:pol_year = bopgeneral:pol_year,
                             bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                             bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                             bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

If bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO And
   bopgeneral_alias:pol_year = bopgeneral:pol_year and
   bopgeneral_alias:end_sequence = bopgeneral:end_sequence and
   bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO And
   bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO Then
    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:RESTAURANT_ENHANCEMENT = L_RECEIPTS_CHARGE
        End

End

Procedure RATE_SIGNS
Begin
-- this is for signs attached to the building, the rates are entered into bpsglass

L_COMPANY_ID = bopgeneral:company_id
L_LINE_OF_BUSINESS = bopgeneral:line_of_business
L_STATE = bopGENERAL:STATE
L_EFF_DATE = sfpNAME:EFF_DATE
L_RECORD_TYPE = 6
L_TERRITORY = 999

Include "bpssigns.inc"

Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                             bopgeneral_alias:pol_year = bopgeneral:pol_year,
                             bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                             bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                             bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

If bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO And
   bopgeneral_alias:pol_year = bopgeneral:pol_year and
   bopgeneral_alias:end_sequence = bopgeneral:end_sequence and
   bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO And
   bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO Then
    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:SIGNS_PREMIUM = (((bopGENERAL_ALIAS:SIGNS_LIMIT -
                                         L_EXTERIOR_SIGNS_LIMIT)
                                         Divide L_LIMIT) * L_CHARGE)
        End

End

Procedure RATE_SIGNS_NOT_ATTACHED
Begin
Access BPSRATE, Set BPSRATE:COMPANY_ID = bopgeneral:company_id,
                    BPSRATE:STATE = bopGENERAL:STATE,
                    BPSRATE:LINE_OF_BUSINESS = bopgeneral:line_of_business, Generic

while BPSRATE:COMPANY_ID       = bopgeneral:company_id and
      BPSRATE:STATE            = bopGENERAL:STATE and
      BPSRATE:LINE_OF_BUSINESS = bopgeneral:line_of_business
    begin
    If sfpNAME:EFF_DATE >= BPSRATE:EFF_DATE Then
        Begin
        Switch(L_FORM)
          Case 1 :  Begin
                    L_CHARGE = BPSRATE:SIGNS_NOT_ATTACHED_CHARGE
                    L_LIMIT = BPSRATE:SIGNS_NOT_ATTACHED_LIMIT
                    L_DEDUCTIBLE_CHARGE = 1.00
                    End
          Default : Begin
                    L_CHARGE = BPSRATE:SIGNS_ALL_RISK_CHARGE
                    L_LIMIT = BPSRATE:SIGNS_ALL_RISK_LIMIT
                    L_DEDUCTIBLE_CHARGE = 1.00
                    If bopGENERAL:SIGNS_DEDUCTIBLE[2] = BPSRATE:SIGNS_DEDUCTIBLE[1] Then
                        L_DEDUCTIBLE_CHARGE = BPSRATE:SIGNS_DEDUCTIBLE_FACTOR[1]
                    If bopGENERAL:SIGNS_DEDUCTIBLE[2] = BPSRATE:SIGNS_DEDUCTIBLE[2] Then
                        L_DEDUCTIBLE_CHARGE = BPSRATE:SIGNS_DEDUCTIBLE_FACTOR[2]
                    If bopGENERAL:SIGNS_DEDUCTIBLE[2] = BPSRATE:SIGNS_DEDUCTIBLE[3] Then
                        L_DEDUCTIBLE_CHARGE = BPSRATE:SIGNS_DEDUCTIBLE_FACTOR[3]
                    If bopGENERAL:SIGNS_DEDUCTIBLE[2] = BPSRATE:SIGNS_DEDUCTIBLE[4] Then
                        L_DEDUCTIBLE_CHARGE = BPSRATE:SIGNS_DEDUCTIBLE_FACTOR[4]
                    End
          End
        End

   Next BPSRATE
   End

Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                             bopgeneral_alias:pol_year = bopgeneral:pol_year,
                             bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                             bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                             bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

If bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO And
   bopgeneral_alias:pol_year = bopgeneral:pol_year and
   bopgeneral_alias:end_sequence = bopgeneral:end_sequence and
   bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO And
   bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO Then
    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:SIGNS_NOT_ATTACHED_PREMIUM = (((bopGENERAL_ALIAS:SIGNS_NOT_ATTACHED_LIMIT
                                                      Divide L_LIMIT) * L_CHARGE) *
                                                      L_DEDUCTIBLE_CHARGE)
        End

End

Procedure RATE_GLASS
Begin
L_COMPANY_ID = bopgeneral:company_id
L_STATE = bopGENERAL:STATE
L_LINE_OF_BUSINESS = bopgeneral:line_of_business
L_EFF_DATE = sfpNAME:EFF_DATE
L_RECORD_TYPE = 5
L_TERRITORY = bopGENERAL:TERRITORY
L_TYPE = bopGENERAL:BOP_TYPE

Include "bpsglass.inc"

Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                             bopgeneral_alias:pol_year = bopgeneral:pol_year,
                             bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                             bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                             bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

If bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO And
   bopgeneral_alias:pol_year = bopgeneral:pol_year and
   bopgeneral_alias:end_sequence = bopgeneral:end_sequence and
   bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO And
   bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO Then
    Change bopGENERAL_ALIAS
        Begin
        if bopgeneral:special_enhancement = 1 and
           sfscompany:boiler_rating = 2 then
            begin
            bopGENERAL_ALIAS:GLASS_PREMIUM = (((bopGENERAL_ALIAS:GLASS_LIMIT -
                                             l_glass_limit) Divide
                                             L_LIMIT) * L_GLASS_CHARGE)
            end
        else
            begin
            bopGENERAL_ALIAS:GLASS_PREMIUM = ((bopGENERAL_ALIAS:GLASS_LIMIT Divide
                                             L_LIMIT) * L_GLASS_CHARGE)
            end

        If bopGENERAL_ALIAS:INCLUDE_GLASS_DEDUCTIBLE = "Y" Then
            Begin
            If SFSLINE_ALIAS:OPTION = "P" and
               sfscompany:boiler_rating <> 4 Then
                Begin
                bopGENERAL_ALIAS:GLASS_PREMIUM = ((bopGENERAL_ALIAS:GLASS_LIMIT
                                                 Divide L_LIMIT) * L_FACTOR_1)
                End
            Else
                Begin
                bopGENERAL_ALIAS:GLASS_PREMIUM = bopGENERAL_ALIAS:GLASS_PREMIUM *
                                                 L_FACTOR_1
                End
            bopGENERAL_ALIAS:GLASS_DEDUCTIBLE = L_GLASS_DEDUCTIBLE
            End
        Else
            Begin
            bopGENERAL_ALIAS:INCLUDE_GLASS_DEDUCTIBLE = "N"
            bopGENERAL_ALIAS:GLASS_DEDUCTIBLE = 0
            End
        End

End

Procedure RATE_BURGLARY
Begin
Access BPSRATE, Set BPSRATE:COMPANY_ID = bopgeneral:company_id,
                    BPSRATE:STATE = bopGENERAL:STATE,
                    BPSRATE:LINE_OF_BUSINESS = bopgeneral:line_of_business, Generic

while BPSRATE:COMPANY_ID       = bopgeneral:company_id and
      BPSRATE:STATE            = bopGENERAL:STATE and
      BPSRATE:LINE_OF_BUSINESS = bopgeneral:line_of_business
    begin
    If sfpNAME:EFF_DATE >= BPSRATE:EFF_DATE Then
        Begin
        L_FACTOR_1 = BPSRATE:BURGLARY_FACTOR[1]
        L_FACTOR_2 = BPSRATE:BURGLARY_FACTOR[2]
        L_LIMIT = BPSRATE:BURGLARY_LIMIT_ON[2]
        End

    Next BPSRATE
    End

L_COMPANY_ID = bopgeneral:company_id
L_STATE = bopGENERAL:STATE
L_LINE_OF_BUSINESS = bopgeneral:line_of_business
L_RECORD_TYPE = 3
L_TERRITORY = 999
If bopGENERAL:PROPERTY_LIMIT <= 10000 Then
    L_SPECIAL_LIMIT = 100
Else
    L_SPECIAL_LIMIT = bopGENERAL:PROPERTY_LIMIT Divide 100
L_EFF_DATE = sfpNAME:EFF_DATE
L_RATE_GROUP = bopGENERAL:RATE_GROUP

If L_SPECIAL_LIMIT < 2500 Then
    Begin
    Include "bpsspecprop.inc"
    End
Else
    Begin
    L_SPECIAL_LIMIT = 2000
    Include "bpsspecprop1.inc"
    L_SPECIAL_LIMIT_1 = 200000
    L_SPECIAL_LIMIT_2 = ((bopGENERAL:PROPERTY_LIMIT -
                        L_SPECIAL_LIMIT_1) Divide 50000)
    L_SPECIAL_PREMIUM = ((L_SPECIAL_LIMIT_2 * L_SPECIAL_EACH_ADDL) +
                        L_SPECIAL)
    L_SPECIAL = L_SPECIAL_PREMIUM
    End

Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                             bopgeneral_alias:pol_year = bopgeneral:pol_year,
                             bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                             bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                             bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

If bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO And
   bopgeneral_alias:pol_year = bopgeneral:pol_year and
   bopgeneral_alias:end_sequence = bopgeneral:end_sequence and
   bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO And
   bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO Then
    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:BURGLARY_PREMIUM = 0
        bopGENERAL_ALIAS:BURGLARY_PREMIUM = L_SPECIAL * L_LOSS_COST *
                                            L_TERRITORY_EXPANDED
                                            * L_PROPERTY_CREDIT_FACTORS
                                            * L_FACTOR_1
        End

If bopGENERAL:BURGLARY_LIMIT_ON = L_LIMIT Then
    Begin
    L_COMPANY_ID = bopgeneral:company_id
    L_STATE = bopGENERAL:STATE
    L_LINE_OF_BUSINESS = bopgeneral:line_of_business
    L_RECORD_TYPE = 3
    L_TERRITORY = 999
    L_SPECIAL_LIMIT = 100
    L_EFF_DATE = sfpNAME:EFF_DATE
    L_RATE_GROUP = bopGENERAL:RATE_GROUP

    Include "bpsspecprop.inc"

    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    If bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO And
       bopgeneral_alias:pol_year = bopgeneral:pol_year and
       bopgeneral_alias:end_sequence = bopgeneral:end_sequence and
       bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO And
       bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO Then
        Change bopGENERAL_ALIAS
            Begin
            bopGENERAL_ALIAS:BURGLARY_PREMIUM = (bopGENERAL_ALIAS:BURGLARY_PREMIUM +
                                                (L_SPECIAL * L_LOSS_COST *
                                                L_TERRITORY_EXPANDED
                                                * L_PROPERTY_CREDIT_FACTORS *
                                                L_FACTOR_2))
            End
    End

End

Procedure RATE_MONEY
Begin
L_COMPANY_ID = bopgeneral:company_id
L_STATE = bopGENERAL:STATE
L_LINE_OF_BUSINESS = bopgeneral:line_of_business
L_EFF_DATE = sfpNAME:EFF_DATE
L_RECORD_TYPE = 7
L_TERRITORY = 999
L_FILLER[1,3] = "   "
if sfscompany:boiler_rating <> 4 then
    begin
    If bopGENERAL:MONEY_LIMIT_ON <> 0 Then
        Begin
        If bopGENERAL:MONEY_LIMIT_ON = BPSDEFAULT:MONEY_LIMIT_ON Then
            L_MONEY_LIMITS = 1
        Else
            L_MONEY_LIMITS = 2
        End
    Else
         L_MONEY_LIMITS = 1
    end
else
    begin
    if bopgeneral:money_limit_on = 10000 then
        l_money_limits = 1
    else
    if bopgeneral:money_limit_on = 15000 then
        begin
        if bopgeneral:money_limit_off = 5000 then
            l_money_limits = 2
        else
            l_money_limits = 3
        end
    else
        l_money_limits = 4
    end

Include "bpsmoney.inc"

L_COMPANY_ID = bopgeneral:company_id
L_STATE = bopGENERAL:STATE
L_LINE_OF_BUSINESS = bopgeneral:line_of_business
L_RECORD_TYPE = 3
L_TERRITORY = 999
L_SPECIAL_LIMIT = 100
L_EFF_DATE = sfpNAME:EFF_DATE
L_RATE_GROUP = bopGENERAL:RATE_GROUP

Include "bpsspecprop.inc"

Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                             bopgeneral_alias:pol_year = bopgeneral:pol_year,
                             bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                             bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                             bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

If bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO And
   bopgeneral_alias:pol_year = bopgeneral:pol_year and
   bopgeneral_alias:end_sequence = bopgeneral:end_sequence and
   bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO And
   bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO Then
    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:MONEY_PREMIUM = 0
        If bopGENERAL_ALIAS:MONEY_LIMIT_ON = 0 Then
            Begin
            bopGENERAL_ALIAS:MONEY_PREMIUM = L_SPECIAL * L_MONEY_RATE_1 *
                                             bopGENERAL_ALIAS:ADJUSTMENT_FACTORS
            bopGENERAL_ALIAS:MONEY_PREMIUM = bopGENERAL_ALIAS:MONEY_PREMIUM * -1
            End
        If bopGENERAL_ALIAS:ATTACH_BU5001 = "Y" Then
            Begin
            bopGENERAL_ALIAS:MONEY_PREMIUM = L_SPECIAL * L_MONEY_RATE_2
            End
        If ((bopGENERAL_ALIAS:MONEY_LIMIT_ON <> BPSDEFAULT:MONEY_LIMIT_ON And
           bopGENERAL_ALIAS:MONEY_LIMIT_ON <> 0)  Or
           (bopGENERAL_ALIAS:ATTACH_BU5001 = "Y" And
           bopGENERAL_ALIAS:MONEY_LIMIT_ON <> BPSDEFAULT:MONEY_LIMIT_ON)) Then
            begin
            if sfscompany:boiler_rating = 3 then
                begin
                bopGENERAL_ALIAS:MONEY_PREMIUM = (bopGENERAL_ALIAS:MONEY_PREMIUM +
                                                 (L_SPECIAL * L_MONEY_RATE_3 *
                                                 bopgeneral_alias:adjustment_factors))
                end
            else
            if sfscompany:boiler_rating = 4 then
                begin
                switch(bopgeneral_alias:bop_type)
                  case 1  : bopgeneral_alias:money_premium = l_money_office_charge
                  default : bopgeneral_alias:money_premium = l_money_apt_charge
                  end
                end
            else
                begin
                bopGENERAL_ALIAS:MONEY_PREMIUM = (bopGENERAL_ALIAS:MONEY_PREMIUM +
                                                 (L_SPECIAL * L_MONEY_RATE_3))
                end
            end
        If bopGENERAL_ALIAS:MONEY_LIMIT_ON = BPSDEFAULT:MONEY_LIMIT_ON And
           bopGENERAL_ALIAS:ATTACH_BU5001 = "N" Then
            bopGENERAL_ALIAS:MONEY_PREMIUM = 0
        End

End

Procedure RATE_AR
Begin
if bopgeneral:restaurant = 0 or
  sfpname:company_id <> "NWIC" then
    begin
Access BPSRATE, Set BPSRATE:COMPANY_ID = bopgeneral:company_id,
                    BPSRATE:STATE = bopGENERAL:STATE,
                    BPSRATE:LINE_OF_BUSINESS = bopgeneral:line_of_business, Generic

while BPSRATE:COMPANY_ID       = bopgeneral:company_id and
      BPSRATE:STATE            = bopGENERAL:STATE and
      BPSRATE:LINE_OF_BUSINESS = bopgeneral:line_of_business
    begin
    If sfpNAME:EFF_DATE >= BPSRATE:EFF_DATE Then
        Begin
        L_FACTOR_1 = BPSRATE:AR_FACTOR
        L_LIMIT = BPSRATE:AR_LIMIT
        End

    Next BPSRATE
    End
end
else
    begin
    access bpsrate1, set bpsrate1:company_id = bopgeneral:company_id,
                         bpsrate1:state = bopgeneral:state,
                         bpsrate1:line_of_business = bopgeneral:line_of_business, generic

    while bpsrate1:company_id = bopgeneral:company_id and
          bpsrate1:state = bopgeneral:state and
          bpsrate1:line_of_business = bopgeneral:line_of_business
        begin
        if (sfpname:eff_date >= bpsrate1:eff_date and
           (sfpname:eff_date <= bpsrate1:exp_date or
           bpsrate1:exp_date = 0)) then
            begin
            l_factor_1 = bpsrate1:ar_restaurant_rate
            l_limit    = bpsrate1:ar_restaurant_per
            end

        next bpsrate1
        end
    end

Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                             bopgeneral_alias:pol_year = bopgeneral:pol_year,
                             bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                             bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                             bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

If bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO And
   bopgeneral_alias:pol_year = bopgeneral:pol_year and
   bopgeneral_alias:end_sequence = bopgeneral:end_sequence and
   bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO And
   bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO Then
    Change bopGENERAL_ALIAS
        Begin
        If bopGENERAL_ALIAS:AR_LIMIT <> L_AR_LIMIT_1 Then
            begin
            if l_liability_rate_or_charge = 1 then
                bopGENERAL_ALIAS:AR_PREMIUM = ((bopGENERAL_ALIAS:PROPERTY_RATE *
                                              l_liability_Rate) *
                                              (((bopGENERAL_ALIAS:AR_LIMIT - L_AR_LIMIT_1)
                                               Divide L_LIMIT) * L_FACTOR_1))
            else
            if sfscompany:boiler_rating <> 4 then
                bopGENERAL_ALIAS:AR_PREMIUM = (bopGENERAL_ALIAS:PROPERTY_RATE *
                                              (((bopGENERAL_ALIAS:AR_LIMIT - L_AR_LIMIT_1)
                                               Divide L_LIMIT) * L_FACTOR_1))
            else
            if sfscompany:boiler_rating = 4 then
                begin
                if bopgeneral_alias:property_rate <> 0 and
                   bopgeneral_alias:class_code <> 75 then
                    bopGENERAL_ALIAS:AR_PREMIUM = (bopGENERAL_ALIAS:PROPERTY_RATE *
                                                  (((bopGENERAL_ALIAS:AR_LIMIT - L_AR_LIMIT_1)
                                                   Divide L_LIMIT) * L_FACTOR_1))
                else
                    bopGENERAL_ALIAS:AR_PREMIUM = (l_building_rate *
                                                  (((bopGENERAL_ALIAS:AR_LIMIT - L_AR_LIMIT_1)
                                                   Divide L_LIMIT) * L_FACTOR_1))
                end
            end
        End

End

Procedure RATE_UTILITY
Begin
if bopgeneral:restaurant = 0 or
   sfpname:company_id <> "NWIC" then
begin
Access BPSRATE, Set BPSRATE:COMPANY_ID = bopgeneral:company_id,
                    BPSRATE:STATE = bopGENERAL:STATE,
                    BPSRATE:LINE_OF_BUSINESS = bopgeneral:line_of_business, Generic

while BPSRATE:COMPANY_ID       = bopgeneral:company_id and
      BPSRATE:STATE            = bopGENERAL:STATE and
      BPSRATE:LINE_OF_BUSINESS = bopgeneral:line_of_business
    begin
    If sfpNAME:EFF_DATE >= BPSRATE:EFF_DATE Then
        Begin
        L_CHARGE = BPSRATE:UTILITY_CHARGE
        L_LIMIT = BPSRATE:UTILITY_LIMIT
        End

    Next BPSRATE
    End
end
else
if sfpname:company_id = "NWIC" and
   bopgeneral:restaurant = 1 then
    begin
    access bpsrate1, set bpsrate1:company_id = bopgeneral:company_id,
                         bpsrate1:state = bopgeneral:state,
                         bpsrate1:line_of_business = bopgeneral:line_of_business, generic

    while bpsrate1:company_id = bopgeneral:company_id and
          bpsrate1:state = bopgeneral:state and
          bpsrate1:line_of_business = bopgeneral:line_of_business
        begin
        if (sfpname:eff_date >= bpsrate1:eff_date and
           (sfpname:eff_date <= bpsrate1:exp_date or
           bpsrate1:exp_date = 0)) then
            begin
            l_charge = bpsrate1:utility_restaurant_rate
            l_limit    = bpsrate1:utility_restaurant_per
            end

        next bpsrate1
        end
    end

Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                             bopgeneral_alias:pol_year = bopgeneral:pol_year,
                             bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                             bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                             bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

If bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO And
   bopgeneral_alias:pol_year = bopgeneral:pol_year and
   bopgeneral_alias:end_sequence = bopgeneral:end_sequence and
   bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO And
   bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO Then
    Change bopGENERAL_ALIAS
        Begin
        If bopGENERAL_ALIAS:UTILITY_LIMIT <> L_UTILITY_LIMIT Then
            bopGENERAL_ALIAS:UTILITY_PREMIUM = (((bopGENERAL_ALIAS:UTILITY_LIMIT -
                                               L_UTILITY_LIMIT) Divide
                                               L_LIMIT) * L_CHARGE)
        End

End

Procedure RATE_WATERBACKUP
Begin
Access BPSRATE, Set BPSRATE:COMPANY_ID = bopgeneral:company_id,
                    BPSRATE:STATE = bopGENERAL:STATE,
                    BPSRATE:LINE_OF_BUSINESS = bopgeneral:line_of_business, Generic

while BPSRATE:COMPANY_ID       = bopgeneral:company_id and
      BPSRATE:STATE            = bopGENERAL:STATE and
      BPSRATE:LINE_OF_BUSINESS = bopgeneral:line_of_business
    begin
    If sfpNAME:EFF_DATE >= BPSRATE:EFF_DATE Then
        Begin
        L_CHARGE = BPSRATE:WATERBKUP_CHARGE
        L_LIMIT = BPSRATE:WATERBKUP_PER
        L_CHARGE_1  = BPSRATE:WATERBKUP_INCREASE
        End

    Next BPSRATE
    End

Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_no = bopGENERAL:policy_no,
                             bopgeneral_alias:pol_year = bopgeneral:pol_year,
                             bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                             bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                             bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

If bopGENERAL_ALIAS:policy_no = bopGENERAL:policy_no And
   bopgeneral_alias:pol_year = bopgeneral:pol_year and
   bopgeneral_alias:end_sequence = bopgeneral:end_sequence and
   bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO And
   bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO Then
    Change bopGENERAL_ALIAS
        Begin
        If ((bopGENERAL_ALIAS:WATER_BACKUP_LIMIT = L_WATER_BKUP_LIMIT And
           SFSLINE_ALIAS:OPTION <> "P" and
           sfscompany:boiler_rating <> 4) or
           (bopgeneral_alias:water_backup_limit <= 5000 and
           bopgeneral_alias:water_backup_limit > l_water_bkup_limit and
           sfsline_alias:option = "P" and
           sfscompany:boiler_rating = 2)) Then
            Begin
            bopGENERAL_ALIAS:WATER_BACKUP_PREMIUM = L_CHARGE
            End
        Else
        if sfscompany:boiler_rating = 4 and
           sfsline_alias:option not one of "S", "P" and
           bopgeneral_alias:water_backup_limit = l_water_bkup_limit then
            begin
            bopgeneral_alias:water_backup_premium = l_charge
            end
        else
        if sfscompany:boiler_rating = 4 and
           sfsline_alias:option one of "P", "S" and
           bopgeneral_alias:water_backup_limit = bpsdefault:water_backup_limit then
            begin
            bopgeneral_alias:water_backup_premium = 0
            end
        else
            Begin
            bopGENERAL_ALIAS:WATER_BACKUP_PREMIUM = 0
            End

        If bopGENERAL_ALIAS:WATER_BACKUP_LIMIT <> L_WATER_BKUP_LIMIT Then
            Begin
            if sfscompany:boiler_rating = 2 then
                begin
                if sfsline_alias:option <> "P" then
                    begin
                    if bopgeneral_alias:special_enhancement = 0 then
                        bopGENERAL_ALIAS:WATER_BACKUP_PREMIUM =
                                          (L_CHARGE +
                                          (((bopGENERAL_ALIAS:WATER_BACKUP_LIMIT -
                                          L_WATER_BKUP_LIMIT)
                                          Divide L_LIMIT) * L_CHARGE_1))
                    else
                    if bopgeneral_alias:special_enhancement = 1 then
                        begin
                        if bopgeneral_alias:water_backup_limit - l_water_bkup_limit <= 5000 then
                            bopgeneral_alias:water_backup_premium = l_charge
                        else
                            bopGENERAL_ALIAS:WATER_BACKUP_PREMIUM =
                                          (L_CHARGE +
                                          ((((bopGENERAL_ALIAS:WATER_BACKUP_LIMIT -
                                          L_WATER_BKUP_LIMIT) - l_water_bkup_limit)
                                          Divide L_LIMIT) * L_CHARGE_1))
                        end

                    end
                else
                if sfsline_alias:option = "P" and
                   bopgeneral_alias:water_backup_limit <> l_water_bkup_limit then
                     begin
                     if bopgeneral_alias:water_backup_limit - l_water_bkup_limit <= 5000 and
                        bopgeneral_alias:water_backup_limit <> 15000 then
                         bopgeneral_alias:water_backup_premium = l_charge
                     else
                         bopGENERAL_ALIAS:WATER_BACKUP_PREMIUM = (L_CHARGE +
                                             ((((bopGENERAL_ALIAS:WATER_BACKUP_LIMIT
                                             - 5000) - l_water_bkup_limit)
                                             Divide L_LIMIT) * L_CHARGE_1))
                     end
                end
            else
                begin
                bopGENERAL_ALIAS:WATER_BACKUP_PREMIUM = (L_CHARGE +
                                                 (((bopGENERAL_ALIAS:WATER_BACKUP_LIMIT -
                                                 L_WATER_BKUP_LIMIT)
                                                 Divide L_LIMIT) * L_CHARGE_1))
                end

            if sfscompany:boiler_rating = 4 and
               sfsline:option = "S" then
                bopGENERAL_ALIAS:WATER_BACKUP_PREMIUM = (((bopGENERAL_ALIAS:WATER_BACKUP_LIMIT -
                                             L_WATER_BKUP_LIMIT)
                                             Divide L_LIMIT) * L_CHARGE_1)
            End
        End

End

Procedure RATE_BUILDING_CODE
Begin
Access BPSRATE, Set BPSRATE:COMPANY_ID = bopgeneral:company_id,
                    BPSRATE:STATE = bopGENERAL:STATE,
                    BPSRATE:LINE_OF_BUSINESS = bopgeneral:line_of_business, Generic

while BPSRATE:COMPANY_ID       = bopgeneral:company_id and
      BPSRATE:STATE            = bopGENERAL:STATE and
      BPSRATE:LINE_OF_BUSINESS = bopgeneral:line_of_business
    begin
    If sfpNAME:EFF_DATE >= BPSRATE:EFF_DATE Then
        Begin
        If bopGENERAL:BUILDING_CODE_PERCENT = 0 Then
            L_FACTOR_1 = BPSRATE:BUILDING_CODE_DELETE
        Else
            Begin
            L_FACTOR_1 = BPSRATE:BUILDING_CODE_FACTOR
            L_LIMIT = BPSRATE:BUILDING_CODE_PER
            End
        End

    Next BPSRATE
    End

Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                             bopgeneral_alias:pol_year = bopgeneral:pol_year,
                             bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                             bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                             bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

If bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO And
   bopgeneral_alias:pol_year = bopgeneral:pol_year and
   bopgeneral_alias:end_sequence = bopgeneral:end_sequence and
   bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO And
   bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO Then
    Change bopGENERAL_ALIAS
        Begin
        If bopGENERAL_ALIAS:BUILDING_CODE_PERCENT = 0 Then
            bopGENERAL_ALIAS:BUILDING_CODE_PREMIUM = ((bopGENERAL_ALIAS:BUILDING_PREMIUM *
                                                     L_FACTOR_1) -
                                                     bopGENERAL_ALIAS:BUILDING_PREMIUM)
        Else
            Begin
            L_BUILDING_CODE_FACTOR = ((((bopGENERAL_ALIAS:BUILDING_CODE_PERCENT -
                                      L_LIMIT) Divide L_LIMIT) * L_FACTOR_1) + 1)
            L_BUILDING_CODE_PREM = bopGENERAL_ALIAS:BUILDING_PREMIUM * L_BUILDING_CODE_FACTOR
            bopGENERAL_ALIAS:BUILDING_CODE_PREMIUM = L_BUILDING_CODE_PREM -
                                              bopGENERAL_ALIAS:BUILDING_PREMIUM
        End
    End
End

Procedure RATE_MECHANICAL
Begin
if bopgeneral:restaurant = 0 or
   sfpname:company_id <> "NWIC" then
begin
Access BPSRATE, Set BPSRATE:COMPANY_ID = bopgeneral:company_id,
                    BPSRATE:STATE = bopGENERAL:STATE,
                    BPSRATE:LINE_OF_BUSINESS = bopgeneral:line_of_business, Generic

Repeat Begin
    Exit when BPSRATE:COMPANY_ID <> bopgeneral:company_id Or
            BPSRATE:STATE <> bopGENERAL:STATE Or
            BPSRATE:LINE_OF_BUSINESS <> bopgeneral:line_of_business

    If sfpNAME:EFF_DATE >= BPSRATE:EFF_DATE Then
        Begin
        L_CHARGE = BPSRATE:MECHANICAL_CHARGE
        L_LIMIT = BPSRATE:MECHANICAL_LIMIT
        End

    Next BPSRATE
    End
end
else
    begin
    access bpsrate1, set bpsrate1:company_id = bopgeneral:company_id,
                         bpsrate1:state = bopgeneral:state,
                         bpsrate1:line_of_business = bopgeneral:line_of_business, generic

    while bpsrate1:company_id = bopgeneral:company_id and
          bpsrate1:state = bopgeneral:state and
          bpsrate1:line_of_business = bopgeneral:line_of_business
        begin
        if (sfpname:eff_date >= bpsrate1:eff_date and
           (sfpname:eff_date <= bpsrate1:exp_date or
           bpsrate1:exp_date = 0)) then
            begin
            l_charge = bpsrate1:mechanical_restaurant_rate
            l_limit    = bpsrate1:mechanical_restaurant_per
            end

        next bpsrate1
        end
    end


Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                             bopgeneral_alias:pol_year = bopgeneral:pol_year,
                             bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                             bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                             bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

If bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO And
   bopgeneral_alias:pol_year = bopgeneral:pol_year and
   bopgeneral_alias:end_sequence = bopgeneral:end_sequence and
   bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO And
   bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO Then
    Change bopGENERAL_ALIAS
        Begin
        If bopGENERAL_ALIAS:MECHANICAL_LIMIT <> L_MECHANICAL_LIMIT Then
            bopGENERAL_ALIAS:MECHANICAL_PREMIUM = (((bopGENERAL_ALIAS:MECHANICAL_LIMIT -
                                                  L_MECHANICAL_LIMIT)
                                                  Divide L_LIMIT) * L_CHARGE)
        End

End

Procedure RATE_HIRED_NONOWNED
Begin
Access BPSRATE, Set BPSRATE:COMPANY_ID = bopgeneral:company_id,
                    BPSRATE:STATE = bopGENERAL:STATE,
                    BPSRATE:LINE_OF_BUSINESS = bopgeneral:line_of_business, Generic

while BPSRATE:COMPANY_ID       = bopgeneral:company_id and
      BPSRATE:STATE            = bopGENERAL:STATE and
      BPSRATE:LINE_OF_BUSINESS = bopgeneral:line_of_business
    begin
    If sfpNAME:EFF_DATE >= BPSRATE:EFF_DATE Then
        Begin
        L_CREDIT = BPSRATE:HIRED_NONOWNED_CREDIT
        L_CHARGE = BPSRATE:HIRED_NONOWNED_CHARGE
        End

    Next BPSRATE
    End

if sfsline:lob_code one of "CPORTFOLIO" then
    begin
    Access sfpmastsupp, Set sfpmastsupp:policy_NO = G_policy_NO,
                            sfpmastsupp:pol_year = g_year,
                            sfpmastsupp:end_sequence = g_end_sequence,
                            sfpmastsupp:line_of_business = g_line_of_business, generic

    If sfpmastsupp:policy_NO = G_policy_NO and
       sfpmastsupp:pol_year = g_year and
       sfpmastsupp:end_sequence = g_End_sequence and
       sfpmastsupp:line_of_business = g_line_of_business Then
        begin
        Change sfpmastsupp
            Begin
            If sfpmastsupp:DELETE_HIRED_NONOWNED = "Y" Then
                begin
                sfpmastsupp:HIRED_NONOWNED_PREMIUM = L_CREDIT
                l_hired_nonowned_premium = l_credit
                end
            If sfpmastsupp:EXTEND_HIRED_NONOWNED = "Y" Then
                begin
                if sfscompany:boiler_rating one of 4 then
                    begin
                    l_code = "BU0140"
                    do rate_extend_hired_nonowned
                    sfpmastsupp:HIRED_NONOWNED_PREMIUM = L_CHARGE
                    l_hired_nonowned_premium = l_charge
                    end
                else
                    begin
                    sfpmastsupp:HIRED_NONOWNED_PREMIUM = L_CHARGE
                    l_hired_nonowned_premium = l_charge
                    end
                end
            End
        end
    end
else
    begin
    Access sfpMASTER, Set sfpMASTER:policy_NO = G_policy_NO,
                          sfpmaster:pol_year = g_year,
                          sfpmaster:end_sequence = g_end_sequence, Exact

    If sfpMASTER:policy_NO = G_policy_NO and
       sfpmaster:pol_year = g_year and
       sfpmaster:End_sequence = g_End_sequence Then
        begin
        Change sfpMASTER
            Begin
            If sfpMASTER:DELETE_HIRED_NONOWNED = "Y" Then
                begin
                sfpMASTER:HIRED_NONOWNED_PREMIUM = L_CREDIT
                l_hired_nonowned_premium = l_credit
                end
            If sfpMASTER:EXTEND_HIRED_NONOWNED = "Y" Then
                begin
                if sfscompany:boiler_rating one of 4 then
                    begin
                    l_code = "BU0140"
                    do rate_extend_hired_nonowned
                    sfpMASTER:HIRED_NONOWNED_PREMIUM = L_CHARGE
                    l_hired_nonowned_premium = l_charge
                    end
                else
                    begin
                    sfpMASTER:HIRED_NONOWNED_PREMIUM = L_CHARGE
                    l_hired_nonowned_premium = l_charge
                    end
                end
            End
        end
    end

End

procedure rate_extend_hired_nonowned
begin
Access SFSOPTEND, Set SFSOPTEND:COMPANY_ID = sfpname:company_id,
                      SFSOPTEND:STATE = bopGENERAL:STATE,
                      SFSOPTEND:LINE_OF_BUSINESS = bopgeneral:line_of_business,
                      SFSOPTEND:CODE = L_CODE, Generic

while SFSOPTEND:COMPANY_ID       = sfpname:company_id and
      SFSOPTEND:STATE            = bopGENERAL:STATE and
      SFSOPTEND:LINE_OF_BUSINESS = bopgeneral:line_of_business and
      SFSOPTEND:CODE             =  L_CODE
    begin
    If (sfpNAME:EFF_DATE >= SFSOPTEND:EFF_DATE and
       (sfpname:eff_date <= sfsoptend:exp_date or
       sfsoptend:exp_date = 0)) Then
        Begin
        switch(l_liability_code)
          case 1  : l_charge = sfsoptend:premium_1[1]
          case 2  : l_charge = sfsoptend:premium_1[2]
          default : l_charge = sfsoptend:premium_1[3]
          end
        end

    next sfsoptend
    end

end

Procedure RATE_OFF_PREMISES
Begin
if bopgeneral:restaurant = 0 or
   bopgeneral:company_id <> "NWIC" then
begin
Access BPSRATE, Set BPSRATE:COMPANY_ID = bopgeneral:company_id,
                    BPSRATE:STATE = bopGENERAL:STATE,
                    BPSRATE:LINE_OF_BUSINESS = bopgeneral:line_of_business, Generic

L_CHARGE = 0
while BPSRATE:COMPANY_ID       = bopgeneral:company_id and
      BPSRATE:STATE            = bopGENERAL:STATE and
      BPSRATE:LINE_OF_BUSINESS = bopgeneral:line_of_business
    begin
    If sfpNAME:EFF_DATE >= BPSRATE:EFF_DATE Then
        Begin
        If L_OFF_PREMISES_LIMIT = BPSRATE:OFF_PREMISE_LIMIT[1] Then
            L_CHARGE = BPSRATE:OFF_PREMISE_CHARGE[1]
        Else
        If L_OFF_PREMISES_LIMIT = BPSRATE:OFF_PREMISE_LIMIT[2] Then
            L_CHARGE = BPSRATE:OFF_PREMISE_CHARGE[2]
        Else
        If L_OFF_PREMISES_LIMIT = BPSRATE:OFF_PREMISE_LIMIT[3] Then
            L_CHARGE = BPSRATE:OFF_PREMISE_CHARGE[3]
        Else
        If L_OFF_PREMISES_LIMIT = BPSRATE:OFF_PREMISE_LIMIT[4] Then
            L_CHARGE = BPSRATE:OFF_PREMISE_CHARGE[4]
        Else
        If L_OFF_PREMISES_LIMIT = BPSRATE:OFF_PREMISE_LIMIT[5] Then
            L_CHARGE = BPSRATE:OFF_PREMISE_CHARGE[5]
        Else
        If L_OFF_PREMISES_LIMIT = BPSRATE:OFF_PREMISE_LIMIT[6] Then
            L_CHARGE = BPSRATE:OFF_PREMISE_CHARGE[6]
        Else
            L_CHARGE = 0

        If bopGENERAL:OFF_PREMISES_LIMIT <> L_OFF_PREMISES_LIMIT And
           bopGENERAL:OFF_PREMISES_LIMIT <> 0 Then
            Begin
            If bopGENERAL:OFF_PREMISES_LIMIT = BPSRATE:OFF_PREMISE_LIMIT[1] Then
                L_CHARGE = BPSRATE:OFF_PREMISE_CHARGE[1]
            Else
            If bopGENERAL:OFF_PREMISES_LIMIT = BPSRATE:OFF_PREMISE_LIMIT[2] Then
                L_CHARGE = BPSRATE:OFF_PREMISE_CHARGE[2]
            Else
            If bopGENERAL:OFF_PREMISES_LIMIT = BPSRATE:OFF_PREMISE_LIMIT[3] Then
                L_CHARGE = BPSRATE:OFF_PREMISE_CHARGE[3]
            Else
            If bopGENERAL:OFF_PREMISES_LIMIT = BPSRATE:OFF_PREMISE_LIMIT[4] Then
                L_CHARGE = BPSRATE:OFF_PREMISE_CHARGE[4]
            Else
            If bopGENERAL:OFF_PREMISES_LIMIT = BPSRATE:OFF_PREMISE_LIMIT[5] Then
                L_CHARGE = BPSRATE:OFF_PREMISE_CHARGE[5]
            Else
            If bopGENERAL:OFF_PREMISES_LIMIT = BPSRATE:OFF_PREMISE_LIMIT[6] Then
                L_CHARGE = BPSRATE:OFF_PREMISE_CHARGE[6]
            Else
                L_CHARGE = 0
            End
        End

    Next BPSRATE
    End
end
else
    begin
    access bpsrate1, set bpsrate1:company_id = bopgeneral:company_id,
                         bpsrate1:state = bopgeneral:state,
                         bpsrate1:line_of_business = bopgeneral:line_of_business, generic

    while bpsrate1:company_id = bopgeneral:company_id and
          bpsrate1:state = bopgeneral:state and
          bpsrate1:line_of_business = bopgeneral:line_of_business
        begin
        if (sfpname:eff_date >= bpsrate1:eff_date and
           (sfpname:eff_date <= bpsrate1:exp_date or
           bpsrate1:exp_date = 0)) then
            begin
            l_charge = bpsrate1:off_prem_restaurant_rate
            l_limit    = bpsrate1:off_prem_restaurant_per
            end

        next bpsrate1
        end

    l_charge = (((l_off_premises_limit - bpsdefault2:off_premises_b) divide
               l_limit) * l_charge)
    end

Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                             bopgeneral_alias:pol_year = bopgeneral:pol_year,
                             bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                             bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                             bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

If bopGENERAL_ALIAS:OFF_PREMISES_LIMIT = L_OFF_PREMISES_LIMIT Then
    begin
    if sfsline:lob_code = "CPORTFOLIO" then
        begin
        Access sfpmastsupp, Set sfpmastsupp:policy_NO = G_policy_NO,
                                sfpmastsupp:pol_year = g_year,
                                sfpmastsupp:end_sequence = g_End_sequence,
                                sfpmastsupp:line_of_business = g_line_of_business, generic

        Change sfpmastsupp
            Begin
            sfpmastsupp:OFF_PREMISES_PREMIUM = L_CHARGE
            l_off_premises_premium = l_charge
            End
        end
    else
        begin
        Access sfpmaster, Set sfpmaster:policy_NO = G_policy_NO,
                              sfpmaster:pol_year = g_Year,
                              sfpmaster:end_sequence = g_End_sequence, generic

        Change sfpMASTER
            Begin
            sfpMASTER:OFF_PREMISES_PREMIUM = L_CHARGE
            l_off_premises_premium = l_charge
            End
        end
    end

If bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO And
   bopgeneral_alias:pol_Year = bopgeneral:pol_year and
   bopgeneral_alias:end_sequence = bopgeneral:end_sequence and
   bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO And
   bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO Then
    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:OFF_PREMISES_PREMIUM = L_CHARGE
        End

End

Procedure RATE_CUSTOMER_PROPERTY
Begin
Access BPSRATE, Set BPSRATE:COMPANY_ID = bopgeneral:company_id,
                    BPSRATE:STATE = bopGENERAL:STATE,
                    BPSRATE:LINE_OF_BUSINESS = bopgeneral:line_of_business, Generic

L_CHARGE = 0
while BPSRATE:COMPANY_ID       = bopgeneral:company_id and
      BPSRATE:STATE            = bopGENERAL:STATE and
      BPSRATE:LINE_OF_BUSINESS = bopgeneral:line_of_business
    begin
    If sfpNAME:EFF_DATE >= BPSRATE:EFF_DATE Then
        Begin
        l_customer_adj_rate = bpsrate:customers_property
        end

    next bpsrate
    end

Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                             bopgeneral_alias:pol_year = bopgeneral:pol_year,
                             bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                             bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                             bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

If L_PROP_ACV = 0 Then
    L_PROP_ACV = 1.00
If bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO And
   bopgeneral_alias:pol_year = bopgeneral:pol_year and
   bopgeneral_alias:end_sequence = bopgeneral:end_sequence and
   bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO And
   bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO Then
    Begin
    If bopGENERAL_ALIAS:CUSTOMER_PROP_LIMIT <> L_CUSTOMER_PROP_LIMIT Then
        Begin
        if sfscompany:customer_property_rating = 1 and
           sfpname:company_id = "NWIC" and
           bopgeneral:state = 29 then
            begin
            change bopgeneral_alias
                begin
                bopgeneral_alias:customer_prop_premium = (bopgeneral_alias:property_rate *
                                                         (bopgeneral_alias:customer_prop_limit -
                                                         bpsdefault2:customers_property_limit) divide 1000)
                end
            end
        else
        If SFSCOMPANY:CUSTOMER_PROPERTY_RATING = 1 Then
            Begin
            Change bopGENERAL_ALIAS
                Begin
                bopGENERAL_ALIAS:CUSTOMER_PROP_PREMIUM = (bopGENERAL_ALIAS:PROPERTY_RATE *
                                                         ((bopGENERAL_ALIAS:CUSTOMER_PROP_LIMIT -
                                                         bpsdefault:CUSTOMER_PROP_LIMIT) Divide
                                                         1000))
                End
            End

        If SFSCOMPANY:CUSTOMER_PROPERTY_RATING = 4 Then
            Begin
            Change bopGENERAL_ALIAS
                Begin
                bopGENERAL_ALIAS:CUSTOMER_PROP_PREMIUM = (l_customer_adj_rate *
                                                         ((bopGENERAL_ALIAS:CUSTOMER_PROP_LIMIT -
                                                         bpsdefault:CUSTOMER_PROP_LIMIT) Divide
                                                         1000))
                End
            End

        If SFSCOMPANY:CUSTOMER_PROPERTY_RATING = 2 Then
            Begin
            Change bopGENERAL_ALIAS
                Begin
                L_CUSTOMER_ADJ_RATE = L_PROPERTY_RATE * L_PROPERTY_ADJUSTMENTS * l_prop_acv
                bopGENERAL_ALIAS:CUSTOMER_PROP_PREMIUM = (((bopGENERAL_ALIAS:CUSTOMER_PROP_LIMIT
                                                         - L_CUSTOMER_PROP_LIMIT) Divide 1000) *
                                                         L_CUSTOMER_ADJ_RATE)
                End
            If L_FORM = 3 Then
                Begin
                L_SPECIAL_LIMIT = ((bopGENERAL_ALIAS:CUSTOMER_PROP_LIMIT -
                                  L_CUSTOMER_PROP_LIMIT) Divide 100)
                If L_SPECIAL_LIMIT <= 100 Then
                    L_SPECIAL_LIMIT = 100
                Do CUSTOMER_PROPERTY_SPECIAL
                If bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO And
                   bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO And
                   bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO Then
                    Change bopGENERAL_ALIAS
                        Begin
                        L_CUSTOMER_ADJ_RATE_SPECIAL = bopGENERAL_ALIAS:ADJUSTMENT_FACTORS
                        bopGENERAL_ALIAS:CUSTOMER_PROP_PREMIUM = (bopGENERAL_ALIAS:CUSTOMER_PROP_PREMIUM +
                                                                 (L_SPECIAL *
                                                                 L_CUSTOMER_ADJ_RATE_SPECIAL))
                        End
                End
            End

        If SFSCOMPANY:CUSTOMER_PROPERTY_RATING = 3 and
           sfpname:company_id = "NWIC" and
           bopgeneral:state = 29 Then
            Begin
            Change bopGENERAL_ALIAS
                Begin
                L_CUSTOMER_ADJ_RATE = L_PROPERTY_RATE * L_PROPERTY_ADJUSTMENTS
                bopGENERAL_ALIAS:CUSTOMER_PROP_PREMIUM = (((bopGENERAL_ALIAS:CUSTOMER_PROP_LIMIT
                                                         - BPSDEFAULT2:CUSTOMERS_PROPERTY_LIMIT) Divide 1000) *
                                                         L_CUSTOMER_ADJ_RATE)
                End
            end
        else
        If SFSCOMPANY:CUSTOMER_PROPERTY_RATING = 3 Then
            Begin
            Change bopGENERAL_ALIAS
                Begin
                L_CUSTOMER_ADJ_RATE = L_PROPERTY_RATE * L_PROPERTY_ADJUSTMENTS
                bopGENERAL_ALIAS:CUSTOMER_PROP_PREMIUM = (((bopGENERAL_ALIAS:CUSTOMER_PROP_LIMIT
                                                         - BPSDEFAULT:CUSTOMER_PROP_LIMIT) Divide 1000) *
                                                         L_CUSTOMER_ADJ_RATE)
                End
            end
        End
    End


End

Procedure CUSTOMER_PROPERTY_SPECIAL
Begin
L_COMPANY_ID = bopgeneral:company_id
L_STATE = bopGENERAL:STATE
L_LINE_OF_BUSINESS = bopgeneral:line_of_business
L_RECORD_TYPE = 3
L_TERRITORY = 999
L_EFF_DATE = sfpNAME:EFF_DATE
L_RATE_GROUP = bopGENERAL:RATE_GROUP

Include "bpsspecprop.inc"

End

Procedure RATE_VALUABLE_PAPERS
Begin
Access BPSRATE, Set BPSRATE:COMPANY_ID = bopgeneral:company_id,
                    BPSRATE:STATE = bopGENERAL:STATE,
                    BPSRATE:LINE_OF_BUSINESS = bopgeneral:line_of_business, Generic

while BPSRATE:COMPANY_ID       = bopgeneral:company_id and
      BPSRATE:STATE            = bopGENERAL:STATE and
      BPSRATE:LINE_OF_BUSINESS = bopgeneral:line_of_business
    begin
    If sfpNAME:EFF_DATE >= BPSRATE:EFF_DATE Then
        Begin
        L_FACTOR_1 = BPSRATE:VALUABLE_PAPERS_FACTOR
        L_LIMIT = BPSRATE:VALUABLE_PAPERS_LIMIT
        End

    Next BPSRATE
    End

Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                             bopgeneral_alias:pol_year = bopgeneral:pol_year,
                             bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                             bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                             bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

If bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO And
   bopgeneral_alias:pol_year = bopgeneral:pol_year and
   bopgeneral_alias:end_sequence = bopgeneral:end_sequence and
   bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO And
   bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO Then
    Change bopGENERAL_ALIAS
        Begin
        If bopGENERAL_ALIAS:VALUABLE_PAPERS_LIMIT <> L_VALUE_LIMIT_1 Then
            begin
            if l_liability_rate_or_charge = 1 then
                bopGENERAL_ALIAS:VALUABLE_PAPERS_PREMIUM = ((bopGENERAL_ALIAS:PROPERTY_RATE *
                                                           l_liability_rate) *
                                                           (((bopGENERAL_ALIAS:VALUABLE_PAPERS_LIMIT -
                                                           L_VALUE_LIMIT_1) Divide
                                                           L_LIMIT) * L_FACTOR_1))
            else
            if sfscompany:boiler_rating <> 4 then
                bopGENERAL_ALIAS:VALUABLE_PAPERS_PREMIUM = (bopGENERAL_ALIAS:PROPERTY_RATE *
                                                (((bopGENERAL_ALIAS:VALUABLE_PAPERS_LIMIT
                                                - L_VALUE_LIMIT_1) Divide
                                                L_LIMIT) * L_FACTOR_1))
            else
            if sfscompany:boiler_rating = 4 then
                begin
                if bopgeneral_alias:property_rate <> 0 and
                   bopgeneral_alias:class_code <> 75 then
                    bopGENERAL_ALIAS:VALUABLE_PAPERS_PREMIUM = (bopGENERAL_ALIAS:PROPERTY_RATE *
                                                    (((bopGENERAL_ALIAS:VALUABLE_PAPERS_LIMIT
                                                    - L_VALUE_LIMIT_1) Divide
                                                    L_LIMIT) * L_FACTOR_1))
                else
                    bopGENERAL_ALIAS:VALUABLE_PAPERS_PREMIUM = (l_building_rate *
                                                    (((bopGENERAL_ALIAS:VALUABLE_PAPERS_LIMIT
                                                    - L_VALUE_LIMIT_1) Divide
                                                    L_LIMIT) * L_FACTOR_1))
                end
            end

        End

End

Procedure RATE_ACV_BUILDING
Begin
L_COMPANY_ID = bopgeneral:company_id
L_STATE = bopGENERAL:STATE
L_LINE_OF_BUSINESS = bopgeneral:line_of_business
L_EFF_DATE = sfpNAME:EFF_DATE

Include "bpsacv.inc"

Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                             bopgeneral_alias:pol_year = bopgeneral:pol_year,
                             bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                             bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                             bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

If bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO And
   bopgeneral_alias:pol_year = bopgeneral:pol_year and
   bopgeneral_alias:end_sequence = bopgeneral:end_sequence and
   bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO And
   bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO Then
    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:ACV_BUILDING_PREMIUM = ((bopGENERAL_ALIAS:BUILDING_PREMIUM * L_FACTOR_1) -
                                bopGENERAL_ALIAS:BUILDING_PREMIUM)
        End
End

Procedure RATE_ACV_CONTENTS
Begin
L_COMPANY_ID = bopgeneral:company_id
L_STATE = bopGENERAL:STATE
L_LINE_OF_BUSINESS = bopgeneral:line_of_business
L_EFF_DATE = sfpNAME:EFF_DATE

Include "bpsacv.inc"

Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                             bopgeneral_alias:pol_year = bopgeneral:pol_year,
                             bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                             bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                             bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

If bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO And
   bopgeneral_alias:pol_year = bopgeneral:pol_year and
   bopgeneral_alias:end_sequence = bopgeneral:end_sequence and
   bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO And
   bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO Then
    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:ACV_CONTENTS_PREMIUM = ((bopGENERAL_ALIAS:PROPERTY_PREMIUM *
                                         L_FACTOR_2) - bopGENERAL_ALIAS:PROPERTY_PREMIUM)
        If L_FACTOR_2 <> 0 Then
            L_PROP_ACV = L_FACTOR_2
        Else
            L_PROP_ACV = 1.00
        End

End
Procedure RATE_FIRE_LEGAL
Begin
L_COMPANY_ID = bopgeneral:company_id
L_STATE = bopGENERAL:STATE
L_LINE_OF_BUSINESS = bopgeneral:line_of_business
L_EFF_DATE = sfpNAME:EFF_DATE
L_FIRE_LIMIT = bopGENERAL:FIRE_LIMIT

Include "bpsfire.inc"

Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                             bopgeneral_alias:pol_year = bopgeneral:pol_year,
                             bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                             bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                             bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

If bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO And
   bopgeneral_alias:pol_year = bopgeneral:pol_year and
   bopgeneral_alias:end_sequence = bopgeneral:end_sequence and
   bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO And
   bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO Then
    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:FIRE_PREMIUM = L_CHARGE
        End

End

Procedure BOILER_MINIMUM
Begin
Access BPSRATE, Set BPSRATE:COMPANY_ID = bopgeneral:company_id,
                    BPSRATE:STATE = bopGENERAL:STATE,
                    BPSRATE:LINE_OF_BUSINESS = bopgeneral:line_of_business, Generic

while BPSRATE:COMPANY_ID       = bopgeneral:company_id and
      BPSRATE:STATE            = bopGENERAL:STATE and
      BPSRATE:LINE_OF_BUSINESS = bopgeneral:line_of_business
    begin
    If (sfpNAME:EFF_DATE >= BPSRATE:EFF_DATE and
       (sfpname:eff_date <= bpsrate:exp_date or
       bpsrate:exp_date = 0)) Then
        Begin
        L_MINIMUM_boiler = BPSRATE:BOILER_MINIMUM
        End

    Next BPSRATE
    End

Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                             bopgeneral_alias:pol_year = bopgeneral:pol_year,
                             bopgeneral_alias:end_sequence = bopgeneral:end_sequence, generic

L_BOILER_PREM_TOTAL = 0
while bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO and
      bopgeneral_alias:pol_year = bopgeneral:pol_year and
      bopgeneral_alias:end_sequence = bopgeneral:end_sequence
    begin
    L_BOILER_PREM_TOTAL = bopGENERAL_ALIAS:BOILERS_PREMIUM +
                          L_BOILER_PREM_TOTAL

    Next bopGENERAL_ALIAS
    End

If L_BOILER_PREM_TOTAL < L_MINIMUM_boiler And
   L_BOILER_PREM_TOTAL <> 0 Then
    Begin
    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence, generic

    If bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO and
       bopgeneral_alias:pol_year = bopgeneral:pol_year and
       bopgeneral_alias:end_sequence = bopgeneral:end_sequence Then
        Change bopGENERAL_ALIAS
            Begin
            bopGENERAL_ALIAS:BOILERS_PREMIUM = L_MINIMUM_boiler
            bopGENERAL_ALIAS:OPTIONAL_TOTAL = ((bopGENERAL_ALIAS:OPTIONAL_TOTAL -
                                              L_BOILER_PREM_TOTAL) +
                                              L_MINIMUM_boiler)
           L_BOILER_PREM_TOTAL = L_MINIMUM_boiler
 --            write("%c%n",1005,bopgeneral_alias:location_premium)
--            write("%c%n",1015,l_boiler_prem_total)
--            write("%c%n",1025,l_minimum_boiler)
            bopGENERAL_ALIAS:LOCATION_PREMIUM = ((bopgeneral_alias:location_premium -
                                                l_boiler_prem_total) +
                                                l_minimum_boiler)
--                write("%c%n",1035,bopgeneral_alias:location_premium)
--                write("%c%n",1045,bopgeneral_alias:bop_premium)
--            L_BOILER_PREM_TOTAL = L_MINIMUM_boiler
            End
    End

End

Procedure TERRITORY_RATING
Begin
-- special territory rating, if sfscompany:special territory rate set to 1
If SFSCOMPANY:SPECIAL_TERRITORY_RATING = 1 Then
    Begin
    Access BPSRATE, Set BPSRATE:COMPANY_ID = bopgeneral:company_id,
                        BPSRATE:STATE = bopGENERAL:STATE,
                        BPSRATE:LINE_OF_BUSINESS = bopgeneral:line_of_business, Generic

    while BPSRATE:COMPANY_ID       = bopgeneral:company_id and
          BPSRATE:STATE            = bopGENERAL:STATE and
          BPSRATE:LINE_OF_BUSINESS = bopgeneral:line_of_business
        begin
        If sfpNAME:EFF_DATE >= BPSRATE:EFF_DATE Then
            Begin
            L_MINIMUM_boiler = BPSRATE:BOILER_MINIMUM
            End

        Next BPSRATE
        End

    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = G_policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence, generic

    L_TERRITORY_BOILER_MINIMUM = 0
    L_COUNT = 0
    while bopGENERAL_ALIAS:policy_NO = G_policy_NO and
          bopgeneral_alias:pol_year = bopgeneral:pol_year and
          bopgeneral_alias:end_sequence = bopgeneral:end_sequence
        begin
        L_COUNT = L_COUNT + 1
        L_TERRITORY_BOILER_MINIMUM = L_TERRITORY_BOILER_MINIMUM +
                                     bopGENERAL_ALIAS:BOILERS_PREMIUM

        Next bopGENERAL_ALIAS
        End

    If bopGENERAL:BOILERS = "Y" Then
        Begin
        If L_TERRITORY_BOILER_MINIMUM < L_MINIMUM_boiler And
           L_COUNT = 1 Then
            L_TERRITORY_BOILER_MINIMUM = L_MINIMUM_boiler
        Else
            L_TERRITORY_BOILER_MINIMUM = L_BOILERS_PREM
        End
    Else
        L_TERRITORY_BOILER_MINIMUM = 0

    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = G_policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopgeneral_alias:prem_no  = bopgeneral:prem_no,
                                 bopgeneral_alias:build_no = bopgeneral:build_no, generic

    If bopGENERAL:RATING_TERRITORY_FACTOR = 0 Then
        Change bopGENERAL_ALIAS
            Begin
            bopGENERAL_ALIAS:RATING_TERRITORY_FACTOR = 1.00
            End

    L_LOC_TOTAL_1 = (L_LOC_TOTAL_1 + ((L_LOC_TOTAL +
                    L_TERRITORY_BOILER_MINIMUM
                    + L_PRINTERS_ERROR) *
                    bopGENERAL:RATING_TERRITORY_FACTOR))
    L_LOC_TOTAL_2 = L_LOC_TOTAL_2 + L_LOC_TOTAL

    End
End

Procedure RATE_BOILERS

Begin
  unsigned ascii number L_PREM_NO_ZERO[4] = 0,
                        l_build_no_zero[4] = 0;
Access BPSRATE, Set BPSRATE:COMPANY_ID = bopgeneral:company_id,
                    BPSRATE:STATE = bopGENERAL:STATE,
                    BPSRATE:LINE_OF_BUSINESS = bopgeneral:line_of_business, Generic

while BPSRATE:COMPANY_ID       = bopgeneral:company_id and
      BPSRATE:STATE            = bopGENERAL:STATE and
      BPSRATE:LINE_OF_BUSINESS = bopgeneral:line_of_business
    begin
    If (sfpNAME:EFF_DATE >= BPSRATE:EFF_DATE and
       (sfpname:eff_date <= bpsrate:exp_date or
       bpsrate:exp_date = 0)) Then
        Begin
        L_FACTOR_1 = BPSRATE:BOILERS_FACTOR
        L_LIMIT = BPSRATE:BOILERS_LIMIT
        L_BOILERS_LOSS_INCOME = BPSRATE:BOILER_LOSS_INCOME
        l_factor_2 = bpsrate:boilers_factor_1
        l_code     = bpsrate:boiler_code_1
        l_limit_1 = bpsrate:boiler_restaurant_limit
        End

    Next BPSRATE
    End

if sfscompany:boiler_Rating = 4 then
    begin
    access bopendorse, set bopendorse:policy_no    = bopgeneral:policy_no,
                           bopendorse:pol_year     = bopgeneral:pol_year,
                           bopendorse:end_sequence = bopgeneral:end_sequence,
                           bopendorse:prem_no      = L_PREM_NO_ZERO,
                           bopendorse:build_no     = l_build_no_zero,
                           bopendorse:code         = l_code, generic
    end
else
    begin
    access bopendorse, set bopendorse:policy_no    = bopgeneral:policy_no,
                           bopendorse:pol_year     = bopgeneral:pol_year,
                           bopendorse:end_sequence = bopgeneral:end_sequence,
                           bopendorse:prem_no      = bopgeneral:prem_no,
                           bopendorse:build_no     = bopgeneral:build_no,
                           bopendorse:code         = l_code, generic
    end

Access bopCOMPUTER, Set bopCOMPUTER:policy_NO    = bopGENERAL:policy_NO,
                        bopcomputer:pol_year     = bopgeneral:pol_year,
                        bopcomputer:end_sequence = bopgeneral:end_sequence,
                        bopCOMPUTER:PREM_NO      = bopGENERAL:PREM_NO,
                        bopCOMPUTER:BUILD_NO = bopGENERAL:BUILD_NO, Generic


access sfpend, set sfpend:policy_no = g_policy_no,
                   sfpend:pol_year = g_year,
                   sfpend:end_sequence = g_end_sequence,
                   sfpend:prem_no = bopgeneral:prem_no,
                   sfpend:build_no = bopgeneral:build_no, generic

l_bu2597_premium = 0
l_bu2510_premium = 0
while sfpend:policY_no = g_policy_no and
      sfpend:pol_year = g_year and
      sfpend:end_sequence = g_end_sequence and
      sfpend:prem_no = bopgeneral:prem_no and
      sfpend:build_no = bopgeneral:build_no
        begin
        if sfpend:code one of "BU2597", "BU0197" then
            l_bu2597_premium = l_bu2597_premium + sfpend:premium
        if sfpend:code one of "BU2510" then
            l_bu2510_premium = l_bu2510_premium + sfpend:premium

        next sfpend
        end

Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                             bopgeneral_alias:pol_year = bopgeneral:pol_year,
                             bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                             bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                             bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

If bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO And
   bopgeneral_alias:pol_year = bopgeneral:pol_year and
   bopgeneral_alias:end_sequence = bopgeneral:end_sequence and
   bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO And
   bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO Then
    Change bopGENERAL_ALIAS
        Begin
        If bopGENERAL_ALIAS:LOSS_INCOME_LIMIT = 0 Then
            L_LOSS_INCOME_LIMIT = L_BOILERS_LOSS_INCOME
        Else
            L_LOSS_INCOME_LIMIT = 0

        If SFSCOMPANY:BOILER_RATING = 1 Then  -- Salem
            Begin
            bopGENERAL_ALIAS:BOILERS_PREMIUM = (((bopGENERAL_ALIAS:BUILDING_LIMIT +
                                               bopGENERAL_ALIAS:OTHER_STRUCTURES +
                                               bopGENERAL_ALIAS:PROPERTY_LIMIT +
                                               bopCOMPUTER:LIMIT[1] + bopCOMPUTER:LIMIT[2])
                                               Divide L_LIMIT)
                                               * L_FACTOR_1)
            End
        If SFSCOMPANY:BOILER_RATING = 2 Then -- Flemington
            Begin
            bopGENERAL_ALIAS:BOILERS_PREMIUM = ((((bopGENERAL_ALIAS:BUILDING_LIMIT +
                                               bopGENERAL_ALIAS:OTHER_STRUCTURES +
                                               bopGENERAL_ALIAS:PROPERTY_LIMIT)
                                               * L_DEDUCTIBLE_FACTOR)
                                               Divide L_LIMIT)
                                               * L_FACTOR_1)
            End
        If SFSCOMPANY:BOILER_RATING = 3 Then -- lebins
            Begin
            bopGENERAL_ALIAS:BOILERS_PREMIUM = (((bopGENERAL_ALIAS:BUILDING_LIMIT +
                                               bopGENERAL_ALIAS:PROPERTY_LIMIT +
                                               bopGENERAL_ALIAS:LOSS_INCOME_LIMIT)
                                               Divide L_LIMIT)
                                               * L_FACTOR_1)
            End

        if sfscompany:boiler_rating one of 4 and
           sfpname:eff_date <= 02.28.2014 then
            begin
            l_rate_factor = 0.01
            l_irpm = (1 + (sfpmaster:irpm * 0.01))
            if l_irpm = 0 then
                l_irpm = 1

            if bopendorse:limit[1] = l_limit_1 and
               bopendorse:limit[1] <> 0 and
               l_factor_2 <> 0 then
                l_factor_1 = l_factor_2

            if bopendorse:premium <> 0 then
                begin
                bopgeneral_alias:optional_total = bopgeneral_alias:optional_total -
                                                  l_boiler_prem
                bopgeneral_alias:boilers_premium = bopendorse:premium
                bopgeneral_alias:optional_total = bopgeneral_alias:optional_total +
                                                  bopgeneral_alias:boilers_premium
                end
            else
                begin
                bopgeneral_alias:optional_total = bopgeneral_alias:optional_total -
                                                  l_boiler_prem
                bopgeneral_alias:boilers_premium = ((((l_loc_total -
                                                   l_bu2510_premium -
                                                   l_bu2597_premium) *
                                                   l_irpm) +
                                                   l_bu2510_premium +
                                                   l_bu2597_premium) *
                                                  (l_factor_1 divide 100))

                bopgeneral_alias:optional_total = bopgeneral_alias:optional_total +
                                                  bopgeneral_alias:boilers_premium
                end
            end
        else
        If SFSCOMPANY:BOILER_RATING one of 4 and
           sfpname:eff_date > 02.28.2014 Then
            Begin
            if bopendorse:limit[1] = l_limit_1 and
               bopendorse:limit[1] <> 0 and
               l_factor_2 <> 0 then
                l_factor_1 = l_factor_2

            do access_bpsboilerdeduct
            bopgeneral_ALIAS:BOILERS_PREMIUM = (((bopgeneral_ALIAS:BUILDING_LIMIT +
                                               bopgeneral_ALIAS:PROPERTY_LIMIT)
                                               Divide L_LIMIT)
                                               * L_FACTOR_1 *
                                               l_boiler_deductible_factor)
            End

        If bopGENERAL_ALIAS:BOILERS_PREMIUM = 0 Then
            bopGENERAL_ALIAS:BOILERS_PREMIUM = 1
        L_BOILERS_PREM = bopGENERAL_ALIAS:BOILERS_PREMIUM
        End

End

procedure access_bpsboilerdeduct
begin
l_state = bopgeneral:state
Access bpsboilerdeduct, Set bpsboilerdeduct:COMPANY_ID       = sfpname:company_id,
                            bpsboilerdeduct:STATE            = l_STATE,
                            bpsboilerdeduct:LINE_OF_BUSINESS = sfpname:line_of_business,
                            bpsboilerdeduct:deductible       = l_deductible, Generic

l_boiler_deductible_factor = 0
while bpsboilerdeduct:COMPANY_ID       = sfpname:company_id and
      bpsboilerdeduct:STATE            = L_STATE and
      bpsboilerdeduct:LINE_OF_BUSINESS = sfpname:line_of_business and
      bpsboilerdeduct:deductible       = l_deductible
    begin
    If sfpname:eff_date >= bpsboilerdeduct:EFF_DATE Then
        l_boiler_deductible_factor = bpsboilerdeduct:factor

    Next bpsboilerdeduct
    End

end

Procedure GET_RATE
Begin
Access SFSPACKAGE, Set SFSPACKAGE:COMPANY_ID = bopgeneral:company_id,
                       SFSPACKAGE:STATE = bopGENERAL:STATE,
                       SFSPACKAGE:LINE_OF_BUSINESS = bopgeneral:line_of_business, Generic

while SFSPACKAGE:COMPANY_ID       = bopgeneral:company_id and
      SFSPACKAGE:STATE            = bopGENERAL:STATE and
      SFSPACKAGE:LINE_OF_BUSINESS = bopgeneral:line_of_business
    begin
    If sfpNAME:EFF_DATE >= SFSPACKAGE:EFF_DATE Then
        L_PACKAGE = SFSPACKAGE:PACKAGE_MOD

    Next SFSPACKAGE
    End

access sfsline, set sfsline:company_Id = sfpname:company_id,
                    sfsline:line_of_business = sfpname:line_of_business,
                    sfsline:lob_subline = "00", generic

if sfsline:lob_code one of "CPORTFOLIO" then
    begin
    Access sfpmastsupp, Set sfpmastsupp:policy_NO = bopGENERAL:policy_NO,
                            sfpmastsupp:pol_year = bopgeneral:pol_year,
                            sfpmastsupp:end_sequence = bopgeneral:end_sequence,
                            sfpmastsupp:line_of_business = g_line_of_business, Generic

    l_package_deviation = sfpmastsupp:package_deviation
    l_irpm = sfpmastsupp:irpm
    If sfpmastsupp:policy_NO = bopGENERAL:policy_NO and
       sfpmastsupp:pol_Year = bopgeneral:pol_year and
       sfpmastsupp:end_sequence = bopgeneral:end_sequence Then
        begin
        Change sfpmastsupp
            Begin
            sfpmastsupp:PACKAGE_DEVIATION = L_PACKAGE
            end
        End
    end
else
    begin
    Access sfpMASTER, Set sfpMASTER:policy_NO = bopGENERAL:policy_NO,
                          sfpmaster:pol_year = bopgeneral:pol_year,
                          sfpmaster:end_sequence = bopgeneral:end_sequence, Generic

    l_package_deviation = sfpmaster:package_deviation
    l_irpm = sfpmaster:irpm
    If sfpMASTER:policy_NO = bopGENERAL:policy_NO and
       sfpmaster:pol_year = bopgeneral:pol_year and
       sfpmaster:end_sequence = bopgeneral:end_sequence Then
        begin
        Change sfpMASTER
            Begin
            sfpMASTER:PACKAGE_DEVIATION = L_PACKAGE
            end
        End
    end

L_PACKAGE = 0
L_RATE_FACTOR = 0.01

l_split_comm = sfpmaster:split_comm
if sfscompany:boiler_Rating <> 4 then
    begin
    Access SFSAGTCOMM, Set SFSAGTCOMM:COMPANY_ID = bopgeneral:company_id,
                           SFSAGTCOMM:AGENT_NO = sfpNAME:AGENT_NO,
                           SFSAGTCOMM:LINE_OF_BUSINESS = bopgeneral:line_of_business, Generic

    while SFSAGTCOMM:COMPANY_ID       = bopgeneral:company_id and
          SFSAGTCOMM:AGENT_NO         = sfpNAME:AGENT_NO and
          SFSAGTCOMM:LINE_OF_BUSINESS = bopgeneral:line_of_business
        begin
        If sfpNAME:EFF_DATE >= SFSAGTCOMM:EFF_DATE Then
            Begin
            If sfpNAME:policy_TYPE = "N" Then
                L_AGENT_COMM = SFSAGTCOMM:COMM_RATE
            Else
                L_AGENT_COMM = SFSAGTCOMM:RENEWAL_COMM_RATE
            End

        Next SFSAGTCOMM
        End
    end
else
    begin
    Access SFSAGTCOMM, Set SFSAGTCOMM:COMPANY_ID = sfpname:company_id,
                           SFSAGTCOMM:AGENT_NO = sfpNAME:AGENT_NO,
                           SFSAGTCOMM:LINE_OF_BUSINESS = bopgeneral:line_of_business, Generic

    while SFSAGTCOMM:COMPANY_ID       = sfpname:company_id and
          SFSAGTCOMM:AGENT_NO         = sfpNAME:AGENT_NO and
          SFSAGTCOMM:LINE_OF_BUSINESS = bopgeneral:line_of_business
        begin
        If sfpNAME:EFF_DATE >= SFSAGTCOMM:EFF_DATE Then
            Begin
            i_comm = sfsagtcomm:comm_rate
            i_renewal_comm = sfsagtcomm:renewal_comm_rate
            i_habitational_comm   = sfsagtcomm:comm_rate_1
            End

        Next SFSAGTCOMM
        End

    if sfpname:previous_policy_no <> 0 then
        begin
        i_comm = i_renewal_comm
        end
    else
    if ((bopgeneral:bop_type one of 3 or
       bopgeneral:class_code one of 22) and
       i_habitational_comm <> 0) then
        begin
        i_comm = i_habitational_comm
        end

    l_agent_comm = i_comm
    end

If L_SPLIT_COMM = "B" Then
    L_COMM = (1 - (((L_AGENT_COMM - sfpNAME:SPEC_COMM_RATE) * L_RATE_FACTOR) * 2))
If L_SPLIT_COMM = "A" Then
    L_COMM = (1 - (((L_AGENT_COMM - sfpNAME:SPEC_COMM_RATE) * L_RATE_FACTOR) * 1))
If L_COMM = 0 Then
    L_COMM = 1
L_PACKAGE = (1 - (L_PACKAGE_DEVIATION * L_RATE_FACTOR))
If L_PACKAGE = 0 Then
    L_PACKAGE = 1
L_CREDIT_FACTOR = L_COMM * L_PACKAGE
L_LOC_TOTAL = (((L_PREM + L_TOTAL_END) * L_CREDIT_FACTOR) +
              L_MISC_PREMIUM)

Access sfpLOCATION, Set sfpLOCATION:policy_NO = bopGENERAL:policy_NO,
                        sfplocation:pol_Year = bopgeneral:pol_year,
                        sfplocation:end_sequence = bopgeneral:end_sequence,
                        sfpLOCATION:PREM_NO = bopGENERAL:PREM_NO,
                        sfpLOCATION:BUILD_NO = bopGENERAL:BUILD_NO, Generic

If sfpLOCATION:policy_NO = bopGENERAL:policy_NO And
   sfplocation:pol_year = bopgeneral:pol_Year and
   sfplocation:end_sequence = bopgeneral:end_sequence and
   sfpLOCATION:PREM_NO = bopGENERAL:PREM_NO And
   sfpLOCATION:BUILD_NO = bopGENERAL:BUILD_NO Then
    Change sfpLOCATION
        Begin
        sfpLOCATION:LINE_OF_BUSINESS = bopgeneral:line_of_business
        sfpLOCATION:STATE = bopGENERAL:STATE
        sfpLOCATION:COUNTY = bopGENERAL:COUNTY
        sfpLOCATION:TRANS_CODE = 10
        sfpLOCATION:TRANS_DATE = sfpNAME:TRANS_DATE
        sfpLOCATION:EFF_DATE = sfpNAME:EFF_DATE
        sfpLOCATION:EXP_DATE = sfpNAME:EXP_DATE
        sfpLOCATION:LIMIT_CODE[1] = "A"
        sfpLOCATION:LIMIT[1] = bopGENERAL:BUILDING_LIMIT + bopGENERAL:OTHER_STRUCTURES
        sfpLOCATION:LIMIT_CODE[2] = "B"
        sfpLOCATION:LIMIT[2] = bopGENERAL:PROPERTY_LIMIT
        sfpLOCATION:LIMIT_CODE[3] = "C"
        sfpLOCATION:LIMIT[3] = bopGENERAL:LOSS_INCOME_LIMIT
        sfpLOCATION:LIMIT_CODE[4] = "D"
        sfpLOCATION:LIMIT[4] = bopGENERAL:MONEY_LIMIT_ON + bopGENERAL:MONEY_LIMIT_OFF
        sfpLOCATION:LIMIT_CODE[5] = "L"
        sfpLOCATION:LIMIT[5] = SFSLIABILITY:LIMIT
        sfplocation:premium[6] = l_boilers_prem
        sfpLOCATION:LIMIT_CODE[10] = "T"
        sfpLOCATION:LIMIT[10] = bopGENERAL:BUILDING_LIMIT +
                                bopGENERAL:PROPERTY_LIMIT +
                                bopGENERAL:OTHER_STRUCTURES +
                                L_AR_LIMIT_1 + L_VALUE_LIMIT_1 + L_EDP_LIMIT +
                                bopGENERAL:LOSS_INCOME_LIMIT


        if bopgeneral:rating_territory_Factor <> 0 then
            l_rating_territory_factor = bopgeneral:rating_territory_factor
        else
            l_rating_territory_factor = 1.00
        l_location_premium_11 = l_loc_total *
                                l_rating_territory_factor *
                                l_irpm
        sfpLOCATION:PREMIUM[10] = l_location_premium_11
        l_location_premium_10 = sfplocation:premium[10] + l_location_premium_10
        End

L_TOTAL_3 = L_LOC_TOTAL + L_TOTAL_3

/* end of get rate */
End

procedure printers_credit
begin
If bopGENERAL:CLASS_CODE = 60 Then
    Begin
    Access BPSCREDITS, Set BPSCREDITS:COMPANY_ID = bopgeneral:company_id,
                           BPSCREDITS:STATE = bopGENERAL:STATE,
                           BPSCREDITS:LINE_OF_BUSINESS = bopgeneral:line_of_business, Generic

    while BPSCREDITS:COMPANY_ID       = bopgeneral:company_id and
          BPSCREDITS:STATE            = bopGENERAL:STATE and
          BPSCREDITS:LINE_OF_BUSINESS = bopgeneral:line_of_business
        begin
        If sfpNAME:EFF_DATE >= BPSCREDITS:EFF_DATE Then
            L_PRINTERS_PERCENT = BPSCREDITS:PRINTERS_CREDIT

        Next BPSCREDITS
        End

    L_PRINTERS_PERCENT = (1 + (L_PRINTERS_PERCENT * L_RATE_FACTOR))
    If L_PRINTERS_PERCENT = 0 Then
        L_PRINTERS_PERCENT = 1
    End

If bopGENERAL:CLASS_CODE = 60 Then
    Begin
    l_printers_total = l_prem + l_total_end + l_misc_premium + l_boiler_prem_total
    l_prem            = l_prem * l_printers_percent
    if bopgeneral:bop_premium = l_minimum and
       l_change_minimum_rating = 1 then
        l_prem        = l_minimum
    l_boiler_printer_total = l_boiler_prem_total * l_printers_percent
    if bopgeneral:boilers_premium = l_minimum_boiler then
        l_boiler_printer_total = l_minimum_boiler
    l_total_end       = l_total_end * l_printers_percent
    l_misc_premium    = l_misc_premium * l_printers_percent
    l_printers_credit = l_prem + l_total_end + l_misc_premium + l_boiler_printer_total

    L_PRINTERS_CREDIT = ((l_printers_total - L_PRINTERS_CREDIT) * -1)

    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Exact

    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:PRINTERS_ERRORS_CREDITS = L_PRINTERS_CREDIT
        End
    End

Access sfpLOCATION, Set sfpLOCATION:policy_NO = bopGENERAL:policy_NO,
                        sfplocation:pol_year = bopgeneral:pol_year,
                        sfplocation:end_sequence = bopgeneral:end_sequence,
                        sfpLOCATION:PREM_NO = bopGENERAL:PREM_NO,
                        sfpLOCATION:BUILD_NO = bopGENERAL:BUILD_NO, Generic

If sfpLOCATION:policy_NO = bopGENERAL:policy_NO And
   sfplocation:pol_year = bopgeneral:pol_year and
   sfplocation:end_sequence = bopgeneral:end_sequence and
   sfpLOCATION:PREM_NO = bopGENERAL:PREM_NO And
   sfpLOCATION:BUILD_NO = bopGENERAL:BUILD_NO Then
    Change sfpLOCATION
        Begin
        sfplocation:premium[7] = l_printers_error * l_printers_percent
        End

Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                             bopgeneral_alias:pol_year = bopgeneral:pol_year,
                             bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                             bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                             bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

If bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO And
   bopgeneral_alias:pol_year = bopgeneral:pol_year and
   bopgeneral_alias:end_sequence = bopgeneral:end_sequence and
   bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO And
   bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO Then
    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:PRINTERS_ERROR_PREMIUM = L_PRINTERS_ERROR * l_printers_percent
        End

l_printers_error = l_printers_error * l_printers_percent
L_TOTAL_PRINTERS = L_PRINTERS_ERROR + L_TOTAL_PRINTERS

End

procedure update_location_total
begin
Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                             bopgeneral_alias:pol_year = bopgeneral:pol_year,
                             bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                             bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                             bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

If bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO And
   bopgeneral_alias:pol_year = bopgeneral:pol_year and
   bopgeneral_alias:end_sequence = bopgeneral:end_sequence and
   bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO And
   bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO Then
    Change bopGENERAL_ALIAS
        Begin
        bopGENERAL_ALIAS:LOCATION_PREMIUM = L_LOC_TOTAL +
                                            l_boilers_prem
        End

end

procedure access_arspayplan
begin
Access ARSPAYPLAN, Set ARSPAYPLAN:COMPANY_ID       = sfpname:company_id,
                       ARSPAYPLAN:LINE_OF_BUSINESS = g_line_of_business,
                       ARSPAYPLAN:PAYMENT_PLAN     = sfpname:PAYMENT_PLAN, generic

end

Procedure INSTALLMENT
Begin
/* 05/30/2001 - added logic to calculate the payment plan
   based on company id, line of business and total premium

   do not perform this routine of the payment plan <> 1
   must assume that if the payment plan is other than 1 the user
   wants to manually select the payment plan

   use l_total to compare total premium against minimum_premium
   requirements from teh arspayplan database
*/
/* actually recalculating the payment plan at the policy level is a
   good idea since a change in limit could easily put the policy
   into another payment plan option
*/

Do CALCULATE_PAYMENT_PLAN_OPTION

/* reaccess arspayplan since the above logic changes the value of this file
   it appears that the file is accessed on entry and even though the
   payment plan has been changed cqcs is holding the original value
*/

Access ARSPAYPLAN, Set ARSPAYPLAN:COMPANY_ID       = sfpname:company_id,
                       ARSPAYPLAN:LINE_OF_BUSINESS = g_line_of_business,
                       ARSPAYPLAN:PAYMENT_PLAN     = L_HOLD_PAYMENT_PLAN

If ARSPAYPLAN:INSTALLMENT_CHARGE_TYPE = "FLAT" And
   ARSPAYPLAN:INSTALLMENT_CHARGE_TIME = "EACH" Then
    L_INSTALLMENT = ARSPAYPLAN:INSTALLMENT_CHARGE_RATE *
                    ARSPAYPLAN:NUMBER_OF_PAYMENTS

If ARSPAYPLAN:INSTALLMENT_CHARGE_TYPE = "FIXED" Then
    L_INSTALLMENT = ARSPAYPLAN:INSTALLMENT_CHARGE_RATE

/* end of installment */
End

Procedure CALCULATE_PAYMENT_PLAN_OPTION
Begin
/* house cleaning */
L_FIRST_TIME = "Y"
L_HOLD_PAYMENT_PLAN = 1 -- this is a cya
if l_irpm_total <> 0 then
    l_sub_total = l_irpm_total
else
    l_sub_total = l_final_total

Access ARSPAYPLAN, Set ARSPAYPLAN:COMPANY_ID = bopgeneral:company_id,
                       ARSPAYPLAN:LINE_OF_BUSINESS = g_line_of_business, generic

While ARSPAYPLAN:COMPANY_ID = bopgeneral:company_id And
      ARSPAYPLAN:LINE_OF_BUSINESS = g_line_of_business
        Begin
        if arspayplan:manual_payment_plan = 0 then
        begin
        If L_FIRST_TIME = "Y" Then
            Begin
            L_FIRST_TIME = "N"
            L_HOLD_PAYMENT_PLAN = ARSPAYPLAN:PAYMENT_PLAN
            End

        If L_SUB_TOTAL >= ARSPAYPLAN:MINIMUM_PREMIUM  Then
            Begin
            L_HOLD_PAYMENT_PLAN = ARSPAYPLAN:PAYMENT_PLAN
            End
        end

        Next ARSPAYPLAN
        End

/* only update the sfpname file if the payment plan actually changed
   05/31/2001 - removed this logic so that the sfpname file would
   be updated everytime, also added update of sfpname:final_rating
*/

/* if there is a mortgagee on this policy where it is of type
   "B" - billing
   "C" - combination mortgagee and billing
   "F" - premium finance
   then the payment plan is to be set to 1
*/

Access sfpSUPP, Set sfpSUPP:policy_NO = bopGENERAL:policy_NO,
                    sfpsupp:pol_year = bopgeneral:pol_year,
                    sfpsupp:end_sequence = bopgeneral:end_sequence, generic

While sfpSUPP:policy_NO = bopGENERAL:policy_NO and
      sfpsupp:pol_year = bopgeneral:pol_Year and
      sfpsupp:end_sequence = bopgeneral:end_sequence
    Begin
    If sfpSUPP:MORTGAGE_TYPE_1 One Of "B", "C", "F" Then
        { L_HOLD_PAYMENT_PLAN = 1 }
    Next sfpSUPP
    End

/* change on feb 21, 2002 - if AC only annual is allowed */
If sfpNAME:BILL_PLAN = "AC" Then
Begin
    L_HOLD_PAYMENT_PLAN = 1
End

Access sfpNAME, Set sfpNAME:policy_NO = bopGENERAL:policy_NO,
                    sfpname:pol_year = bopgeneral:pol_year,
                    sfpname:end_sequence = bopgeneral:end_sequence, generic

If sfpNAME:policy_NO = bopGENERAL:policy_NO and
   sfpname:pol_year = bopgeneral:pol_year and
   sfpname:end_sequence = bopgeneral:end_sequence Then
    Begin
    Change sfpNAME
        Begin
        sfpNAME:PAYMENT_PLAN = L_HOLD_PAYMENT_PLAN
        End

    End

/* if deposit premium equal to or greater then total premium
   then the payment plan is to be set to 1
*/
Access sfpNAME, Set sfpNAME:policy_NO = bopGENERAL:policy_NO,
                    sfpname:pol_year = bopgeneral:pol_year,
                    sfpname:end_sequence = bopgeneral:end_sequence, generic

If sfpNAME:policy_NO = bopGENERAL:policy_NO and
   sfpname:pol_year = bopgeneral:pol_year and
   sfpname:end_sequence = bopgeneral:end_sequence Then
    Begin
    Change sfpNAME
        Begin
        sfpNAME:PAYMENT_PLAN = L_HOLD_PAYMENT_PLAN
        End
    End

End

procedure minimum_premium
begin
Access SFSCONTROL, Set SFSCONTROL:COMPANY_ID = bopgeneral:company_id,
                       SFSCONTROL:STATE = bopGENERAL:STATE,
                       SFSCONTROL:LINE_OF_BUSINESS = bopgeneral:line_of_business, generic

l_change_minimum_rating = 0
while SFSCONTROL:COMPANY_ID       = bopgeneral:company_id and
      SFSCONTROL:STATE            = bopGENERAL:STATE and
      SFSCONTROL:LINE_OF_BUSINESS = bopgeneral:line_of_business
    begin
    If (sfpNAME:EFF_DATE >= SFSCONTROL:EFF_DATE and
       (sfpname:eff_date <= sfscontrol:exp_date or
       sfscontrol:exp_date = 0)) Then
        begin
        L_MINIMUM = SFSCONTROL:MINIMUM_PREMIUM
        l_minimum_1 = sfscontrol:minimum_premium_1
        l_change_minimum_rating = sfscontrol:change_minimum_rating
        l_mp_building_property = sfscontrol:mp_building_property
        l_short_rate = sfscontrol:short_rate
        end

    Next SFSCONTROL
    End

end

Procedure TOTALS
Begin
If L_BUYBACK = "Y" Then
    Begin
    L_UPDATE_SFPEND_PREMIUM = L_TOTAL * L_BUYBACK_FACTOR
    If L_UPDATE_SFPEND_PREMIUM < L_BUYBACK_PREMIUM Then
        L_UPDATE_SFPEND_PREMIUM = L_BUYBACK_PREMIUM
    L_BUYBACK_OPTION_TOTAL = L_UPDATE_SFPEND_PREMIUM
    Access sfpEND, Set sfpEND:policy_NO = bopGENERAL:policy_NO,
                       sfpend:pol_year = bopgeneral:pol_year,
                       sfpend:end_sequence = bopgeneral:end_sequence, Generic

    while sfpEND:policy_NO = bopGENERAL:policy_NO and
          sfpend:pol_year = bopgeneral:pol_year and
          sfpend:end_sequence = bopgeneral:end_sequence
        begin
        If sfpEND:CODE = "MCL589" Then
            Change sfpEND
                Begin
                sfpEND:PREMIUM = L_UPDATE_SFPEND_PREMIUM
                End

        Next sfpEND
        End
    End

Access BPSRATE, Set BPSRATE:COMPANY_ID = bopgeneral:company_id,
                    BPSRATE:STATE = bopGENERAL:STATE,
                    BPSRATE:LINE_OF_BUSINESS = bopgeneral:line_of_business, Generic

l_enhancement_premium = 0
while BPSRATE:COMPANY_ID       = bopgeneral:company_id and
      BPSRATE:STATE            = bopGENERAL:STATE and
      BPSRATE:LINE_OF_BUSINESS = bopgeneral:line_of_business
    begin
    If sfpNAME:EFF_DATE >= BPSRATE:EFF_DATE Then
        Begin
        if bopgeneral:special_enhancement = 1 then
            l_enhancement_premium = bpsrate:enhancement_premium
        End

    Next BPSRATE
    End

l_fungi_total = 0
if l_fungi_factor <> 0 and
   sfscompany:boiler_rating = 1 then
    begin
    access bopgeneral_alias, set bopgeneral_alias:policy_no    = bopgeneral:policy_no,
                                 bopgeneral_alias:pol_year     = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence, generic

    l_total_basic_premium = 0
    l_total_basic_premium_1 = 0
    l_update_sfpend_premium = 0
    while bopgeneral_alias:policy_no    = bopgeneral:policy_no and
          bopgeneral_alias:pol_year     = bopgeneral:pol_year and
          bopgeneral_alias:end_sequence = bopgeneral:end_sequence
        begin
        l_total_basic_premium = bopgeneral_alias:building_premium +
                                bopgeneral_alias:property_premium +
                                bopgeneral_alias:property_special

        L_total_basic_premium_1 = ((l_total_basic_premium *
                                  L_fungi_factor) -
                                  l_total_basic_premium)

        If l_total_basic_premium_1 < L_fungi_minimum Then
            l_total_basic_premium_1 = L_fungi_minimum

        l_update_sfpend_premium = l_update_sfpend_premium +
                                  l_total_basic_premium_1

        next bopgeneral_alias
        end

    l_fungi_total = L_UPDATE_SFPEND_PREMIUM
    Access sfpEND, Set sfpEND:policy_NO = bopGENERAL:policy_NO,
                       sfpend:pol_year = bopgeneral:pol_year,
                       sfpend:end_sequence = bopgeneral:end_sequence, Generic

    while sfpend:policy_no = bopgeneral:policy_no and
          sfpend:pol_year = bopgeneral:pol_year and
          sfpend:end_sequence = bopgeneral:end_sequence
        begin
        If sfpEND:CODE one of "MCL883", "MCL884", "MCN883" Then
            Change sfpEND
                Begin
                sfpEND:PREMIUM = L_UPDATE_SFPEND_PREMIUM
                End

        Next sfpEND
        End
    End
else
if l_fungi_factor <> 0 and
   sfscompany:boiler_rating <> 1 then
    begin
    access bopgeneral_alias, set bopgeneral_alias:policy_no    = bopgeneral:policy_no,
                                 bopgeneral_alias:pol_year     = bopgeneral:pol_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence, generic

    l_total_basic_premium = 0
    while bopgeneral_alias:policy_no    = bopgeneral:policy_no and
          bopgeneral_alias:pol_year     = bopgeneral:pol_year and
          bopgeneral_alias:end_sequence = bopgeneral:end_sequence
        begin
        l_total_basic_premium = bopgeneral_alias:building_premium +
                                bopgeneral_alias:property_premium +
                                bopgeneral_alias:property_special +
                                l_total_basic_premium

        next bopgeneral_alias
        end

    L_UPDATE_SFPEND_PREMIUM = ((l_total_basic_premium *
                              L_fungi_factor) -
                              l_total_basic_premium)
    If L_UPDATE_SFPEND_PREMIUM < L_fungi_minimum Then
        L_UPDATE_SFPEND_PREMIUM = L_fungi_minimum
    l_fungi_total = L_UPDATE_SFPEND_PREMIUM
    Access sfpEND, Set sfpEND:policy_NO = bopGENERAL:policy_NO,
                       sfpend:pol_year = bopgeneral:pol_year,
                       sfpend:end_sequence = bopgeneral:end_sequence, Generic

    while sfpend:policy_no = bopgeneral:policy_no and
          sfpend:pol_year = bopgeneral:pol_year and
          sfpend:end_sequence = bopgeneral:end_sequence
        begin
        If sfpEND:CODE one of "MCL883", "MCL884", "MCN883" Then
            Change sfpEND
                Begin
                sfpEND:PREMIUM = L_UPDATE_SFPEND_PREMIUM
                End

        Next sfpEND
        End
    End

If SFSCOMPANY:INCLUDE_ALL_IRPM = 1 Then
    L_TOTAL = L_TOTAL + L_TERRITORY_RATING + L_BOILER_PREM_TOTAL +
              L_PRINTERS_ERROR + L_BUYBACK_OPTION_TOTAL +
              l_printers_credit + l_fungi_total + l_adjustment_to_meet_minimum +
              l_enhancement_premium
Else
    L_TOTAL = L_TOTAL + l_adjustment_to_meet_minimum + L_TERRITORY_RATING

l_minimum_applies = "N"
if sfscompany:optional_coverage_screen = 1 then
    begin
    if bopgeneral:bop_type one of 3 then
        begin
        if l_total < l_minimum_1 then
            begin
            l_total = l_minimum_1
            l_minimum_applies = "Y"
            end
        end
    else
        begin
        if l_total < l_minimum then
            begin
            l_total = l_minimum
            l_minimum_applies = "Y"
            end
        end
    end

If L_TOTAL < L_MINIMUM and
   l_change_minimum_rating = 0 and
   l_mp_building_property = 0 and
   sfscompany:optional_coverage_screen not one of 1 Then
    Begin
    L_TOTAL = L_MINIMUM
    l_total_3 = l_minimum
    L_MINIMUM_APPLIES = "Y"
    End

if l_minimum_applies = "Y" and
   sfscompany:boiler_rating = 4 then
    begin
    Access BPSRATE, Set BPSRATE:COMPANY_ID = bopgeneral:company_id,
                        BPSRATE:STATE = bopGENERAL:STATE,
                        BPSRATE:LINE_OF_BUSINESS = bopgeneral:line_of_business, Generic

    while BPSRATE:COMPANY_ID       = bopgeneral:company_id and
          BPSRATE:STATE            = bopGENERAL:STATE and
          BPSRATE:LINE_OF_BUSINESS = bopgeneral:line_of_business
        begin
        If sfpNAME:EFF_DATE >= BPSRATE:EFF_DATE Then
            Begin
            L_FACTOR_1 = BPSRATE:BOILERS_FACTOR
            L_LIMIT = BPSRATE:BOILERS_LIMIT
            L_BOILERS_LOSS_INCOME = BPSRATE:BOILER_LOSS_INCOME
            l_factor_2 = bpsrate:boilers_factor_1
            l_code     = bpsrate:boiler_code_1
            l_limit_1 = bpsrate:boiler_restaurant_limit
            End

        Next BPSRATE
        End

    access bopendorse, set bopendorse:policy_no    = bopgeneral:policy_no,
                           bopendorse:pol_year     = bopgeneral:pol_year,
                           bopendorse:end_sequence = bopgeneral:end_sequence,
                           bopendorse:prem_no      = 0,
                           bopendorse:build_no     = 0,
                           bopendorse:code         = l_code, generic

    l_rate_factor = 0.01
    l_irpm = (1 + (sfpmaster:irpm * 0.01))
    if l_irpm = 0 then
        l_irpm = 1

    if bopendorse:limit[1] = l_limit_1 and
       bopendorse:limit[1] <> 0 and
       l_factor_2 <> 0 then
        l_factor_1 = l_factor_2


    Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                 bopgeneral_alias:pol_year = bopgeneral:poL_year,
                                 bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                 bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                 bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

    change bopgeneral_alias
        begin
        if bopendorse:premium <> 0 then
            bopgeneral_alias:boilers_premium = bopendorse:premium
        else
            bopgeneral_alias:boilers_premium = ((l_total * l_irpm) *
                                              (l_factor_1 divide 100))
        end

--write("%c%n",2005,bopgeneral_alias:boilers_premium)
--write("%c%n",2015,l_minimum_boiler)
--pause(3000)
    If bopgeneral_alias:boilers_premium < L_MINIMUM_boiler And
       bopgeneral_alias:boilers_premium <> 0 Then
        Begin
        Change bopGENERAL_ALIAS
            Begin
            bopGENERAL_ALIAS:BOILERS_PREMIUM = L_MINIMUM_boiler
            bopGENERAL_ALIAS:OPTIONAL_TOTAL = ((bopGENERAL_ALIAS:OPTIONAL_TOTAL -
                                              L_BOILER_PREM_TOTAL) +
                                              L_MINIMUM_boiler)
--                                              write("%c%n",1005,bopgeneral_alias:location_premium)
--                                              write("%c%n",1015,l_boiler_prem_total)
--                                              write("%c%n",1025,l_minimum_boiler)
            bopGENERAL_ALIAS:LOCATION_PREMIUM = ((bopgeneral_alias:location_premium -
                                                l_boiler_prem_total) +
                                                l_minimum_boiler)
 --                               write("%c%n",1035,bopgeneral_alias:location_premium)
            End
        end

    l_boiler_prem_total = bopgeneral_alias:boilers_premium
    end

If L_MAX_CREDITS < L_BPSCREDITS_MAXIMUM And
   L_MAX_CREDITS <> 0 and
   sfpname:company_Id = "FARMERS" Then
    Warning "Credits exceeds maximum allowed, Press CANCEL to accept"
End

Procedure FINAL_TOTAL
Begin
L_EFF_DATE_1 = Dateadd(sfpNAME:EFF_DATE,0,1)
If sfpNAME:EXP_DATE < L_EFF_DATE_1 Then
    Begin
    L_DAYS_RATE = L_TOTAL Divide 365
    L_DAYS = sfpNAME:EXP_DATE - sfpNAME:EFF_DATE
    L_PRO_RATA_PREMIUM = L_DAYS * L_DAYS_RATE
    L_TOTAL = L_PRO_RATA_PREMIUM
    End

If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
    Begin
    If SFSCOMPANY:INCLUDE_ALL_IRPM = 1 Then
        Begin
        L_FINAL_TOTAL = L_TOTAL + L_INSTALLMENT
        End
    Else
        Begin
        L_FINAL_TOTAL = L_TOTAL + L_INSTALLMENT + L_BOILER_PREM_TOTAL +
                        L_PRINTERS_ERROR + L_BUYBACK_OPTION_TOTAL +
                        l_printers_credit + l_fungi_total
        End
    End
Else
    Begin
    If SFSCOMPANY:INCLUDE_ALL_IRPM = 1 Then
        Begin
        L_FINAL_TOTAL = L_TOTAL
        End
    Else
        Begin
        L_FINAL_TOTAL = L_TOTAL + L_BOILER_PREM_TOTAL + L_PRINTERS_ERROR
                        + L_BUYBACK_OPTION_TOTAL + l_printers_credit +
                        l_fungi_total
        End
    End

if sfscompany:boiler_rating not one of 4 then
    begin
    L_IRPM = (1 + (L_IRPM * L_RATE_FACTOR))
    If L_IRPM = 0 Then
        L_IRPM = 1
    end
else
if sfscompany:boiler_rating one of 4 then
    begin
    l_rate_factor = 0.01
    l_irpm = (1 + (sfpmaster:irpm * 0.01))
    if l_irpm = 0 then
        l_irpm = 1
    end

access sfpend, set sfpend:policy_no = g_policy_no,
                   sfpend:pol_year = g_year,
                   sfpend:end_sequence = g_end_sequence, generic

l_bu2597_premium = 0
l_bu2510_premium = 0
while sfpend:policY_no = g_policy_no and
      sfpend:pol_year = g_year and
      sfpend:end_sequence = g_end_sequence
        begin
        if sfpend:code one of "BU2597", "BU0197" then
            l_bu2597_premium = l_bu2597_premium + sfpend:premium
        if sfpend:code one of "BU2510" then
            l_bu2510_premium = l_bu2510_premium + sfpend:premium

        next sfpend
        end

If SFSCOMPANY:INCLUDE_ALL_IRPM <> 1 Then
    Begin
    If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
        Begin
        If L_IRPM not one of 0, 1 Then
            Begin
            L_IRPM_TOTAL = (((L_TOTAL - l_bu2510_premium - l_bu2597_premium) * L_IRPM) + L_INSTALLMENT + l_boiler_prem_total +
                           L_PRINTERS_ERROR + l_printers_credit + L_BUYBACK_OPTION_TOTAL +
                           l_fungi_total)
            l_irpm_total = l_irpm_total + l_bu2510_premium + l_bu2597_premium +
                           l_epl_prem + l_epl_extend_premium
            End
        End
    Else
        Begin
        If L_IRPM not one of 0, 1 Then
            Begin
            L_IRPM_TOTAL = (((L_TOTAL - l_bu2510_premium - l_bu2597_premium) * L_IRPM) + l_boiler_prem_total +
                           L_PRINTERS_ERROR + l_printers_credit + L_BUYBACK_OPTION_TOTAL +
                           l_fungi_total)
            l_irpm_total = l_irpm_total + l_bu2510_premium + l_bu2597_premium +
                           l_epl_prem + l_epl_extend_premium
            End
        End
    End
Else
    Begin
    If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
        Begin
        If L_IRPM not one of 0, 1 Then
            Begin
            L_IRPM_TOTAL = (((L_TOTAL - l_bu2510_premium - l_bu2597_premium) * L_IRPM) + L_INSTALLMENT)
            l_irpm_total = l_irpm_total + l_bu2510_premium + l_bu2597_premium +
                           l_epl_prem + l_epl_extend_premium
            End
        End
    Else
        Begin
        If L_IRPM not one of 0, 1 Then
            Begin
            L_IRPM_TOTAL = ((L_TOTAL - l_bu2510_premium - l_bu2597_premium) * L_IRPM)
            l_irpm_total = l_irpm_total + l_bu2510_premium + l_bu2597_premium +
                           l_epl_prem + l_epl_extend_premium
            End
        End
    End

if l_irpm_total = 0 then
    l_final_total = l_final_total + l_epl_prem + l_epl_extend_premium

access sfssurcharge, set sfssurcharge:company_id = bopgeneral:company_id,
                         sfssurcharge:state = bopgeneral:state,
                         sfssurcharge:line_of_business = bopgeneral:line_of_business, generic

l_surcharge_date = 0
while sfssurcharge:company_id = bopgeneral:company_id and
      sfssurcharge:state = bopgeneral:state and
      sfssurcharge:line_of_business = bopgeneral:line_of_business
        begin
        if (sfpname:eff_date >= sfssurcharge:eff_date and
           (l_surcharge_date < sfssurcharge:eff_date or
           l_surcharge_date = 0)) then
            begin
            l_surcharge_date    = sfssurcharge:eff_date
            l_surcharge_factor  = sfssurcharge:surcharge_factor
            l_surcharge_minimum = sfssurcharge:minimum_premium
            end
        next sfssurcharge
        end

l_minimum_applies = "N"
if l_irpm_total <> 0 then
    begin
    If L_irpm_TOTAL <= L_MINIMUM Then
        Begin
        L_irpm_total = L_MINIMUM
        L_MINIMUM_APPLIES = "Y"
        End
    end
else
    begin
    If L_final_TOTAL <= L_MINIMUM Then
        Begin
        L_final_total = L_MINIMUM
        L_MINIMUM_APPLIES = "Y"
        End
    end

if sfscompany:boiler_rating <> 4 then
    begin
    If L_IRPM_TOTAL <> 0 Then
        L_SURCHARGE = L_IRPM_TOTAL * L_SURCHARGE_FACTOR
    Else
        L_SURCHARGE = L_FINAL_TOTAL * L_SURCHARGE_FACTOR

    If L_SURCHARGE < L_SURCHARGE_MINIMUM Then
        L_SURCHARGE = L_SURCHARGE_MINIMUM
    end

end

procedure pliga
begin
access sfssurcharge, set sfssurcharge:company_id = bopgeneral:company_id,
                         sfssurcharge:state = bopgeneral:state,
                         sfssurcharge:line_of_business = bopgeneral:line_of_business, generic

l_surcharge_date = 0
while sfssurcharge:company_id = bopgeneral:company_id and
      sfssurcharge:state = bopgeneral:state and
      sfssurcharge:line_of_business = bopgeneral:line_of_business
        begin
        if (sfpname:eff_date >= sfssurcharge:eff_date and
           (l_surcharge_date < sfssurcharge:eff_date or
           l_surcharge_date = 0)) then
            begin
            l_surcharge_date    = sfssurcharge:eff_date
            l_surcharge_factor  = sfssurcharge:surcharge_factor
            l_surcharge_minimum = sfssurcharge:minimum_premium
            end
        next sfssurcharge
        end

If L_IRPM_TOTAL <> 0 Then
    L_SURCHARGE = ((L_IRPM_TOTAL + l_identity_theft) * L_SURCHARGE_FACTOR)
Else
    L_SURCHARGE = ((L_FINAL_TOTAL + l_identity_theft) * L_SURCHARGE_FACTOR)

If L_SURCHARGE < L_SURCHARGE_MINIMUM Then
    L_SURCHARGE = L_SURCHARGE_MINIMUM

end

procedure update_totals
begin
L_COMPANY_ID = bopgeneral:company_id
access sfsline, set sfsline:company_id       = sfpname:company_id,
                    sfsline:line_of_business = sfpname:line_of_business,
                    sfsline:lob_subline      = "00", generic

if sfsline:lob_code one of "CPORTFOLIO" then
    begin
    access sfpamt, set sfpamt:policy_no = g_policy_no,
                       sfpamt:pol_year = g_year,
                       sfpamt:end_sequence = g_End_sequence, exact

    if sfpamt:policy_no = g_policy_no and
       sfpamt:pol_year = g_Year and
       sfpamt:end_sequence = g_End_sequence then
        change sfpamt
            begin
            if l_irpm_total <> 0 then
                sfpamt:lob_totals[5] = l_irpm_total - l_terrorism_premium
            else
                sfpamt:lob_totals[5] = l_final_total - l_terrorism_premium
            sfpamt:lob_surcharge[5]  = l_surcharge
            sfpamt:lob_terrorism[5]  = l_terrorism_premium
            end
    else
        add sfpamt
            begin
            sfpamt:policy_no         = g_policy_no
            sfpamt:pol_year          = g_year
            sfpamt:end_sequence      = g_End_sequence
            if l_irpm_total <> 0 then
                sfpamt:lob_totals[5] = l_irpm_total - l_terrorism_premium
            else
                sfpamt:lob_totals[5] = l_final_total - l_terrorism_premium
            sfpamt:lob_surcharge[5]  = l_surcharge
            sfpamt:lob_terrorism[5]  = l_terrorism_premium
            end

    access sfpmastsupp, set sfpmastsupp:policy_no = g_policy_no,
                            sfpmastsupp:pol_year = g_year,
                            sfpmastsupp:end_sequence = g_end_sequence,
                            sfpmastsupp:line_of_business = g_line_of_business, generic

    If sfpmastsupp:policy_NO = G_policy_NO and
       sfpmastsupp:pol_year = g_year and
       sfpmastsupp:end_sequence = g_end_sequence and
       sfpmastsupp:line_of_business = g_line_of_business Then
        begin
        Change sfpmastsupp
            Begin
            sfpmastsupp:TOTAL[17] = L_TOTAL
            sfpmastsupp:TOTAL[18] = L_FINAL_TOTAL
            sfpmastsupp:TOTAL[19] = L_IRPM_TOTAL

            If L_IRPM_TOTAL <> 0 Then
                Begin
                If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
                    Begin
                    sfpmastsupp:TOTAL[20] = L_IRPM_TOTAL + L_SURCHARGE  +
                                          L_INSTALLMENT
                    sfpmastsupp:AMT_DUE_TOTAL[20] = L_IRPM_TOTAL + L_SURCHARGE  +
                                                  L_INSTALLMENT
                    End
                Else
                    Begin
                    sfpmastsupp:TOTAL[20] = L_IRPM_TOTAL + L_SURCHARGE
                    sfpmastsupp:AMT_DUE_TOTAL[20] = L_IRPM_TOTAL + L_SURCHARGE
                    End
                End
            Else
                Begin
                If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
                    Begin
                    sfpmastsupp:TOTAL[20] = L_FINAL_TOTAL + L_SURCHARGE +
                                          L_INSTALLMENT
                    sfpmastsupp:AMT_DUE_TOTAL[20] = L_FINAL_TOTAL + L_SURCHARGE +
                                                  L_INSTALLMENT
                    End
                Else
                    Begin
                    sfpmastsupp:TOTAL[20] = L_FINAL_TOTAL + L_SURCHARGE
                    sfpmastsupp:AMT_DUE_TOTAL[20] = L_FINAL_TOTAL + L_SURCHARGE
                    End
                End
            If L_IRPM_TOTAL <> 0 Then
                Begin
                If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
                    Begin
                    sfpmastsupp:TOTAL[1] = L_IRPM_TOTAL - L_INSTALLMENT -
                                         L_BOILER_PREM_TOTAL -
                                         l_terrorism_premium -
                                         l_identity_theft
                    l_sfpmaster_total_10 = sfpmastsupp:total[1]
                    End
                Else
                    Begin
                    sfpmastsupp:TOTAL[1] = L_IRPM_TOTAL - L_BOILER_PREM_TOTAL -
                                           l_terrorism_premium - l_identity_theft
                    l_sfpmaster_total_10 = sfpmastsupp:total[1]
                    End
                End
            Else
                Begin
                If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
                    Begin
                    sfpmastsupp:TOTAL[1] = L_FINAL_TOTAL - L_INSTALLMENT -
                                         L_BOILER_PREM_TOTAL - l_terrorism_premium -
                                         l_identity_theft
                    l_sfpmaster_total_10 = sfpmastsupp:total[1]
                    End
                Else
                    Begin
                    sfpmastsupp:TOTAL[1] = L_FINAL_TOTAL - L_BOILER_PREM_TOTAL -
                                           l_terrorism_premium - l_identity_theft
                    l_sfpmaster_total_10 = sfpmastsupp:total[1]
                    End
                End
            sfpmastsupp:TOTAL[2] = L_BOILER_PREM_TOTAL
            sfpmastsupp:TOTAL[3] = L_BUYBACK_OPTION_TOTAL
            sfpmastsupp:total[4] = l_printers_credit
            sfpmastsupp:total[5] = l_fungi_total
            sfpmastsupp:total[6] = l_adjustment_to_meet_minimum
            sfpmastsupp:total[7] = l_identity_theft
            sfpmastsupp:total[8] = l_enhancement_premium
            If L_MINIMUM_APPLIES = "Y" Then
                sfpmastsupp:MINIMUM_PREM_APPLIES = "Y"
            else
                sfpmastsupp:minimum_prem_applies = "N"
            sfpmastsupp:SURCHARGE = L_SURCHARGE
            sfpmastsupp:RAW_PREMIUM_AMT_DUE = ((L_TOTAL * L_IRPM) + L_PRINTERS_ERROR +
                                            L_BUYBACK_OPTION_TOTAL + l_printers_credit +
                                            l_fungi_total + l_enhancement_premium)
            End
        end
    end
else
    begin
    access sfpmaster, set sfpmaster:policy_no = g_policy_no,
                          sfpmaster:pol_year = g_year,
                          sfpmaster:end_sequence = g_end_sequence, generic

    If sfpMASTER:policy_NO = bopGENERAL:policy_NO and
       sfpmaster:pol_year = bopgeneral:pol_year and
       sfpmaster:end_sequence = bopgeneral:end_sequence Then
        begin
        Change sfpMASTER
            Begin
            sfpMASTER:TOTAL[17] = L_TOTAL
            sfpMASTER:TOTAL[18] = L_FINAL_TOTAL
            sfpMASTER:TOTAL[19] = L_IRPM_TOTAL

            If L_IRPM_TOTAL <> 0 Then
                Begin
                If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
                    Begin
                    sfpMASTER:TOTAL[20] = L_IRPM_TOTAL + L_SURCHARGE  +
                                          L_INSTALLMENT
                    sfpMASTER:AMT_DUE_TOTAL[20] = L_IRPM_TOTAL + L_SURCHARGE  +
                                                  L_INSTALLMENT
                    End
                Else
                    Begin
                    sfpMASTER:TOTAL[20] = L_IRPM_TOTAL + L_SURCHARGE
                    sfpMASTER:AMT_DUE_TOTAL[20] = L_IRPM_TOTAL + L_SURCHARGE
                    End
                End
            Else
                Begin
                If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
                    Begin
                    sfpMASTER:TOTAL[20] = L_FINAL_TOTAL + L_SURCHARGE +
                                          L_INSTALLMENT
                    sfpMASTER:AMT_DUE_TOTAL[20] = L_FINAL_TOTAL + L_SURCHARGE +
                                                  L_INSTALLMENT
                    End
                Else
                    Begin
                    sfpMASTER:TOTAL[20] = L_FINAL_TOTAL + L_SURCHARGE
                    sfpMASTER:AMT_DUE_TOTAL[20] = L_FINAL_TOTAL + L_SURCHARGE
                    End
                End

            If L_IRPM_TOTAL <> 0 Then
                Begin
                If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
                    Begin
                    sfpMASTER:TOTAL[1] = L_IRPM_TOTAL - L_INSTALLMENT -
                                         L_BOILER_PREM_TOTAL -
                                         l_terrorism_premium -
                                         l_identity_theft -
                                         l_epl_prem -
                                         l_epl_extend_premium
                    l_sfpmaster_total_10 = sfpmaster:total[1]
                    End
                Else
                    Begin
                    sfpMASTER:TOTAL[1] = L_IRPM_TOTAL - L_BOILER_PREM_TOTAL -
                                         l_terrorism_premium -
                                         l_identity_theft -
                                         l_epl_prem -
                                         l_epl_extend_premium
                    l_sfpmaster_total_10 = sfpmaster:total[1]
                    End
                End
            Else
                Begin
                If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
                    Begin
                    sfpMASTER:TOTAL[1] = L_FINAL_TOTAL - L_INSTALLMENT -
                                         L_BOILER_PREM_TOTAL -
                                         l_terrorism_premium -
                                         l_identity_theft -
                                         l_epl_prem -
                                         l_epl_extend_premium
                    l_sfpmaster_total_10 = sfpmaster:total[1]
                    End
                Else
                    Begin
                    sfpMASTER:TOTAL[1] = L_FINAL_TOTAL - L_BOILER_PREM_TOTAL -
                                         l_terrorism_premium -
                                         l_identity_theft -
                                         l_epl_prem -
                                         l_epl_extend_premium
                    l_sfpmaster_total_10 = sfpmaster:total[1]
                    End
                End
            sfpMASTER:TOTAL[2] = L_BOILER_PREM_TOTAL
            sfpMASTER:TOTAL[3] = L_BUYBACK_OPTION_TOTAL
            sfpmaster:total[4] = l_printers_credit
            sfpmaster:total[5] = l_fungi_total
            sfpmaster:total[6] = l_adjustment_to_meet_minimum
            sfpmaster:total[7] = l_identity_theft
            sfpmaster:total[8] = l_enhancement_premium
            sfpMASTER:INSTALLMENT_CHARGE = L_INSTALLMENT
            If L_MINIMUM_APPLIES = "Y" Then
                sfpMASTER:MINIMUM_PREM_APPLIES = "Y"
            else
                sfpmaster:minimum_prem_applies = "N"
            sfpMASTER:SURCHARGE = L_SURCHARGE
            sfpmaster:short_rate = i_short_rate
            sfpMASTER:RAW_PREMIUM_AMT_DUE = ((L_TOTAL * L_IRPM) + L_PRINTERS_ERROR +
                                            L_BUYBACK_OPTION_TOTAL + l_printers_credit +
                                            l_fungi_total + l_enhancement_premium)
            End
        end
    end

Access sfpLOCATION, Set sfpLOCATION:policy_NO = bopGENERAL:policy_NO,
                        sfplocation:pol_year = bopgeneral:pol_year,
                        sfplocation:end_sequence = bopgeneral:end_sequence,
                        sfpLOCATION:PREM_NO = bopGENERAL:PREM_NO,
                        sfpLOCATION:BUILD_NO = bopGENERAL:BUILD_NO, Generic

If sfpLOCATION:policy_NO = bopGENERAL:policy_NO And
   sfplocation:pol_year = bopgeneral:pol_year and
   sfplocation:end_sequence = bopgeneral:end_sequence and
   sfpLOCATION:PREM_NO = bopGENERAL:PREM_NO And
   sfpLOCATION:BUILD_NO = bopGENERAL:BUILD_NO Then
    Change sfpLOCATION
        Begin
        if l_location_premium_10 <> l_sfpmaster_total_10 then
            begin
            l_location_new_total = l_location_premium_10 -
                                   l_sfpmaster_total_10
            sfplocation:premium[10] = sfplocation:premium[10] - l_location_new_total
            end
        end

/* end of final total */
End

Procedure RATE_ENDORSEMENTS
Begin
Access SFSOPTEND, Set SFSOPTEND:COMPANY_ID = bopgeneral:company_id,
                      SFSOPTEND:STATE = bopGENERAL:STATE,
                      SFSOPTEND:LINE_OF_BUSINESS = bopgeneral:line_of_business,
                      SFSOPTEND:CODE = L_CODE, Generic

while SFSOPTEND:COMPANY_ID       = bopgeneral:company_id and
      SFSOPTEND:STATE            = bopGENERAL:STATE and
      SFSOPTEND:LINE_OF_BUSINESS = bopgeneral:line_of_business and
      SFSOPTEND:CODE             =  L_CODE
    begin
    If (sfpNAME:EFF_DATE >= SFSOPTEND:EFF_DATE and
       (sfpname:eff_date <= sfsoptend:exp_date or
       sfsoptend:exp_date = 0)) Then
        Begin
        L_END_FACTOR = SFSOPTEND:PREMIUM_1[1]
        L_END_LIMIT = SFSOPTEND:LIMIT[1]
        L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]

        if l_code one of "MCL426" then
            begin
            Access bopENDORSE, Set bopENDORSE:policy_NO    = sfpend:policy_NO,
                                   bopendorse:pol_year     = sfpend:poL_year,
                                   bopendorse:end_sequence = sfpend:end_sequence,
                                   bopENDORSE:PREM_NO      = sfpend:PREM_NO,
                                   bopENDORSE:BUILD_NO     = sfpend:BUILD_NO,
                                   bopENDORSE:CODE         = sfpEND:CODE, Generic

            switch(bopendorse:limit[1])
              case 300000 : l_end_premium1 = sfsoptend:premium_1[1]
              case 500000 : l_end_premium1 = sfsoptend:premium_1[2]
              default     : l_end_premium1 = sfsoptend:premium_1[3]
              end
            end

        if l_code one of "MCP140", "MCP141" then
            begin
            Access bopENDORSE, Set bopENDORSE:policy_NO    = bopGENERAL:policy_NO,
                                   bopendorse:pol_year     = bopgeneral:poL_year,
                                   bopendorse:end_sequence = bopgeneral:end_sequence,
                                   bopENDORSE:PREM_NO      = bopGENERAL:PREM_NO,
                                   bopENDORSE:BUILD_NO     = bopGENERAL:BUILD_NO,
                                   bopENDORSE:CODE         = sfpEND:CODE, Generic

            if sfsoptend:limit[1] = bopendorse:limit[1] then
                l_end_premium1 = sfsoptend:premium_1[1]
            if sfsoptend:limit[2] = bopendorse:limit[1] then
                l_end_premium1 = sfsoptend:premium_1[2]
            if sfsoptend:limit[3] = bopendorse:limit[1] then
                l_end_premium1 = sfsoptend:premium_1[3]
            end

        If L_CODE = "MCL189" Then
            Begin
            L_BUYBACK_FACTOR = SFSOPTEND:PREMIUM_1[1]
            L_BUYBACK_PREMIUM = SFSOPTEND:PREMIUM_1[2]
            End

        If L_CODE one of "MCL883", "MCL884", "MCN883" Then
            Begin
            Access bopENDORSE, Set bopENDORSE:policy_NO    = sfpend:policy_NO,
                                   bopendorse:pol_year     = sfpend:poL_year,
                                   bopendorse:end_sequence = sfpend:end_sequence,
                                   bopENDORSE:PREM_NO      = sfpend:PREM_NO,
                                   bopENDORSE:BUILD_NO     = sfpend:BUILD_NO,
                                   bopENDORSE:CODE         = sfpEND:CODE, Generic

            if bopendorse:limit[1] = sfsoptend:limit[1] then
                L_fungi_FACTOR = SFSOPTEND:PREMIUM_1[1]
            if bopendorse:limit[1] = sfsoptend:limit[2] then
                l_fungi_factor = sfsoptend:premium_1[2]
            l_fungi_minimum = sfsoptend:premium_1[3]
            End

        If L_CODE = "MCL434" Then
            Begin
            Switch(L_LIABILITY_CODE)
              Case 1 : Begin
                       L_END_LIMIT = SFSOPTEND:LIMIT[1]
                       L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
                       End
              Case 2 : Begin
                       L_END_LIMIT = SFSOPTEND:LIMIT[2]
                       L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[2]
                       End
              Case 3 : Begin
                       L_END_LIMIT = SFSOPTEND:LIMIT[3]
                       L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[3]
                       End
              End

            L_END_MINIMUM = SFSOPTEND:PREMIUM_1[4]
            End

        If L_CODE = "BU0120" Then
            Begin
            Switch(L_LIABILITY_CODE)
              Case 1 : L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
              Case 2 : L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[2]
              Case 3 : L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[3]
              End
            End

        If L_CODE = "BU0195" Then
            Begin
            Switch(L_LIABILITY_CODE)
              Case 1 : Begin
                       L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
                       End
              Case 2 : Begin
                       L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[3]
                       End
              Case 3 : Begin
                       L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[5]
                       End
              Case 4 : Begin
                       L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[10]
                       End
              End
            End

        If L_CODE = "BU0521" Then
            L_END_FACTOR = SFSOPTEND:PREMIUM_1[1]

        If L_CODE = "BU0194" Or
           L_CODE = "BU0192" Or
           L_CODE = "BU0191" Then
            Begin
            Switch(L_LIABILITY_CODE)
              Case 1 : Begin
                       L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
                       End
              Case 2 : Begin
                       L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[2]
                       End
              Case 3 : Begin
                       L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[3]
                       End
              Case 4 : Begin
                       L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[4]
                       End
              End
            End

        If L_CODE one of "BU0282", "BU2582" Then
            Begin
            if sfscompany:boiler_rating = 4 or
               sfpend:prem_no = 0 then
                begin
                access bopdishonesty, set bopdishonesty:policy_no = g_policy_no,
                                          bopdishonesty:pol_year = g_year,
                                          bopdishonesty:end_sequence = g_end_sequence, generic
                end
            else
                begin
                access bopdishonesty, set bopdishonesty:policy_no = g_policy_no,
                                          bopdishonesty:pol_year = g_year,
                                          bopdishonesty:end_sequence = g_end_sequence,
                                          bopdishonesty:prem_no = sfpend:prem_no,
                                          bopdishonesty:build_no = sfpend:build_no, generic
                end

            L_END_PREMIUM1 = 0
            If SFSLINE_ALIAS:OPTION = "P" and
               sfscompany:boiler_rating one of 2, 4 Then
                Begin
                If bopDISHONESTY:LIMIT > BPSDEFAULT:EMPLOYEE_DISHONESTY Then
                    Begin
                    If bopDISHONESTY:LIMIT = SFSOPTEND:LIMIT[1] Then
                        L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
                    Else
                    If bopDISHONESTY:LIMIT = SFSOPTEND:LIMIT[2] Then
                        L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[2]
                    Else
                    If bopDISHONESTY:LIMIT = SFSOPTEND:LIMIT[5] Then
                        L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[5]
                    Else
                    If bopDISHONESTY:LIMIT = SFSOPTEND:LIMIT[6] Then
                        L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[6]

                    If bopDISHONESTY:NO_EMPLOYEES > 5 Then
                        Begin
                        If bopDISHONESTY:LIMIT = SFSOPTEND:LIMIT[1] Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + ((bopDISHONESTY:NO_EMPLOYEES
                                             - 5) * SFSOPTEND:PREMIUM_1[3]))
                        Else
                        If bopDISHONESTY:LIMIT = SFSOPTEND:LIMIT[2] Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + ((bopDISHONESTY:NO_EMPLOYEES
                                             - 5) * SFSOPTEND:PREMIUM_1[4]))
                        Else
                        If bopDISHONESTY:LIMIT = SFSOPTEND:LIMIT[5] Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + ((bopDISHONESTY:NO_EMPLOYEES
                                             - 5) * SFSOPTEND:PREMIUM_1[7]))
                        Else
                        If bopDISHONESTY:LIMIT = SFSOPTEND:LIMIT[6] Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + ((bopDISHONESTY:NO_EMPLOYEES
                                             - 5) * SFSOPTEND:PREMIUM_1[8]))
                        End
                    End
                End
            Else
                Begin
                if ((bopgeneral:special_enhancement = 1 and
                   bopdishonesty:limit <> l_employee_dishonesty) or
                   bopgeneral:special_enhancement = 0) then
                    begin
                    If bopDISHONESTY:LIMIT = SFSOPTEND:LIMIT[1] Then
                        L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
                    Else
                    If bopDISHONESTY:LIMIT = SFSOPTEND:LIMIT[2] Then
                        L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[2]
                    Else
                    If bopDISHONESTY:LIMIT = SFSOPTEND:LIMIT[5] Then
                        L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[5]
                    Else
                    If bopDISHONESTY:LIMIT = SFSOPTEND:LIMIT[6] Then
                        L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[6]

                    If bopDISHONESTY:NO_EMPLOYEES > 5 Then
                        Begin
                        If bopDISHONESTY:LIMIT = SFSOPTEND:LIMIT[1] Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + ((bopDISHONESTY:NO_EMPLOYEES
                                             - 5) * SFSOPTEND:PREMIUM_1[3]))
                        Else
                        If bopDISHONESTY:LIMIT = SFSOPTEND:LIMIT[2] Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + ((bopDISHONESTY:NO_EMPLOYEES
                                         - 5) * SFSOPTEND:PREMIUM_1[4]))
                        Else
                        If bopDISHONESTY:LIMIT = SFSOPTEND:LIMIT[5] Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + ((bopDISHONESTY:NO_EMPLOYEES
                                         - 5) * SFSOPTEND:PREMIUM_1[7]))
                        Else
                        If bopDISHONESTY:LIMIT = SFSOPTEND:LIMIT[6] Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + ((bopDISHONESTY:NO_EMPLOYEES
                                         - 5) * SFSOPTEND:PREMIUM_1[8]))
                        end
                    End
                End
            End

        If L_CODE = "BU0283" Then
            Begin
            Access bopENDORSE, Set bopENDORSE:policy_NO = bopGENERAL:policy_NO,
                                   bopendorse:pol_year = bopgeneral:poL_year,
                                   bopendorse:end_sequence = bopgeneral:end_sequence,
                                   bopENDORSE:PREM_NO = bopGENERAL:PREM_NO,
                                   bopENDORSE:BUILD_NO = bopGENERAL:BUILD_NO,
                                   bopENDORSE:CODE = sfpEND:CODE, Generic

            If bopENDORSE:LIMIT[1] > 15000 Then
                Begin
                L_END_PREMIUM1 = ((15000 Divide SFSOPTEND:LIMIT[1])
                                 * SFSOPTEND:PREMIUM_1[1])
                L_END_PREMIUM1 = ((((bopENDORSE:LIMIT[1] - 15000) Divide
                                 SFSOPTEND:LIMIT[2]) * SFSOPTEND:PREMIUM_1[2]) +
                                 L_END_PREMIUM1)
                End
            Else
                L_END_PREMIUM1 = ((bopENDORSE:LIMIT[1] Divide SFSOPTEND:LIMIT[1])
                                 * SFSOPTEND:PREMIUM_1[1])
            End

        If L_CODE one of "BU2510" Then
            Begin
            Access bopENDORSE, Set bopENDORSE:policy_NO = bopGENERAL:policy_NO,
                                   bopendorse:pol_year = bopgeneral:poL_year,
                                   bopendorse:end_sequence = bopgeneral:end_sequence, generic

            while bopendorse:policy_no = bopgeneral:policy_no and
                  bopendorse:pol_year = bopgeneral:pol_year and
                  bopendorse:end_sequence = bopgeneral:End_sequence
                begin
                if bopendorse:code = "BU2510" then
                    begin
                    if bopendorse:no_units <= sfsoptend:limit[7] then
                        l_rate = ((100 - sfsoptend:premium_1[7]) divide 100)
                    else
                    if bopendorse:no_units > sfsoptend:limit[7] and
                       bopendorse:no_units <= sfsoptend:limit[8] then
                        l_rate = ((100 - sfsoptend:premium_1[8]) divide 100)
                    else
                    if bopendorse:no_units > sfsoptend:limit[8] and
                       bopendorse:no_units <= sfsoptend:limit[9] then
                        l_rate = ((100 - sfsoptend:premium_1[9]) divide 100)
                    else
                    if bopendorse:no_units > sfsoptend:limit[9] and
                       bopendorse:no_units <= sfsoptend:limit[10] then
                        l_rate = ((100 - sfsoptend:premium_1[10]) divide 100)

                    l_bu2510_mp = "N"
                    Switch(L_LIABILITY_CODE)
                      Case 1 : Begin
                               l_end_premium1 = ((bopENDORSE:no_units *
                                                SFSOPTEND:PREMIUM_1[1]) *
                                                l_rate)
                               if sfsoptend:premium_1[2] <> 0 and
                                  l_end_premium1 <= sfsoptend:premium_1[2] then
                                   begin
                                   l_bu2510_mp = "Y"
                                   l_end_premium1 = sfsoptend:premium_1[2]
                                   end
                               End
                      Case 2 : Begin
                               l_end_premium1 = ((bopENDORSE:no_units *
                                                SFSOPTEND:PREMIUM_1[3]) *
                                                l_rate)
                               if sfsoptend:premium_1[4] <> 0 and
                                  l_end_premium1 <= sfsoptend:premium_1[4] then
                                   begin
                                  l_bu2510_mp = "Y"
                                  l_end_premium1 = sfsoptend:premium_1[4]
                                  end
                               End
                      Case 3 : Begin
                               l_end_premium1 = ((bopENDORSE:no_units *
                                                SFSOPTEND:PREMIUM_1[5]) *
                                                l_rate)
                               if sfsoptend:premium_1[6] <> 0 and
                                  l_end_premium1 <= sfsoptend:premium_1[6] then
                                   begin
                                   l_bu2510_mp = "Y"
                                   l_end_premium1 = sfsoptend:premium_1[6]
                                   end
                               End
                      End

                    if l_bu2510_mp = "N" and
                       bopendorse:experience_schedule[1] <> 0 then
                        l_end_premium1 = (l_end_premium1 *
                                         (1 + (bopendorse:experience_schedule[1] * 0.01)))
                    if l_bu2510_mp = "N" and
                       bopendorse:experience_schedule[2] <> 0 then
                        l_end_premium1 = (l_end_premium1 *
                                         (1 + (bopendorse:experience_schedule[2] * 0.01)))
                    if l_bu2510_mp = "N" and
                       bopendorse:experience_schedule[3] <> 0 then
                        l_end_premium1 = (l_end_premium1 *
                                         (1 + (bopendorse:experience_schedule[3] * 0.01)))
                    if l_bu2510_mp = "N" and
                       bopendorse:experience_schedule[4] <> 0 then
                        l_end_premium1 = (l_end_premium1 *
                                         (1 + (bopendorse:experience_schedule[4] * 0.01)))
                    end

                next bopendorse
                end

            l_bu2510_premium = l_end_premium1
            End

        If L_CODE one of "BU0197" Then
            Begin
            Access bopENDORSE, Set bopENDORSE:policy_NO = bopGENERAL:policy_NO,
                                   bopendorse:pol_year = bopgeneral:pol_year,
                                   bopendorse:end_sequence = bopgeneral:end_sequence,
                                   bopENDORSE:PREM_NO = bopGENERAL:PREM_NO,
                                   bopENDORSE:BUILD_NO = bopGENERAL:BUILD_NO,
                                   bopENDORSE:CODE = sfpEND:CODE, Generic

            if sfscompany:boiler_rating one of 4 then
                begin
                l_rate_factor = 0.01
                l_irpm = (1 + (sfpmaster:irpm * 0.01))
                if l_irpm = 0 then
                    l_irpm = 1
                end
            else
                l_irpm = 1

            l_bu2597_mp = "N"
            Switch(L_LIABILITY_CODE)
              Case 1 : Begin
                       Switch(bopENDORSE:BAR)
                         Case "Y" : L_END_PREMIUM1 = ((bopENDORSE:LIMIT[1]
                                                     Divide SFSOPTEND:LIMIT[1])
                                                     * SFSOPTEND:PREMIUM_1[1] *
                                                     l_irpm)
                         Default  : L_END_PREMIUM1 = ((bopENDORSE:LIMIT[1]
                                                     Divide SFSOPTEND:LIMIT[1])
                                                     * SFSOPTEND:PREMIUM_1[4] *
                                                     l_irpm)
                          End
                       if sfsoptend:premium_1[7] <> 0 and
                          l_end_premium1 < sfsoptend:premium_1[7] then
                           begin
                           l_bu2597_mp = "Y"
                           l_end_premium1 = sfsoptend:premium_1[7]
                           end
                       End
              Case 2 : Begin
                       Switch(bopENDORSE:BAR)
                         Case "Y" : L_END_PREMIUM1 = ((bopENDORSE:LIMIT[1]
                                                     Divide SFSOPTEND:LIMIT[1])
                                                     * SFSOPTEND:PREMIUM_1[2] *
                                                     l_irpm)
                         Default  : L_END_PREMIUM1 = ((bopENDORSE:LIMIT[1]
                                                     Divide SFSOPTEND:LIMIT[1])
                                                     * SFSOPTEND:PREMIUM_1[5] *
                                                     l_irpm)
                          End
                       if sfsoptend:premium_1[8] <> 0 and
                          l_end_premium1 < sfsoptend:premium_1[8] then
                           begin
                           l_bu2597_mp = "Y"
                           l_end_premium1 = sfsoptend:premium_1[8]
                           end
                       End
              Case 3 : Begin
                       Switch(bopENDORSE:BAR)
                         Case "Y" : L_END_PREMIUM1 = ((bopENDORSE:LIMIT[1]
                                                     Divide SFSOPTEND:LIMIT[1])
                                                     * SFSOPTEND:PREMIUM_1[3] *
                                                     l_irpm)
                         Default  : L_END_PREMIUM1 = ((bopENDORSE:LIMIT[1]
                                                     Divide SFSOPTEND:LIMIT[1])
                                                     * SFSOPTEND:PREMIUM_1[6] *
                                                     l_irpm)
                          End
                       if sfsoptend:premium_1[9] <> 0 and
                          l_end_premium1 < sfsoptend:premium_1[9] then
                           begin
                           l_bu2597_mp = "Y"
                           l_end_premium1 = sfsoptend:premium_1[9]
                           end
                       End
              Case 4 : Begin
                       Switch(bopENDORSE:BAR)
                         Case "Y" : L_END_PREMIUM1 = ((bopENDORSE:LIMIT[1]
                                                     Divide SFSOPTEND:LIMIT[7])
                                                     * SFSOPTEND:PREMIUM_1[7] *
                                                     l_irpm)
                         Default  : L_END_PREMIUM1 = ((bopENDORSE:LIMIT[1]
                                                     Divide SFSOPTEND:LIMIT[8])
                                                     * SFSOPTEND:PREMIUM_1[8] *
                                                     l_irpm)
                          End
                       if sfsoptend:premium_1[9] <> 0 and
                          l_end_premium1 < sfsoptend:premium_1[9] then
                           begin
                           l_bu2597_mp = "Y"
                           l_end_premium1 = sfsoptend:premium_1[9]
                           end
                       End
              End

--            if l_bu2597_mp = "Y" then
                l_bu2597_premium = l_end_premium1
            End

        If L_CODE one of "BU2597" Then
            Begin
            Access bopENDORSE, Set bopENDORSE:policy_NO = bopGENERAL:policy_NO,
                                   bopendorse:pol_year = bopgeneral:pol_year,
                                   bopendorse:end_sequence = bopgeneral:end_sequence,
                                   bopENDORSE:PREM_NO = bopGENERAL:PREM_NO,
                                   bopENDORSE:BUILD_NO = bopGENERAL:BUILD_NO,
                                   bopENDORSE:CODE = sfpEND:CODE, Generic

            if sfscompany:boiler_rating one of 4 then
                begin
                l_rate_factor = 0.01
                l_irpm = (1 + (sfpmaster:irpm * 0.01))
                if l_irpm = 0 then
                    l_irpm = 1
                end
            else
                l_irpm = 1

            l_bu2597_mp = "N"
            Switch(L_LIABILITY_CODE)
              Case 1 : Begin
                       l_end_premium1 = ((bopENDORSE:LIMIT[1]
                                        Divide SFSOPTEND:LIMIT[1])
                                        * SFSOPTEND:PREMIUM_1[1] *
                                        l_irpm)
                       if sfsoptend:premium_1[4] <> 0 and
                          l_end_premium1 <= sfsoptend:premium_1[4] then
                           begin
                           l_bu2597_mp = "Y"
                           l_end_premium1 = sfsoptend:premium_1[4]
                           end
                       End
              Case 2 : Begin
                       L_END_PREMIUM1 = ((bopENDORSE:LIMIT[1]
                                        Divide SFSOPTEND:LIMIT[1])
                                        * SFSOPTEND:PREMIUM_1[2] *
                                        l_irpm)
                       if sfsoptend:premium_1[5] <> 0 and
                          l_end_premium1 <= sfsoptend:premium_1[5] then
                           begin
                           l_bu2597_mp = "Y"
                           l_end_premium1 = sfsoptend:premium_1[5]
                           end
                       End
              Case 3 : Begin
                       L_END_PREMIUM1 = ((bopENDORSE:LIMIT[1]
                                        Divide SFSOPTEND:LIMIT[1])
                                        * SFSOPTEND:PREMIUM_1[3] *
                                        l_irpm)
                       if sfsoptend:premium_1[6] <> 0 and
                          l_end_premium1 <= sfsoptend:premium_1[6] then
                           begin
                           l_bu2597_mp = "Y"
                           l_end_premium1 = sfsoptend:premium_1[6]
                           end
                       End
              End

--            if l_bu2597_mp = "Y" then
                l_bu2597_premium = l_bu2597_premium + l_end_premium1
            End

        if l_code = "BU0370" then
            begin
            switch(l_form)
              case 1  : l_end_factor = sfsoptend:premium_1[1]
              default : l_end_factor = sfsoptend:premium_1[2]
              end
            l_end_factor_1 = sfsoptend:premium_1[3]
            end

        if l_code one of "LM0198", "BU0196" then
            begin
            Access bopENDORSE, Set bopENDORSE:policy_NO = bopGENERAL:policy_NO,
                                   bopendorse:pol_year = bopgeneral:poL_year,
                                   bopendorse:end_sequence = bopgeneral:end_sequence,
                                   bopENDORSE:PREM_NO = bopGENERAL:PREM_NO,
                                   bopENDORSE:BUILD_NO = bopGENERAL:BUILD_NO,
                                   bopENDORSE:CODE = sfpEND:CODE, Generic

            Switch(L_LIABILITY_CODE)
              Case 1  : l_end_premium1 = bopendorse:no_units *
                                         sfsoptend:premium_1[1]
              case 2  : l_end_premium1 = bopendorse:no_units *
                                         sfsoptend:premium_1[2]
              default : l_end_premium1 = bopendorse:no_units *
                                         sfsoptend:premium_1[3]
              end
            end

        If L_CODE = "BU0193" Then
            Begin
            if sfpname:company_id = "NWIC" and
               bopgeneral:state = 29 then
                begin
                l_commandline_2 = str(sfpend:policy_no,9) +
                                  str(sfpend:pol_year,4) +
                                  str(sfpend:end_sequence,4) +
                                  str(sfpend:prem_no,4) +
                                  str(sfpend:build_no,4)
                if sfscompany:debug_mode = 1 then
                    proc("cli csbatch bopup11i %s",l_commandline_2)
                else
                    proc("cli csbatch bopup11i %s",l_commandline_2)/noconsole
                end
            else
            begin
            access bopbshop, set bopbshop:policy_no = sfpend:policy_no,
                                 bopbshop:pol_year = sfpend:pol_year,
                                 bopbshop:end_sequence = sfpend:end_sequence,
                                 bopbshop:prem_no = sfpend:prem_no,
                                 bopbshop:build_no = sfpend:build_no, generic

            L_BARBER_PREM_FULL = 0
            L_BARBER_PREM_PART = 0
            L_BEAUTY_PREM_FULL = 0
            L_BEAUTY_PREM_PART = 0
            L_MANICURISTS = 0
            L_BARBER_PREMIUM = 0
            L_BEAUTY_FULL_PREMIUM = 0
            L_BEAUTY_PART_PREMIUM = 0
            L_MANICURISTS_PREMIUM = 0
            Switch(L_LIABILITY_CODE)
              Case 1 : Begin
                       If bopBSHOP:BARBER_FULL_TIME <> 0 Then
                           L_BARBER_PREM_FULL = SFSOPTEND:PREMIUM_1[1]
                       If bopBSHOP:BARBER_FULL_TIME <> 0 Then
                           L_BARBER_PREM_PART = SFSOPTEND:PREMIUM_1[2]
                       If bopBSHOP:BEAUTY_FULL_TIME <> 0 Then
                           L_BEAUTY_PREM_FULL = SFSOPTEND:PREMIUM_1[7]
                       If bopBSHOP:BEAUTY_PART_TIME <> 0 Then
                           L_BEAUTY_PREM_PART = SFSOPTEND:PREMIUM_1[8]
                       End
              Case 2 : Begin
                       If bopBSHOP:BARBER_FULL_TIME <> 0 Then
                           L_BARBER_PREM_FULL = SFSOPTEND:PREMIUM_1[3]
                       If bopBSHOP:BARBER_FULL_TIME <> 0 Then
                           L_BARBER_PREM_PART = SFSOPTEND:PREMIUM_1[4]
                       If bopBSHOP:BEAUTY_FULL_TIME <> 0 Then
                           L_BEAUTY_PREM_FULL = SFSOPTEND:PREMIUM_1[9]
                       If bopBSHOP:BEAUTY_PART_TIME <> 0 Then
                           L_BEAUTY_PREM_PART = SFSOPTEND:PREMIUM_1[10]
                       End
              Case 3 : Begin
                       If bopBSHOP:BARBER_FULL_TIME <> 0 Then
                           L_BARBER_PREM_FULL = SFSOPTEND:PREMIUM_1[5]
                       If bopBSHOP:BARBER_FULL_TIME <> 0 Then
                           L_BARBER_PREM_PART = SFSOPTEND:PREMIUM_1[6]
                       If bopBSHOP:BEAUTY_FULL_TIME <> 0 Then
                           L_BEAUTY_PREM_FULL = SFSOPTEND:PREMIUM_1[11]
                       If bopBSHOP:BEAUTY_PART_TIME <> 0 Then
                           L_BEAUTY_PREM_PART = SFSOPTEND:PREMIUM_1[12]
                       End
              End
            end
            End

        if l_code one of "BU0140" and
           sfscompany:boiler_rating one of 4 then
            begin
            switch(l_liability_code)
              case 1  : l_end_premium1 = sfsoptend:premium_1[1]
              case 2  : l_end_premium1 = sfsoptend:premium_1[2]
              default : l_end_premium1 = sfsoptend:premium_1[3]
              end
            end

        End

    Next SFSOPTEND
    End

    if l_code = "BU0142" then
        begin
        Access bopENDORSE, Set bopENDORSE:policy_no    = bopGENERAL:policy_no,
                               bopendorse:pol_year     = bopgeneral:pol_Year,
                               bopendorse:end_sequence = bopgeneral:end_sequence,
                               bopENDORSE:PREM_NO      = bopGENERAL:PREM_NO,
                               bopENDORSE:BUILD_NO     = bopGENERAL:BUILD_NO,
                               bopENDORSE:CODE         = L_CODE, Generic

        l_per = (((bopendorse:percent[1] -
                l_end_limit) divide
                l_end_limit) +
                1)
        l_update_sfpend_premium = (bopgeneral:building_premium *
                                  (l_end_factor *
                                  l_per))
        end

    if l_code = "BU0231" then
        begin
        l_basic_premium = bopgeneral:building_premium +
                          bopgeneral:property_premium +
                          bopgeneral:property_special
        l_update_sfpend_premium = ((l_basic_premium *
                                  l_end_factor) -
                                  l_basic_premium)
        end

    if l_code one of "FOS176", "FOS181" and
       sfpmaster:total[9] <> 0 then
        begin
        l_commandline_2 = str(bopgeneral:policy_no,9) +
                          str(bopgeneral:pol_year,4) +
                          str(bopgeneral:end_sequence,4) +
                          str(bopgeneral:prem_no,4) +
                          str(bopgeneral:build_no,4)

        if sfscompany:debug_mode = 0 then
            proc("csbatch bopup11g %s",l_commandline_2)/noconsole
        else
            proc("csbatch bopup11g %s",l_commandline_2)

        access sfpmaster, set sfpmaster:policy_no    = g_policy_no,
                              sfpmaster:pol_year     = g_year,
                              sfpmaster:end_sequence = g_end_sequence, generic

        l_epl_extend_premium = sfpmaster:total[10]
        end

    if l_code one of "BU0272" then
        begin
        Access bopENDORSE,
           Set bopENDORSE:policy_NO    = bopGENERAL:policy_NO,
               bopendorse:pol_year     = bopgeneral:poL_year,
               bopendorse:end_sequence = bopgeneral:end_sequence,
               bopENDORSE:PREM_NO      = 0,
               bopENDORSE:BUILD_NO     = 0,
               bopENDORSE:CODE         = sfpEND:CODE, Generic

        l_update_sfpend_premium = bopendorse:premium
        if bopendorse:premium = 0 then
            begin
            Access bopENDORSE,
               Set bopENDORSE:policy_NO    = bopGENERAL:policy_NO,
                   bopendorse:pol_year     = bopgeneral:poL_year,
                   bopendorse:end_sequence = bopgeneral:end_sequence,
                   bopENDORSE:PREM_NO      = bopGENERAL:PREM_NO,
                   bopENDORSE:BUILD_NO     = bopGENERAL:BUILD_NO,
                   bopENDORSE:CODE         = sfpEND:CODE, Generic

            l_update_sfpend_premium = bopendorse:premium
            end
        end

    if l_code one of "BU5015", "BU5016" and
       sfscompany:boiler_rating = 1 then
        begin
        access bpsrate, set bpsrate:company_id = bopgeneral:company_id,
                            bpsrate:state = bopgeneral:state,
                            bpsrate:line_of_business = bopgeneral:line_of_business, generic

        access bopgeneral_alias, set bopgeneral_alias:policy_no = bopgeneral:policy_no,
                                     bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                     bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                     bopgeneral_alias:prem_no = bopgeneral:prem_no,
                                     bopgeneral_alias:build_no = bopgeneral:build_no, generic

        l_weather_factor = 1.00
        while bpsrate:company_id = bopgeneral:company_id and
              bpsrate:state = bopgeneral:state and
              bpsrate:line_of_business = bopgeneral:line_of_business
            begin
            if sfpname:eff_date >= bpsrate:eff_date then
                begin
                if bopgeneral:weather_related = 1 then
                    l_weather_factor = bpsrate:weather_related_factor[1]
                else
                if bopgeneral:weather_related = 2 then
                    l_weather_factor = bpsrate:weather_related_factor[2]
                else
                    l_weather_factor = 1.00
                end

            next bpsrate
            end

        l_update_sfpend_premium = ((bopgeneral_alias:bop_premium *
                                  l_weather_factor) -
                                  bopgeneral_alias:bop_premium)
        end

    if l_code one of "BU1526" then
      {
        access bpsemployee,
           set bpsemployee:company_id       = boPgeneral:company_id,
               bpsemployee:state            = l_state,
               bpsemployee:line_of_business = boPgeneral:line_of_BUSINESS, GENERIC

        while bpsemployee:company_id       = boPgeneral:company_id and
              bpsemployee:state            = l_state and
              bpsemployee:line_of_business = boPgeneral:line_of_BUSINESS
          {
            If SFPNAME:EFF_DATE >=  bpsemployee:rate_DATE Then
              {
                l_bu1526_eff_date = bpsemployee:rate_date
              }
            next bpsemployee
          }

        access bpsemployee,
           set bpsemployee:company_id       = boPgeneral:company_id,
               bpsemployee:state            = l_state,
               bpsemployee:line_of_business = boPgeneral:line_of_BUSINESS,
               bpsemployee:rate_date        = l_bu1526_eff_date

        Access bopENDORSE,
           Set bopENDORSE:policy_NO    = bopGENERAL:policy_NO,
               bopendorse:pol_year     = bopgeneral:poL_year,
               bopendorse:end_sequence = bopgeneral:end_sequence,
               bopENDORSE:PREM_NO      = bopGENERAL:PREM_NO,
               bopENDORSE:BUILD_NO     = bopGENERAL:BUILD_NO,
               bopENDORSE:CODE         = sfpEND:CODE, Generic

       switch (boPendorse:limit[1])
         case 25000   : l_row = 1
         case 50000   : l_row = 2
         case 100000  : l_row = 3
         case 500000  : l_row = 4
         case 1000000 : l_row = 5
         default : l_row = 1
       end

         switch (boPendorse:deductible[1])
           case 1000 : l_bu1526_factor = bpsemployee:DEDUCTIBLE_FACTOR[1]
           case 2500 : l_bu1526_factor = bpsemployee:DEDUCTIBLE_FACTOR[2]
           case 5000 : l_bu1526_factor = bpsemployee:DEDUCTIBLE_FACTOR[3]
           case 10000 : l_bu1526_factor = bpsemployee:DEDUCTIBLE_FACTOR[4]
           default :  l_bu1526_factor = bpsemployee:DEDUCTIBLE_FACTOR[1]
         end

      if boPendorse:NO_EMPLOYEES <= 25 then
        {
          l_col = 1
        }
      else
        if bopendorse:NO_EMPLOYEES <= 100 and
           bopendorse:no_employees >=  26 then
          {
            l_col = 2
          }
        else  --over 100
          {
            l_col = 3
          }

      --the l_row - 1 is the the limit you will be put in the correct math to
      --get to the correct array
      --the * 3 is becak   sue they are 3 separate band for the range of employees
      --+ l_col means it will add 1, 2, 3 to the result of the mutiplication
      --factor is * BY the correct factor to reduse the pemium

      L_UPDATE_SFPEND_PREMIUM = bpsemployee:charge[((l_row - 1) * 3) + l_col] * l_bu1526_factor

      if l_update_sfpend_premium < bpsemployee:MINIMUM_PREMIUM then
        {
          l_update_sfpend_premium = bpsemployee:MINIMUM_PREMIUM
        }
   }

    if l_code = "BU0380" then
        begin
        l_state = bopgeneral:state
        l_eq_construction = bopendorse:construction
        access bpsearthquake, set bpsearthquake:company_id = bopgeneral:company_id,
                                  bpsearthquake:state = l_state,
                                  bpsearthquake:line_of_business = bopgeneral:line_of_business,
                                  bpsearthquake:construction = l_eq_construction, generic

        while bpsearthquake:company_id = bopgeneral:company_id and
              bpsearthquake:state = l_state and
              bpsearthquake:line_of_business = bopgeneral:line_of_business and
              bpsearthquake:construction = l_eq_construction
                begin
                l_eq_building_rate = bpsearthquake:building_rate
                switch(bopendorse:rate_class)
                  case 1  : l_eq_contents_rate = bpsearthquake:contents_rate[1]
                  case 2  : l_eq_contents_rate = bpsearthquake:contents_rate[2]
                  default : l_eq_contents_rate = bpsearthquake:contents_rate[3]
                  end
                l_deductible_rate = bpsearthquake:deductible_rate
                l_deductible_per = bpsearthquake:deductible_per
                l_per = bpsearthquake:per
                l_eq_deductible = bpsearthquake:deductible

                next bpsearthquake
                end

        access bopendorse, set bopendorse:policy_no = bopgeneral:policy_no,
                               bopendorse:pol_year = bopgeneral:poL_year,
                               bopendorse:end_sequence = bopgeneral:end_sequence,
                               bopendorse:prem_no = bopgeneral:prem_no,
                               bopendorse:build_no = bopgeneral:build_no,
                               bopendorse:code = l_code, generic

        if bopendorse:deductible[1] > l_eq_deductible then
            begin
            l_eq_deduct_rate   = ((100 - ((((bopendorse:deductible[1] -
                                 l_eq_deductible) divide l_deductible_per) *
                                 l_deductible_rate) * 100)) divide 100)
            l_eq_building_rate = l_eq_building_rate * l_eq_deduct_rate
            l_eq_contents_rate = l_eq_contents_rate * l_eq_deduct_rate
            end

        if bopgeneral:building_limit <> 0 then
            l_eq_building_premium = ((bopgeneral:building_limit divide l_per) *
                                    l_eq_building_rate)
        if bopgeneral:property_limit <> 0 then
            l_eq_contents_premium = ((bopgeneral:property_limit divide l_per) *
                                    l_eq_contents_rate)

        change bopendorse
            begin
            bopendorse:eq_deduct_rate = l_eq_deduct_rate
            bopendorse:eq_premium[1]  = l_eq_building_premium
            bopendorse:eq_premium[2]  = l_eq_contents_premium
            bopendorse:premium        = l_eq_building_premium +
                                        l_eq_contents_premium
            end

        access bopendorse, set bopendorse:policy_no = bopgeneral:policy_no,
                               bopendorse:pol_year = bopgeneral:poL_year,
                               bopendorse:end_sequence = bopgeneral:end_sequence,
                               bopendorse:prem_no = bopgeneral:prem_no,
                               bopendorse:build_no = bopgeneral:build_no,
                               bopendorse:code = l_code, generic

        if bopendorse:premium <> 0 then
            begin
            l_update_sfpend_premium = bopendorse:premium
            end
        else
            begin
            l_update_sfpend_premium = 0
            while bopendorse:policy_no = g_policy_no and
                  bopendorse:pol_Year = g_year and
                  bopendorse:end_sequence = g_End_sequence and
                  bopendorse:prem_no = g_prem_no and
                  bopendorse:build_no = g_build_no
                    begin
                    if bopendorse:code = l_code then
                        begin
                        l_update_sfpend_premium = bopendorse:eq_premium[1] +
                                                  bopendorse:eq_premium[2] +
                                                  l_update_sfpend_premium
                        end

                    next bopendorse
                    end
            end

        end

    If L_CODE = "MIM121" then
        Begin
        Access bopENDORSE, Set bopENDORSE:policy_NO = bopGENERAL:policy_NO,
                               bopendorse:pol_year = bopgeneral:poL_year,
                               bopendorse:end_sequence = bopgeneral:end_sequence,
                               bopENDORSE:PREM_NO = bopGENERAL:PREM_NO,
                               bopENDORSE:BUILD_NO = bopGENERAL:BUILD_NO,
                               bopENDORSE:CODE = L_CODE, Generic

        L_UPDATE_SFPEND_PREMIUM = bopendorse:premium +
                                  bopendorse:eq_premium[1]
        End

    If L_CODE = "MIM013" Or
       L_CODE = "MIM110" Or
       L_CODE = "MIM112" Or
       L_CODE = "MIM115" Or
       L_CODE = "MIM113" Or
       L_CODE = "MIM114" Or
       L_CODE = "MIM116" Then
        Begin
        Access bopENDORSE, Set bopENDORSE:policy_NO = bopGENERAL:policy_NO,
                               bopendorse:pol_year = bopgeneral:poL_year,
                               bopendorse:end_sequence = bopgeneral:end_sequence,
                               bopENDORSE:PREM_NO = bopGENERAL:PREM_NO,
                               bopENDORSE:BUILD_NO = bopGENERAL:BUILD_NO,
                               bopENDORSE:CODE = L_CODE, Generic

        L_UPDATE_SFPEND_PREMIUM = ((bopENDORSE:LIMIT[1] Divide 100) *
                                  bopENDORSE:RATE[1])
        End

    If L_CODE = "MCL602" then
        Begin
        Access bopENDORSE, Set bopENDORSE:policy_NO = bopGENERAL:policy_NO,
                               bopendorse:pol_year = bopgeneral:poL_year,
                               bopendorse:end_sequence = bopgeneral:end_sequence,
                               bopENDORSE:PREM_NO = bopGENERAL:PREM_NO,
                               bopENDORSE:BUILD_NO = bopGENERAL:BUILD_NO,
                               bopENDORSE:CODE = L_CODE, Generic

        L_UPDATE_SFPEND_PREMIUM = bopendorse:premium
        End

    If L_CODE = "MIM103" Then
        Begin
        L_UPDATE_SFPEND_PREMIUM = 0
        Access bopENDORSE, Set bopENDORSE:policy_NO = bopGENERAL:policy_NO,
                               bopendorse:pol_year = bopgeneral:poL_year,
                               bopendorse:end_sequence = bopgeneral:end_sequence,
                               bopENDORSE:PREM_NO = bopGENERAL:PREM_NO,
                               bopENDORSE:BUILD_NO = bopGENERAL:BUILD_NO,
                               bopENDORSE:CODE = L_CODE, Generic

        L_UPDATE_SFPEND_PREMIUM = (((bopENDORSE:OCCURRENCE +
                                  bopENDORSE:AGGREGATE) Divide 100) *
                                  bopENDORSE:RATE[1])
        End

    If L_CODE = "MIM011" Then
        Begin
        L_UPDATE_SFPEND_PREMIUM = 0
        Access bopENDORSE, Set bopENDORSE:policy_NO = bopGENERAL:policy_NO,
                               bopendorse:pol_year = bopgeneral:poL_year,
                               bopendorse:end_sequence = bopgeneral:end_sequence,
                               bopENDORSE:PREM_NO = bopGENERAL:PREM_NO,
                               bopENDORSE:BUILD_NO = bopGENERAL:BUILD_NO,
                               bopENDORSE:CODE = L_CODE, Generic

        If bopENDORSE:LIMIT[1] <> 0 Then
            L_UPDATE_SFPEND_PREMIUM = ((bopENDORSE:LIMIT[1] Divide 100) *
                                      bopENDORSE:RATE[1])
        If bopENDORSE:LIMIT[2] <> 0 Then
            L_UPDATE_SFPEND_PREMIUM = (L_UPDATE_SFPEND_PREMIUM +
                                      ((bopENDORSE:LIMIT[2] Divide 100) *
                                      bopENDORSE:RATE[1]))
        If bopENDORSE:LIMIT[3] <> 0 Then
            L_UPDATE_SFPEND_PREMIUM = (L_UPDATE_SFPEND_PREMIUM +
                                      ((bopENDORSE:LIMIT[3] Divide 100) *
                                      bopENDORSE:RATE[2]))
        If bopENDORSE:LIMIT[4] <> 0 Then
            L_UPDATE_SFPEND_PREMIUM = (L_UPDATE_SFPEND_PREMIUM +
                                      ((bopENDORSE:LIMIT[4] Divide 100) *
                                      bopENDORSE:RATE[3]))
        If bopENDORSE:LIMIT[5] <> 0 Then
            L_UPDATE_SFPEND_PREMIUM = (L_UPDATE_SFPEND_PREMIUM +
                                      ((bopENDORSE:LIMIT[5] Divide 100) *
                                      bopENDORSE:RATE[4]))
        If bopENDORSE:LIMIT[6] <> 0 Then
            L_UPDATE_SFPEND_PREMIUM = (L_UPDATE_SFPEND_PREMIUM +
                                      ((bopENDORSE:LIMIT[6] Divide 100) *
                                      bopENDORSE:RATE[5]))
        If bopENDORSE:LIMIT[7] <> 0 Then
            L_UPDATE_SFPEND_PREMIUM = (L_UPDATE_SFPEND_PREMIUM +
                                      ((bopENDORSE:LIMIT[7] Divide 100) *
                                      bopENDORSE:RATE[6]))
        If bopENDORSE:LIMIT[8] <> 0 Then
            L_UPDATE_SFPEND_PREMIUM = (L_UPDATE_SFPEND_PREMIUM +
                                      ((bopENDORSE:LIMIT[8] Divide 100) *
                                      bopENDORSE:RATE[7]))
        If bopENDORSE:LIMIT[9] <> 0 Then
            L_UPDATE_SFPEND_PREMIUM = (L_UPDATE_SFPEND_PREMIUM +
                                      ((bopENDORSE:LIMIT[9] Divide 100) *
                                      bopENDORSE:RATE[8]))
        End

    If L_CODE = "BU0265" Then
        Begin
        L_EFF_DATE_1 = bopENDORSE:EFF_DATE
        L_EXP_DATE = bopENDORSE:EXP_DATE
        L_DAYS = L_EXP_DATE - L_EFF_DATE_1
        L_UPDATE_SFPEND_PREMIUM = ((bopGENERAL:BUILDING_PREMIUM *
                                  (L_DAYS Divide 365) *
                                  L_END_FACTOR))
        End

    If L_CODE one of "BU0194", "BU0192", "BU0191", "LM0198", "BU5004", "FBU0403", "CSB0403" Then
        Begin
        L_UPDATE_SFPEND_PREMIUM = L_END_PREMIUM1
        End

    If L_CODE = "BU0601" Or
       L_CODE = "BU0602" Or
       L_CODE = "BU0603" Or
       L_CODE = "BU0604" Or
       L_CODE = "BU0605" Or
       L_CODE = "BU0606" Or
       L_CODE = "BU0607" Or
       L_CODE = "BU0608" Or
       L_CODE = "BU0609" Or
       l_code = "BU0610" or
       L_CODE = "BU0616" or
       l_code = "MCP140" or
       l_code = "MCP141" or
       l_code = "BU2597" or
       l_code = "BU2510" or
       l_code = "BU5008" or
       l_code = "BU0282" or
       l_code = "BU2582" or
       l_code = "BU0420" or
       l_code = "BU0316" or
       l_code = "BU0335" or
       l_code = "BU0338" or
       l_code = "BU0339" or
       l_code = "BU0302" Then
        Begin
        L_UPDATE_SFPEND_PREMIUM = L_END_PREMIUM1
        End

    If L_CODE = "BU5008" Then
        L_UPDATE_SFPEND_PREMIUM = L_END_PREMIUM1

    If L_CODE one of "BU0282", "BU2582" Then
        Begin
        L_UPDATE_SFPEND_PREMIUM = L_END_PREMIUM1
        End

    If L_CODE = "MCL189" Then
        Begin
        Access bopENDORSE, Set bopENDORSE:policy_NO = bopGENERAL:policy_NO,
                               bopendorse:pol_year = bopgeneral:poL_year,
                               bopendorse:end_sequence = bopgeneral:end_sequence,
                               bopENDORSE:PREM_NO = bopGENERAL:PREM_NO,
                               bopENDORSE:BUILD_NO = bopGENERAL:BUILD_NO,
                               bopENDORSE:CODE = L_CODE, Generic

        If bopENDORSE:BUYBACK_OPTION = "Y" Then
            Begin
            L_BUYBACK = "Y"
            End
        End

    If L_CODE one of "BU0291", "MCP105" Then
        Begin
        Access bopENDORSE, Set bopENDORSE:policy_NO = bopGENERAL:policy_NO,
                               bopendorse:pol_year = bopgeneral:poL_year,
                               bopendorse:end_sequence = bopgeneral:end_sequence,
                               bopENDORSE:PREM_NO = bopGENERAL:PREM_NO,
                               bopENDORSE:BUILD_NO = bopGENERAL:BUILD_NO,
                               bopENDORSE:CODE = L_CODE, Generic

        if bopendorse:policy_no <> bopgeneral:policy_no or
           bopendorse:pol_year <> bopgeneral:pol_year or
           bopendorse:end_sequence <> bopgeneral:end_sequence or
           bopendorse:prem_no <> bopgeneral:prem_no or
           bopendorse:build_no <> bopgeneral:build_no or
           bopendorse:code <> l_code then
            begin
            Access bopENDORSE, Set bopENDORSE:policy_NO = bopGENERAL:policy_NO,
                                   bopendorse:pol_year = bopgeneral:poL_year,
                                   bopendorse:end_sequence = bopgeneral:end_sequence,
                                   bopENDORSE:PREM_NO = 0,
                                   bopENDORSE:BUILD_NO = 0,
                                   bopENDORSE:CODE = L_CODE, Generic
            end

        if sfscompany:boiler_rating = 1 then
            L_UPDATE_SFPEND_PREMIUM = ((bopENDORSE:LIMIT[1]
                                       Divide L_END_LIMIT)
                                       * L_END_PREMIUM1)
        else
            L_UPDATE_SFPEND_PREMIUM = (((bopENDORSE:LIMIT[1] - bpsdefault:ar_limit)
                                       Divide L_END_LIMIT)
                                       * L_END_PREMIUM1)
        End

    if l_code = "IM7006" then
        Begin
        Access bopENDORSE, Set bopENDORSE:policy_NO = bopGENERAL:policy_NO,
                               bopendorse:pol_year = bopgeneral:poL_year,
                               bopendorse:end_sequence = bopgeneral:end_sequence,
                               bopENDORSE:PREM_NO = bopGENERAL:PREM_NO,
                               bopENDORSE:BUILD_NO = bopGENERAL:BUILD_NO,
                               bopENDORSE:CODE = L_CODE, Generic

        l_update_sfpend_premium = 0
        while bopendorse:policy_no = bopgeneral:policy_no and
              bopendorse:pol_year = bopgeneral:pol_year and
              bopendorse:end_sequence = bopgeneral:end_sequence and
              bopendorse:prem_no = bopgeneral:prem_no and
              bopendorse:build_no = bopgeneral:build_no and
              bopendorse:code = l_code
                begin
                L_UPDATE_SFPEND_PREMIUM = bopENDORSE:MISC_PREMIUM +
                                          l_update_sfpend_premium
                next bopendorse
                end
        End

/*    if l_code = "BU1525" then
        Begin
        Access bopENDORSE, Set bopENDORSE:policy_NO = bopGENERAL:policy_NO,
                               bopendorse:pol_year = bopgeneral:poL_year,
                               bopendorse:end_sequence = bopgeneral:end_sequence,
                               bopENDORSE:PREM_NO = bopGENERAL:PREM_NO,
                               bopENDORSE:BUILD_NO = bopGENERAL:BUILD_NO,
                               bopENDORSE:CODE = L_CODE, Generic

        l_company_id       = sfpname:company_id
        l_state            = bopgeneral:state
        l_line_of_business = bopgeneral:line_of_business
        l_employee_limit   = bopendorse:limit[1]
        l_deductible       = bopendorse:deductible[1]
        l_no_employees     = bopendorse:no_employees
        l_eff_date         = sfpname:eff_date

        include "bpsemployeerates.pro"

        l_update_sfpend_premium = l_employee_charge *
                                  l_employee_deduct_factor
        if l_update_sfpend_premium < l_employee_minimum then
            l_update_sfpend_premium = l_employee_minimum
        end
*/
    if l_code one of "BU1510", "MGK011" then
        begin
        l_commandline_2 = str(sfpend:policy_no,9) +
                          str(sfpend:pol_year,4) +
                          str(sfpend:end_sequence,4) +
                          str(sfpend:prem_no,4) +
                          str(sfpend:build_no,4)
        if sfscompany:debug_mode = 1 then
            proc("cli csbatch bopup11j %s",l_commandline_2)
        else
            proc("cli csbatch bopup11j %s",l_commandline_2)/noconsole
        access sfpend_alias, set sfpend_alias:policy_no = g_policy_no,
                                 sfpend_alias:pol_year = g_year,
                                 sfpend_alias:end_sequence = g_end_sequence, generic

        while sfpend_alias:policy_no = g_policY_no and
              sfpend_alias:pol_year = g_year and
              sfpend_alias:end_sequence = g_end_sequence
              begin
              if sfpend_alias:code one of "BU1510", "MGK011" then
                  l_update_sfpend_premium = sfpend_alias:premium

              next sfpend_alias
              end

/*        access bopgaragekeepers, set bopgaragekeepers:policy_no = bopgeneral:policy_no,
                                     bopgaragekeepers:pol_year = bopgeneral:poL_year,
                                     bopgaragekeepers:end_sequence = bopgeneral:end_sequence,
                                     bopgaragekeepers:prem_no  = bopgeneral:prem_no,
                                     bopgaragekeepers:build_no = bopgeneral:build_no, generic

        l_company_id       = bopgeneral:company_id
        l_state            = bopgeneral:state
        l_line_of_business = bopgeneral:line_of_business
        l_limit_1          = bopgaragekeepers:limit
        l_form             = bopgaragekeepers:form
        l_rate_form        = bopgaragekeepers:rate_form
        l_eff_date         = sfpname:eff_date

        include "bpsgaragerates.pro"

        l_type             = 1
        l_deductible       = bopgaragekeepers:comp_deductible

        include "bpsgaragededuct.pro"

        l_update_sfpend_premium = l_garagekeepers_comp_premium *
                                  l_garagekeepers_deduct_factor

        change bopgaragekeepers
            begin
            bopgaragekeepers:comp_premium = l_garagekeepers_comp_premium *
                                            l_garagekeepers_deduct_factor
            end

        l_type             = 2
        l_deductible       = bopgaragekeepers:coll_deductible

        include "bpsgaragededuct.pro"

        l_update_sfpend_premium = (l_update_sfpend_premium +
                                  (l_garagekeepers_coll_premium *
                                  l_garagekeepers_deduct_factor))

        change bopgaragekeepers
            begin
            bopgaragekeepers:coll_premium = l_garagekeepers_coll_premium *
                                            l_garagekeepers_deduct_factor
            end*/

        end

    If L_CODE = "QP1" Then
        Begin
        L_PRINTERS_ERROR = L_END_PREMIUM1
        End

    If L_CODE one of "BU0370", "SIR003" Then
        Begin
        -- kept the same local variable name as with peak season rating
        -- did not want to creat another local variable
        If SFSLINE_ALIAS:OPTION = "P" and
           sfscompany:boiler_rating <> 4 Then
            Begin
            If SFSCOMPANY:COMPUTER_RATING = 1 Then
                Begin
                L_PEAK_FACTOR = L_PROPERTY_RATE * L_PROPERTY_ADJUSTMENTS
                L_UPDATE_SFPEND_PREMIUM = (L_PEAK_FACTOR * ((bopCOMPUTER:LIMIT[1] +
                                          bopCOMPUTER:LIMIT[2]) Divide L_END_LIMIT))
                End
            If SFSCOMPANY:COMPUTER_RATING = 2 Then
                Begin
                    if bopgeneral:special_enhancement = 1 then
                        begin
                        l_update_sfpend_premium = 0
                        l_computer_limit_1 = bopgeneral:property_limit * (l_computer_hardware_percent divide 100)
                        if l_computer_hardware > l_computer_limit_1 then
                            l_Computer_limit = l_computer_hardware
                        else
                            l_computer_limit = l_computer_limit_1
                        l_update_sfpend_premium = (((bopcomputer:limit[1] -
                                                  l_computer_limit) divide
                                                  l_end_limit) *
                                                  l_end_premium1)
                        l_computer_limit_1 = bopgeneral:property_limit * (l_computer_software_percent divide 100)
                        if l_computer_software > l_computer_limit_1 then
                            l_computer_limit = l_computer_software
                        else
                            l_computer_limit = l_computer_limit_1
                        L_UPDATE_SFPEND_PREMIUM = (l_update_sfpend_premium +
                                                  (((bopCOMPUTER:LIMIT[3] -
                                                  l_computer_limit) Divide
                                                  L_END_LIMIT) *
                                                  L_END_PREMIUM1))
                        l_computer_limit_1 = bopgeneral:property_limit * (l_extra_expense_percent divide 100)
                        if l_extra_expense > l_computer_limit_1 then
                            l_computer_limit = l_extra_expense
                        else
                            l_computer_limit = l_computer_limit_1
                        L_UPDATE_SFPEND_PREMIUM = (l_update_sfpend_premium +
                                                  (((bopCOMPUTER:LIMIT[2] -
                                                  l_computer_limit) Divide
                                                  L_END_LIMIT) *
                                                  L_END_PREMIUM1))
                        end
                    else
                        begin
                        l_update_sfpend_premium = 0
                        l_computer_limit_1 = bopgeneral:property_limit * (bpsdefault1:computer_hardware_percent divide 100)
                        if bpsdefault1:computer_hardware_limit > l_computer_limit_1 then
                            l_Computer_limit = bpsdefault1:computer_hardware_limit
                        else
                            l_computer_limit = l_computer_limit_1
                        l_update_sfpend_premium = (((bopcomputer:limit[1] -
                                                  l_computer_limit) divide
                                                  l_end_limit) *
                                                  l_end_premium1)
                        l_computer_limit_1 = bopgeneral:property_limit * (bpsdefault1:computer_software_percent divide 100)
                        if bpsdefault1:computer_software_limit > l_computer_limit_1 then
                            l_computer_limit = bpsdefault1:computer_software_limit
                        else
                            l_computer_limit = l_computer_limit_1
                        if bopcomputer:limit[3] <> 0 then
                            begin
                            L_UPDATE_SFPEND_PREMIUM = (l_update_sfpend_premium +
                                                      (((bopCOMPUTER:LIMIT[3] -
                                                      l_computer_limit) Divide
                                                      L_END_LIMIT) *
                                                      L_END_PREMIUM1))
                            end
                        l_computer_limit_1 = bopgeneral:property_limit * (bpsdefault1:extra_expense_percent divide 100)
                        if bpsdefault1:extra_expense_limit > l_computer_limit_1 then
                            l_computer_limit = bpsdefault1:extra_expense_limit
                        else
                            l_computer_limit = l_computer_limit_1
                        if bopcomputer:limit[2] <> 0 then
                            begin
                            L_UPDATE_SFPEND_PREMIUM = (l_update_sfpend_premium +
                                                      (((bopCOMPUTER:LIMIT[2] -
                                                      l_computer_limit) Divide
                                                      L_END_LIMIT) *
                                                      L_END_PREMIUM1))
                            end
                        end
                End
            L_EDP_LIMIT = bopCOMPUTER:LIMIT[1] + bopCOMPUTER:LIMIT[2]
            End
        Else
        If SFSLINE_ALIAS:OPTION = "P" and
           sfscompany:boiler_rating = 4 Then
            Begin
            L_COMPUTER_LIMIT = BPSDEFAULT:COMPUTER_LIMIT

            If bopCOMPUTER:LIMIT[1] > L_COMPUTER_LIMIT Then
                Begin
                If SFSCOMPANY:COMPUTER_RATING = 2 Then
                    Begin
                    l_limit = bopcomputer:limit[1] - l_computer_limit
                    L_UPDATE_SFPEND_PREMIUM = ((l_limit Divide
                                              L_END_LIMIT) * L_END_PREMIUM1)
                    End
                L_EDP_LIMIT = bopCOMPUTER:LIMIT[1] + bopCOMPUTER:LIMIT[2]
                End
            End
        else
            Begin
            If SFSCOMPANY:COMPUTER_RATING = 1 Then -- salem
                Begin
                if bopgeneral:property_limit = 0 then
                    do calc_property_prem
                L_PEAK_FACTOR = L_PROPERTY_RATE * L_PROPERTY_ADJUSTMENTS
                L_UPDATE_SFPEND_PREMIUM = (L_PEAK_FACTOR * ((bopCOMPUTER:LIMIT[1] +
                                          bopCOMPUTER:LIMIT[2]) Divide L_END_LIMIT))
                End
            If SFSCOMPANY:COMPUTER_RATING = 2 and
               sfscompany:boiler_rating <> 4 Then
                Begin
                if (((bopcomputer:limit[1] + bopcomputer:limit[3]) <> l_computer_limit_1 and
                   bopgeneral:special_enhancement = 1) or
                   bopgeneral:special_enhancement = 0) then
                    begin
                    l_update_sfpend_premium = 0
                    if bopgeneral:special_enhancement = 1 then
                        begin
                        l_computer_limit_1 = bopgeneral:property_limit * (l_computer_hardware_percent divide 100)
                        if l_computer_hardware > l_computer_limit_1 then
                            l_Computer_limit = l_computer_hardware
                        else
                            l_computer_limit = l_computer_limit_1
                        l_update_sfpend_premium = (((bopcomputer:limit[1] -
                                                  l_computer_limit) divide
                                                  l_end_limit) *
                                                  l_end_premium1)
                        l_computer_limit_1 = bopgeneral:property_limit * (l_computer_software_percent divide 100)
                        if l_computer_software > l_computer_limit_1 then
                            l_computer_limit = l_computer_software
                        else
                            l_computer_limit = l_computer_limit_1
                        L_UPDATE_SFPEND_PREMIUM = (l_update_sfpend_premium +
                                                  (((bopCOMPUTER:LIMIT[3] -
                                                  l_computer_limit) Divide
                                                  L_END_LIMIT) *
                                                  L_END_PREMIUM1))

                        L_UPDATE_SFPEND_PREMIUM = (l_update_sfpend_premium +
                                                  (((bopCOMPUTER:LIMIT[2] -
                                                  l_computer_limit_2) Divide
                                                  L_END_LIMIT) *
                                                  L_END_PREMIUM1))
                        end
                    else
                        L_UPDATE_SFPEND_PREMIUM = (((bopCOMPUTER:LIMIT[1] +
                                                  bopcomputer:limit[2] +
                                                  bopCOMPUTER:LIMIT[3]) Divide
                                                  L_END_LIMIT) * L_END_PREMIUM1)
                    end

                End
            If SFSCOMPANY:COMPUTER_RATING = 2 and
               sfscompany:boiler_rating = 4 Then
                Begin
                L_UPDATE_SFPEND_PREMIUM = ((bopCOMPUTER:LIMIT[1] Divide
                                          L_END_LIMIT) * L_END_PREMIUM1)
                End
            if sfscompany:computer_rating = 3 then
                begin
                access bopcomputer, set bopcomputer:policy_no = g_policy_no,
                                        bopcomputer:pol_year  = g_year,
                                        bopcomputer:end_sequence = g_end_sequence,
                                        bopcomputer:prem_no = sfpend:prem_no,
                                        bopcomputer:build_no = sfpend:build_no, generic

                l_peak_factor = l_property_rate_1 + l_end_factor
                L_UPDATE_SFPEND_PREMIUM = (L_PEAK_FACTOR *
                                          (bopCOMPUTER:LIMIT[1]
                                          Divide L_END_LIMIT))
                if bopcomputer:limit[2] <> 0 then
                    begin
                    if l_building_Rate = 0 then
                        do calc_building_prem
                    l_peak_factor = l_building_rate * l_end_factor_1
                    l_update_sfpend_premium = (l_update_sfpend_premium +
                                              (l_peak_factor *
                                              (bopcomputer:limit[2]
                                              divide l_end_limit)))
                    end
                End

            L_EDP_LIMIT = bopCOMPUTER:LIMIT[1] + bopCOMPUTER:LIMIT[2]
            End
        End

    If L_CODE = "BU0197" Then
        Begin
        L_UPDATE_SFPEND_PREMIUM = L_END_PREMIUM1
        End

    If L_CODE = "BU0375" Then
        Begin
        If SFSLINE_ALIAS:OPTION = "P" and
           sfscompany:boiler_rating <> 4 Then
            Begin
            if bopgeneral:special_enhancement = 1 then
                begin
                l_indoor_glass_limit = bopgeneral:property_limit * (l_indoor_glass_percent divide 100)
                if l_special_glass_limit_1 > l_indoor_glass_limit then
                    l_indoor_glass_limit = l_special_glass_limit_1
                end
            else
                begin
                L_INDOOR_GLASS_LIMIT = (bopGENERAL:PROPERTY_LIMIT *
                                       (BPSDEFAULT:INDOOR_GLASS_PERCENT Divide 100))
                If L_INDOOR_GLASS_LIMIT < BPSDEFAULT:INDOOR_GLASS_LIMIT Then
                    L_INDOOR_GLASS_LIMIT = BPSDEFAULT:INDOOR_GLASS_LIMIT
                end

            If bopGLASS:LIMIT <> L_INDOOR_GLASS_LIMIT  Then
                L_UPDATE_SFPEND_PREMIUM = (((bopGLASS:LIMIT - l_indoor_glass_limit)
                                          Divide L_END_LIMIT) *
                                          L_END_PREMIUM1)
            End
        Else
            Begin
            L_UPDATE_SFPEND_PREMIUM = ((bopGLASS:LIMIT Divide L_END_LIMIT) *
                                      L_END_PREMIUM1)
            End
        End

    If L_CODE = "BU0521" Then
        Begin
        L_UPDATE_SFPEND_PREMIUM = ((bopGENERAL:PROPERTY_SPECIAL *
                                  L_END_FACTOR) * -1)
        End

    If L_CODE = "MCM828" Then
        Begin
        L_UPDATE_SFPEND_PREMIUM = 0
        Access bopUMUIM, Set bopUMUIM:policy_NO = bopGENERAL:policy_NO,
                             bopumuim:pol_year = bopgeneral:poL_year,
                             bopumuim:end_sequence = bopgeneral:end_sequence,
                             bopUMUIM:PREM_NO = bopGENERAL:PREM_NO,
                             bopUMUIM:BUILD_NO = bopGENERAL:BUILD_NO, Generic

        Repeat Begin
            Exit when bopUMUIM:policy_NO <> bopGENERAL:policy_NO Or
                    bopumuim:pol_Year <> bopgeneral:pol_year or
                    bopumuim:end_sequence <> bopgeneral:end_sequence or
                    bopUMUIM:PREM_NO <> bopGENERAL:PREM_NO Or
                    bopUMUIM:BUILD_NO <> bopGENERAL:BUILD_NO


            L_COMPANY_ID = bopgeneral:company_id
            L_LINE_OF_BUSINESS = bopgeneral:line_of_business
            Access BPSUMUIM, Set BPSUMUIM:COMPANY_ID = L_COMPANY_ID,
                                 BPSUMUIM:STATE = bopGENERAL:STATE,
                                 BPSUMUIM:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS,
                                 BPSUMUIM:LIMIT = bopUMUIM:LIMIT, Generic

        If BPSUMUIM:CHARGE <> L_END_PREMIUM1 Then
            Begin
            If bopGENERAL:STATE = 29 Then
                Begin
                Change bopUMUIM
                    Begin
                    bopUMUIM:TOTAL = BPSUMUIM:CHARGE_1
                    End
                L_UPDATE_SFPEND_PREMIUM = L_UPDATE_SFPEND_PREMIUM +
                                          BPSUMUIM:CHARGE_1

                End
            Else
                begin
                Change bopUMUIM
                    Begin
                    bopUMUIM:TOTAL = BPSUMUIM:CHARGE
                    End
                L_UPDATE_SFPEND_PREMIUM = L_UPDATE_SFPEND_PREMIUM +
                                          BPSUMUIM:CHARGE
                end
            End
        else
            begin
            l_update_sfpend_premium = l_end_premium1
            end

        Next bopUMUIM
        End

        End

    If L_CODE = "BU0195" Then
        Begin
        L_UPDATE_SFPEND_PREMIUM = L_END_PREMIUM1
        End

    If L_CODE = "BU0196" Then
        Begin
        Access bopENDORSE, Set bopENDORSE:policy_NO = bopGENERAL:policy_NO,
                               bopendorse:pol_year = bopgeneral:poL_year,
                               bopendorse:end_sequence = bopgeneral:end_sequence,
                               bopENDORSE:PREM_NO = bopGENERAL:PREM_NO,
                               bopENDORSE:BUILD_NO = bopGENERAL:BUILD_NO,
                               bopENDORSE:CODE = L_CODE, Generic

        if bopendorse:misc_premium <> 0 then
            L_UPDATE_SFPEND_PREMIUM = bopENDORSE:MISC_PREMIUM
        else
            l_update_sfpend_premium = l_end_premium1
        End

    If L_CODE one of "BU0283", "MCL426" Then
        L_UPDATE_SFPEND_PREMIUM = L_END_PREMIUM1

    If L_CODE = "MCL328" Then
        Begin
        Access bopENDORSE, Set bopENDORSE:policy_NO = bopGENERAL:policy_NO,
                               bopendorse:pol_year = bopgeneral:poL_year,
                               bopendorse:end_sequence = bopgeneral:end_sequence,
                               bopENDORSE:PREM_NO = bopGENERAL:PREM_NO,
                               bopENDORSE:BUILD_NO = bopGENERAL:BUILD_NO,
                               bopENDORSE:CODE = L_CODE, Generic

        L_UPDATE_SFPEND_PREMIUM = bopENDORSE:MISC_PREMIUM
        End

    if l_code = "MIM012" then
        begin
        Access bopENDORSE, Set bopENDORSE:policy_NO = bopGENERAL:policy_NO,
                               bopendorse:pol_year = bopgeneral:poL_year,
                               bopendorse:end_sequence = bopgeneral:end_sequence,
                               bopENDORSE:PREM_NO = bopGENERAL:PREM_NO,
                               bopENDORSE:BUILD_NO = bopGENERAL:BUILD_NO,
                               bopENDORSE:CODE = L_CODE, Generic

        l_update_sfpend_premium = 0
        while bopendorse:policy_no = bopgeneral:policy_no and
              bopendorse:pol_year = bopgeneral:pol_year and
              bopendorse:end_sequence = bopgeneral:end_sequence and
              bopendorse:prem_no = bopgeneral:prem_no and
              bopendorse:build_no = bopgeneral:build_no and
              bopendorse:code = l_code
                begin
                l_update_sfpend_premium = bopendorse:premium +
                                          l_update_sfpend_premium

                next bopendorse
                end
        end

    If L_CODE = "BU0120" Then
        begin
        Access bopENDORSE, Set bopENDORSE:policy_NO = sfpend:policy_NO,
                               bopendorse:pol_year = sfpend:poL_year,
                               bopendorse:end_sequence = sfpend:end_sequence,
                               bopENDORSE:PREM_NO = sfpend:PREM_NO,
                               bopENDORSE:BUILD_NO = sfpend:BUILD_NO,
                               bopENDORSE:CODE = L_CODE, Generic

        if bopendorse:premium <> 0 then
            l_update_sfpend_premium = bopendorse:premium
        else
            L_UPDATE_SFPEND_PREMIUM = L_END_PREMIUM1
        end

    If L_CODE = "MCL434" Then
        Begin
        access bopprint, set bopprint:policY_no = g_policy_no,
                             bopprint:pol_year = g_year,
                             bopprint:end_sequence = g_end_sequence, generic

        L_UPDATE_SFPEND_PREMIUM = ((bopPRINT:SALES Divide L_END_LIMIT) *
                                   L_END_PREMIUM1)
        If L_UPDATE_SFPEND_PREMIUM < L_END_MINIMUM Then
            L_UPDATE_SFPEND_PREMIUM = L_END_MINIMUM
        If bopPRINT:PART_II_PREMIUM <> 0 Then
            L_UPDATE_SFPEND_PREMIUM = L_UPDATE_SFPEND_PREMIUM + bopPRINT:PART_II_PREMIUM
        End

    If L_CODE = "BU0281" Then
        Begin
        L_UPDATE_SFPEND_PREMIUM = 0
        Access bopENDORSE, Set bopENDORSE:policy_NO = bopGENERAL:policy_NO,
                               bopendorse:pol_year = bopgeneral:pol_year,
                               bopendorse:end_sequence = bopgeneral:end_sequence,
                               bopENDORSE:PREM_NO = bopGENERAL:PREM_NO,
                               bopENDORSE:BUILD_NO = bopGENERAL:BUILD_NO,
                               bopENDORSE:CODE = L_CODE, Generic

        Access bopGENERAL_ALIAS, Set bopGENERAL_ALIAS:policy_NO = bopGENERAL:policy_NO,
                                     bopgeneral_alias:pol_year = bopgeneral:pol_year,
                                     bopgeneral_alias:end_sequence = bopgeneral:end_sequence,
                                     bopGENERAL_ALIAS:PREM_NO = bopGENERAL:PREM_NO,
                                     bopGENERAL_ALIAS:BUILD_NO = bopGENERAL:BUILD_NO, Generic

        L_EFF_DATE_1 = bopENDORSE:EFF_DATE
        L_EXP_DATE = bopENDORSE:EXP_DATE
        L_DAYS = ((L_EFF_DATE_1 - L_EXP_DATE) * -1)
        L_PEAK_FACTOR = L_PROPERTY_RATE * L_PROPERTY_ADJUSTMENTS
        L_PEAK_BASIC_PLUS_1 = (L_PEAK_FACTOR * (L_DAYS Divide 365) *
                              (bopENDORSE:LIMIT[1] Divide 1000))
        If L_FORM = 3 Then
            Begin
            L_ADJUSTMENT = ((bopGENERAL_ALIAS:PROPERTY_SPECIAL Divide
                           (bopGENERAL_ALIAS:PROPERTY_LIMIT
                           Divide 1000)))
            L_PEAK_EXPANDED_1 = (L_ADJUSTMENT *
                                (L_DAYS Divide 365) * (bopENDORSE:LIMIT[1]
                                Divide 1000))
            End
        L_PEAK_PREMIUM_1 = L_PEAK_BASIC_PLUS_1 + L_PEAK_EXPANDED_1

        If bopENDORSE:EFF_DATE_1 <> 0 Then
            Begin
            L_EFF_DATE_1 = bopENDORSE:EFF_DATE_1
            L_EXP_DATE = bopENDORSE:EXP_DATE_1
            L_DAYS = ((L_EFF_DATE_1 - L_EXP_DATE) * -1)
            L_PEAK_FACTOR = L_PROPERTY_RATE * L_PROPERTY_ADJUSTMENTS
            L_PEAK_BASIC_PLUS_2 = (L_PEAK_FACTOR * (L_DAYS Divide 365) *
                                  (bopENDORSE:LIMIT[1] Divide 1000))
            If L_FORM = 3 Then
                Begin
                L_ADJUSTMENT = ((bopGENERAL_ALIAS:PROPERTY_SPECIAL Divide
                               (bopGENERAL_ALIAS:PROPERTY_LIMIT
                               Divide 1000)))
                L_PEAK_EXPANDED_2 = (L_ADJUSTMENT *
                                    (L_DAYS Divide 365) * (bopENDORSE:LIMIT[1]
                                    Divide 1000))
                End
            End
        L_PEAK_PREMIUM_2 = L_PEAK_BASIC_PLUS_2 + L_PEAK_EXPANDED_2

        If bopENDORSE:EFF_DATE_2 <> 0 Then
            Begin
            L_EFF_DATE_1 = bopENDORSE:EFF_DATE_2
            L_EXP_DATE = bopENDORSE:EXP_DATE_2
            L_DAYS = ((L_EFF_DATE_1 - L_EXP_DATE) * -1)
            L_PEAK_FACTOR = L_PROPERTY_RATE * L_PROPERTY_ADJUSTMENTS
            L_PEAK_BASIC_PLUS_3 = (L_PEAK_FACTOR * (L_DAYS Divide 365) *
                                  (bopENDORSE:LIMIT[1] Divide 1000))
            If L_FORM = 3 Then
                Begin
                L_ADJUSTMENT = ((bopGENERAL_ALIAS:PROPERTY_SPECIAL Divide
                               (bopGENERAL_ALIAS:PROPERTY_LIMIT
                               Divide 1000)))
                L_PEAK_EXPANDED_3 = (L_ADJUSTMENT *
                                    (L_DAYS Divide 365) * (bopENDORSE:LIMIT[1]
                                    Divide 1000))
                End
            End
        L_PEAK_PREMIUM_3 = L_PEAK_BASIC_PLUS_3 + L_PEAK_EXPANDED_3

        If bopENDORSE:EFF_DATE_3 <> 0 Then
            Begin
            L_EFF_DATE_1 = bopENDORSE:EFF_DATE_3
            L_EXP_DATE = bopENDORSE:EXP_DATE_3
            L_DAYS = ((L_EFF_DATE_1 - L_EXP_DATE) * -1)
            L_PEAK_FACTOR = L_PROPERTY_RATE * L_PROPERTY_ADJUSTMENTS
            L_PEAK_BASIC_PLUS_4 = (L_PEAK_FACTOR * (L_DAYS Divide 365) *
                                  (bopENDORSE:LIMIT[1] Divide 1000))
            If L_FORM = 3 Then
                Begin
                L_ADJUSTMENT = ((bopGENERAL_ALIAS:PROPERTY_SPECIAL Divide
                               (bopGENERAL_ALIAS:PROPERTY_LIMIT
                               Divide 1000)))
                L_PEAK_EXPANDED_4 = (L_ADJUSTMENT *
                                    (L_DAYS Divide 365) * (bopENDORSE:LIMIT[1]
                                    Divide 1000))
                End
            End
        L_PEAK_PREMIUM_4 = L_PEAK_BASIC_PLUS_4 + L_PEAK_EXPANDED_4

        If bopENDORSE:EFF_DATE_4 <> 0 Then
            Begin
            L_EFF_DATE_1 = bopENDORSE:EFF_DATE_4
            L_EXP_DATE = bopENDORSE:EXP_DATE_4
            L_DAYS = ((L_EFF_DATE_1 - L_EXP_DATE) * -1)
            L_PEAK_FACTOR = L_PROPERTY_RATE * L_PROPERTY_ADJUSTMENTS
            L_PEAK_BASIC_PLUS_5 = (L_PEAK_FACTOR * (L_DAYS Divide 365) *
                                  (bopENDORSE:LIMIT[1] Divide 1000))
            If L_FORM = 3 Then
                Begin
                L_ADJUSTMENT = ((bopGENERAL_ALIAS:PROPERTY_SPECIAL Divide
                               (bopGENERAL_ALIAS:PROPERTY_LIMIT
                               Divide 1000)))
                L_PEAK_EXPANDED_5 = (L_ADJUSTMENT *
                                    (L_DAYS Divide 365) * (bopENDORSE:LIMIT[1]
                                    Divide 1000))
                End
            End

        L_PEAK_PREMIUM_5 = L_PEAK_BASIC_PLUS_5 + L_PEAK_EXPANDED_5

        L_UPDATE_SFPEND_PREMIUM = L_PEAK_PREMIUM_1 + L_PEAK_PREMIUM_2 +
                                  l_peak_premium_3 + l_peak_premium_4 +
                                  l_peak_premium_5
        End

    If L_CODE = "BU0193" Then
        Begin
        if ((sfpname:company_id = "NWIC" and
           bopgeneral:state = 37) or
           sfpname:company_id <> "NWIC") then
           begin
        Access BPSRATE, Set BPSRATE:COMPANY_ID = bopgeneral:company_id,
                            BPSRATE:STATE = bopGENERAL:STATE,
                            BPSRATE:LINE_OF_BUSINESS = bopgeneral:line_of_business, Generic

        Repeat Begin
            Exit when BPSRATE:COMPANY_ID <> bopgeneral:company_id Or
                    BPSRATE:STATE <> bopGENERAL:STATE Or
                    BPSRATE:LINE_OF_BUSINESS <> bopgeneral:line_of_business

        If sfpNAME:EFF_DATE >= BPSRATE:EFF_DATE Then
            Begin
            Switch(L_LIABILITY_CODE)
              Case 1 : L_MANICURISTS = BPSRATE:MANICURISTS[1]
              Case 2 : L_MANICURISTS = BPSRATE:MANICURISTS[2]
              Case 3 : L_MANICURISTS = BPSRATE:MANICURISTS[3]
              End
            L_PER = BPSRATE:MANICURISTS_PER
            End

        Next BPSRATE
        End

        If bopBSHOP:BARBER_FULL_TIME > 0 Then
            L_BARBER_PREMIUM = L_BARBER_PREM_FULL

        If bopBSHOP:BARBER_FULL_TIME > 1 Then
            L_BARBER_PREMIUM = (L_BARBER_PREMIUM + ((bopBSHOP:BARBER_FULL_TIME - 1) *
                               L_BARBER_PREM_PART))

        If bopBSHOP:BEAUTY_FULL_TIME > 0 Then
            L_BEAUTY_FULL_PREMIUM = bopBSHOP:BEAUTY_FULL_TIME * L_BEAUTY_PREM_FULL

        If bopBSHOP:BEAUTY_PART_TIME > 0 Then
            L_BEAUTY_PART_PREMIUM = bopBSHOP:BEAUTY_PART_TIME * L_BEAUTY_PREM_PART

        If bopBSHOP:MANICURISTS > 0 Then
            L_MANICURISTS_PREMIUM = bopBSHOP:MANICURISTS * L_MANICURISTS

        L_UPDATE_SFPEND_PREMIUM = L_BARBER_PREMIUM + L_BEAUTY_FULL_PREMIUM +
                                  L_BEAUTY_PART_PREMIUM + L_MANICURISTS_PREMIUM

        end
        End

End

End
