%%
/*
Date Written: May 2, 2002

Name: sibumso001a.sd

Copyright (c) 2000, SCIPS.com Inc.

Modify
Date                   By                  Comment
--------------------------------------------------------------
04/24/2002           REL               Converted supplemtental to VCS
07/09/2002           RMG               Making changes for WHMIC version
08/06/2002           REL               added code for off premise limit
10/07/2002           REL               changed program to allow for bopbu0507
                                       if # 2 is check I need to make sure no
                                       limit print on the supplemental in
                                       PART II.
05/01/2003           RMG               Fixing Overlaping Text Error
10/06/2017         cac                 spacing
=============================================================
*/

Program
  Name = "sibumso001a";
  Type = "File";
  Domain = "SFPPRINT1";
  Padcharacter = Space;

 String L_FILE_NAME[14] = "sibumso001a.cq";
 Unsigned Ascii Number L_PAGE_NUMBER = 1;
 String L_SFPLOCATION_ZIP;
 unsigned ascii number l_bu0197[1]=0
 Unsigned Ascii Number L_SFPMASTER_FORM[1];
 Unsigned Ascii Number L_COVERGE_POS;    -- coverage horizontal pos
 Unsigned Ascii Number L_REVISED_POS;    -- revised limit horizonal pos
 Unsigned Ascii Number L_BASIC_POS;      -- basic limit horizonal pos
 Unsigned Ascii Number L_DOLLAR_POS;
 Unsigned Ascii Number L_FACTOR_POS;
 Unsigned Ascii Number L_REVISED_FACTOR_POS;
 Unsigned Ascii Number L_BUILDING_CODE_PERCENT[3]/decimals=2;
 Unsigned Ascii Number L_LIMIT_POS,
                       l_state[2]=0;
 wdate  l_eff_date;
 String L_LOB_CODE[10],
        I_CODE[7];
 Unsigned Ascii Number L_LINE_PCOUNTER;
 Unsigned Ascii Number L_MAX_LINES = 50;
 Unsigned Ascii Number L_PROPERTY_LIMIT[9];
 unsigned ascii number l_line_of_business[4];
 unsigned ascii number l_off_premises_limit[8];
 unsigned ascii number l_personal_add_injury[8];
 Unsigned Ascii Number L_UTILITY_LIMIT[9];
 Unsigned Ascii Number L_MECHANICAL_LIMIT[9];
 Unsigned Ascii Number L_EXTERIOR_SIGNS_LIMIT[9];
 Unsigned Ascii Number L_VALUEABLE_PAPERS_LIMIT[9];
 Unsigned Ascii Number WATER_BACKUP_LIMIT;
 Unsigned Ascii Number L_WATER_BACKUP_LIMIT;
 Unsigned Ascii Number L_FMA100;
 Unsigned Ascii Number L_LIMIT[9];
 Unsigned Ascii Number L_BPSDEFAULT_LIMIT[9];
 Unsigned Ascii Number L_REVISED_LIMIT[9];
 String L_COMPANY_ID[10];
 Unsigned Ascii Number L_DEDUCTIBLE_POS;
 Unsigned Ascii Number L_EXTERIOR_SIGNS_LIMIT_NOT_ATTC;
 Unsigned Ascii Number L_ATTACHED_TO_BUILDING;
 Unsigned Ascii Number L_VALUABLE_PAPERS_NO;
 Unsigned Ascii Number L_DEDUCTIBLE_SIGNS_OUTDOOR;
 Unsigned Ascii Number L_WATER_DAMAGE;
 Unsigned Ascii Number L_GLASS_SQFT;
 Unsigned Ascii Number L_SIGNS_NOT_ATTACHED;
 Unsigned Ascii Number L_BU0507;

  Include "csfonts.inc"
  Include "sfsrevname.var"
  Include "swsut100.var"

Initialization
  Deletefile (L_FILE_NAME);

Update
Access SFPNAME,
   Set SFPNAME:POLICY_NO    = SFPPRINT1:POLICY_NO,
       SFPNAME:POL_YEAR     = SFPPRINT1:POL_YEAR,
       SFPNAME:END_SEQUENCE = SFPPRINT1:END_SEQUENCE, Generic

Access sfpprint4,
   Set sfpprint4:POLICY_NO    = sfpprint1:POLICY_NO,
       sfpprint4:POL_YEAR     = SFPPRINT1:POL_YEAR,
       sfpprint4:END_SEQUENCE = SFPPRINT1:END_SEQUENCE, Generic

Access SFPLOCATION,
   Set SFPLOCATION:POLICY_NO    = SFPPRINT1:POLICY_NO,
       SFPLOCATION:POL_YEAR     = SFPPRINT1:POL_YEAR,
       SFPLOCATION:END_SEQUENCE = SFPPRINT1:END_SEQUENCE, Generic

Access BOPGENERAL,
   Set BOPGENERAL:POLICY_NO    = SFPPRINT1:POLICY_NO,
       BOPGENERAL:POL_YEAR     = SFPPRINT1:POL_YEAR,
       BOPGENERAL:END_SEQUENCE = SFPPRINT1:END_SEQUENCE, Generic

Access SFPMASTER,
   Set SFPMASTER:POLICY_NO    = SFPPRINT1:POLICY_NO,
       SFPMASTER:POL_YEAR     = SFPPRINT1:POL_YEAR,
       SFPMASTER:END_SEQUENCE = SFPPRINT1:END_SEQUENCE, Exact

Access SFPAMT,
   Set SFPAMT:POLICY_NO    = SFPPRINT1:POLICY_NO,
       SFPAMT:POL_YEAR     = SFPPRINT1:POL_YEAR,
       SFPAMT:END_SEQUENCE = SFPPRINT1:END_SEQUENCE, Exact

Access sfscompany,
   Set sfscompany:company_id    = sfpname:company_id, exact

l_line_of_business = sfpamt:line_of_business[5]
if l_line_of_business = 0 then
    l_line_of_business = sfpname:line_of_business
Access SFPMASTSUPP,
             Set SFPMASTSUPP:POLICY_NO        = SFPPRINT1:POLICY_NO,
                 SFPMASTSUPP:POL_YEAR         = SFPPRINT1:POL_YEAR,
                 SFPMASTSUPP:END_SEQUENCE     = SFPPRINT1:END_SEQUENCE,
                 sfpmastsupp:line_of_business = l_line_of_business, Exact

if sfpmastsupp:policy_no <> 0 then
    begin
    L_SFPMASTER_FORM      = SFPMASTSUPP:FORM
    l_off_premises_limit  = sfpmastsupp:off_premises_limit
    l_personal_add_injury = sfpmastsupp:personal_add_injury
    end
else
    begin
    L_SFPMASTER_FORM      = SFPMASTER:FORM
    l_off_premises_limit  = sfpmaster:off_premises_limit
    l_personal_add_injury = sfpmaster:personal_add_injury
    end

Access BPSDEFAULT,
             Set BPSDEFAULT:COMPANY_ID       = SFPNAME:COMPANY_ID,
                 BPSDEFAULT:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS,
                 BPSDEFAULT:FORM             = L_SFPMASTER_FORM, Generic


Access SFSLINE,
   Set SFSLINE:COMPANY_ID       = SFPNAME:COMPANY_ID,
       SFSLINE:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS,
       sfsline:lob_subline      = "00", exact

Access SFSLINE2,
   Set SFSLINE2:COMPANY_ID       = SFPNAME:COMPANY_ID,
       SFSLINE2:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS,
       sfsline2:lob_subline      = "00", exact

I_CODE = "BU0403"
L_COMPANY_ID = SFPNAME:COMPANY_ID
L_LOB_CODE   = SFSLINE:LOB_CODE

Include "swsut100.inc"

Access SFSSTATE,
   Set SFSSTATE:COMPANY_ID = L_COMPANY_ID,
       SFSSTATE:STATE      = I_STATE,
       SFSSTATE:COUNTY     = "000", Exact

Access SCIPSCONTROL,
             Set SCIPSCONTROL:COMPANY_ID   = L_COMPANY_ID,
                 SCIPSCONTROL:STATE        = I_STATE,
                 SCIPSCONTROL:LOB_CODE     = L_LOB_CODE, Exact

If SCIPSCONTROL:DUPLEX_SHORT_EDGE = 1 Then
  {
    Writefile(L_FILE_NAME,"%s",L_SEDUP)
  }
Else
  {
    Writefile(L_FILE_NAME,"%s",L_LEDUP)
  }


--****SCIPSCONTROL VARIABLES****--

L_ATTACHED_TO_BUILDING = SCIPSCONTROL:SIGNS_ATTACHED_TO_BUILDING
L_DEDUCTIBLE_SIGNS_OUTDOOR = SCIPSCONTROL:SIGNS_ATTACHED_DEDUCTIBLE
L_VALUABLE_PAPERS_NO = SCIPSCONTROL:VALUABLE_PAPERS_PAGE_NO
L_WATER_DAMAGE = SCIPSCONTROL:WATER_DAMAGE
L_GLASS_SQFT = SCIPSCONTROL:GLASS_SQUARE_FEET
L_SIGNS_NOT_ATTACHED = SIGNS_NOT_ATTACHED_TO_BUILDING

--****SCIPSCONTROL VARIABLES****--

While SFPLOCATION:POLICY_NO    = SFPPRINT1:POLICY_NO And
      SFPLOCATION:POL_YEAR     = SFPPRINT1:POL_YEAR And
      SFPLOCATION:END_SEQUENCE = SFPPRINT1:END_SEQUENCE
{
  L_SFPLOCATION_ZIP = If (Val(SFPLOCATION:STR_ZIPCODE[6,9]) = 0) Then
                        SFPLOCATION:STR_ZIPCODE[1,5]
                      Else
                        SFPLOCATION:STR_ZIPCODE[1,5] + "-" +
                        SFPLOCATION:STR_ZIPCODE[6,9]
--border

If SCIPSCONTROL:PRINT_BORDERS_ON_DEC_PAGE = 1 Then
    {
      Writefile(L_FILE_NAME,"%s","<033>&a140h-220V<033>*c10a3100b0P") --left vertical li
      Writefile(L_FILE_NAME,"%s","<033>&a5585h-0V<033>*c10a3100b0P")  --right vertical
      Writefile(L_FILE_NAME,"%s","<033>&a140h-0V<033>*c5467h20v0P")   --top horizontal line to
      Writefile(L_FILE_NAME,"%s","<033>&a140h7300V<033>*c5467h20v0P") --bottom horizontal line
    }
  L_PAGE_NUMBER = 1

  Writefile(L_FILE_NAME,"%s%s%s%n", L_ARIAL_BOLD_9,
                        "<033>&a5000h7250V","**Page ",L_PAGE_NUMBER)

  If sfscompany:company_id one of "DELOS", "GGUND" then
  do header

  Else
  do header1

  Writefile(L_FILE_NAME,"%s%s%s%s%s%s%s%s%s",L_ARIAL_BOLD,"<033>&a180h+0V",
                      "Each basic limit, or if increased, each revised limit ",
                      " - shown below is",L_ARIAL_ITALIC_BOLD, " our ",
                      L_ARIAL_BOLD, "maximum limit of liability","<NL>")
  Writefile(L_FILE_NAME,"%s%s%s%s%s",L_ARIAL_BOLD,"<033>&a180h+0V",
                      "for the coverage in any occurrence, except as otherwise stated.","<NL>","<NL>")

  Writefile(L_FILE_NAME,"%s",L_ARIAL_BOLD)
  Writefile(L_FILE_NAME,"%s","<033>&a180h+0V")
  Writefile(L_FILE_NAME,"%s","Your Business/Operation:  ")
  Writefile(L_FILE_NAME,"%s",BOPGENERAL:BUSINESS_DESC[1])
  Writefile(L_FILE_NAME,"%s","<NL>")

  Writefile(L_FILE_NAME,"%s%s%s%s%n%s%s%s%n",L_ARIAL_BOLD,"<033>&a180h+0V",
                      "Location","<033>&a900h+0V",SFPLOCATION:PREM_NO,
                      "<033>&a1200h+0V","Building","<033>&a1900h+0V",
                      SFPLOCATION:BUILD_NO)

  Writefile(L_FILE_NAME,"%s%s%s%s",L_ARIAL_BOLD,"<033>&a2500h+0V",
                      SFPLOCATION:ADDRESS,"<NL>")
  If SFPLOCATION:ADDRESS1[1] <> "" Then
    {
      Writefile(L_FILE_NAME,"%s%s%s%s",L_ARIAL_BOLD,"<033>&a2500h+0V",
                            SFPLOCATION:ADDRESS1[1],"<NL>")
    }
  If SFPLOCATION:ADDRESS1[2] <> "" Then
    {
      Writefile(L_FILE_NAME,"%s%s%s%s",L_ARIAL_BOLD,"<033>&a2500h+0V",
                            SFPLOCATION:ADDRESS1[2],"<NL>")
    }
  If SFPLOCATION:ADDRESS1[3] <> "" Then
    {
      Writefile(L_FILE_NAME,"%s%s%s%s",L_ARIAL_BOLD,"<033>&a2500h+0V",
                            SFPLOCATION:ADDRESS1[3],"<NL>")
    }
  Writefile(L_FILE_NAME,"%s%s%s%s%s%s%s%s",L_ARIAL_BOLD,"<033>&a2500h+0V",
                        Trun(SFPLOCATION:CITY),", ", SFPLOCATION:STR_STATE," ",
                        L_SFPLOCATION_ZIP,"<NL>")
  Writefile(L_FILE_NAME,"%s%s%s%s",L_ARIAL_BOLD,"<033>&a180h+40V",
                        "COVERAGE","<NL>")
  Writefile(L_FILE_NAME,"%s%s%s%s",L_ARIAL_BOLD,"<033>&a180h+40V",
                        "PART I","<nl>")
  L_COVERGE_POS = 180
  L_BASIC_POS = 2550
  L_REVISED_POS = 2430
  L_DOLLAR_POS = 3575
  L_DEDUCTIBLE_POS = 2557
  L_FACTOR_POS = 2745
  L_REVISED_FACTOR_POS = 2350
  L_LIMIT_POS = 3650
  Access BOPGENERAL ,
             Set BOPGENERAL:POLICY_NO    = SFPPRINT1:POLICY_NO,
                 BOPGENERAL:POL_YEAR     = SFPPRINT1:POL_YEAR,
                 BOPGENERAL:END_SEQUENCE = SFPPRINT1:END_SEQUENCE,
                 BOPGENERAL:PREM_NO      = SFPLOCATION:PREM_NO,
                 BOPGENERAL:BUILD_NO     = SFPLOCATION:BUILD_NO,Generic

  Writefile(L_FILE_NAME,"%s%s%s%s%s%n%s%s%s%s%n%s%s%s",L_ARIAL_BOLD,"<033>&a180h+60V",
                        "Accounts Receivable* ", L_ARIAL,
                        "<033>&a",L_BASIC_POS,"h+0V","Basic Limit:",
                        L_LETTER_GOTHIC_BOLD_12,"<033>&a",L_DOLLAR_POS,"h+0V",
                        L_ARIAL_BOLD,"$")                  --Basic Limit Accounts Receivable
  L_LIMIT            = BOPGENERAL:PROPERTY_LIMIT * (BPSDEFAULT:AR_PERCENT Divide 100)
  L_REVISED_LIMIT    = BOPGENERAL:AR_LIMIT
  L_BPSDEFAULT_LIMIT = BPSDEFAULT:AR_LIMIT

  Do PRINT_LIMIT

  Writefile(L_FILE_NAME,"%s%s%n%s%s%s%s",L_ARIAL_ITALIC,"<033>&a",
                        L_COVERGE_POS,"h+0V",
                        "* Applies Only With Coverage B","<NL>","<NL>")

  Writefile(L_FILE_NAME,"%s%s%n%s%s%s%s",L_ARIAL_BOLD,"<033>&a",
                        L_COVERGE_POS,"h+0V","Building ","<NL>","<NL>")

  Writefile(L_FILE_NAME,"%s%s%n%s%s%s%s",L_ARIAL_BOLD,"<033>&a",
                        L_COVERGE_POS,"h+0V","E.     ",L_ARIAL_ITALIC,
                        "Supplies and Materials Loss by Theft")

  Writefile(L_FILE_NAME,"%s%s%n%s%s%s%n%s%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+0V","Basic Limit:",
                        "<033>&a",L_DOLLAR_POS,
                        "h+0V",L_ARIAL_BOLD,"$")                  --Basic Limit

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12,"<033>&a",L_LIMIT_POS,"h+0V",
                        Str(BPSDEFAULT:SUPPLIES_LIMIT,"ZZZ,ZZZ,ZZ9"))

  Writefile(L_FILE_NAME,"%s%s%s%s%n%s%s","<NL>","<NL>",L_ARIAL_BOLD,"<033>&a",
                        L_COVERGE_POS,"h+0V","Building Code/Law Coverage *")

  If sfscompany:company_id one of "DELOS", "GGUND" then
    {
      Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",L_FACTOR_POS,
                        "h+0V",L_ARIAL,"Factor:")                  --factor

      L_BUILDING_CODE_PERCENT = BPSDEFAULT:BUILDING_CODE_PERCENT Divide 100

      If BPSDEFAULT:BUILDING_CODE_PERCENT >= BOPGENERAL:BUILDING_CODE_PERCENT Then
        {
          Writefile(L_FILE_NAME,"%s%n%s%s%s%s","<033>&a",L_LIMIT_POS,"h+0V",
                       L_LETTER_GOTHIC_BOLD_12,
                       Str(L_BUILDING_CODE_PERCENT,"ZZZZ,ZZZ.99"),"<NL>")
          Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",L_REVISED_FACTOR_POS,
                       "h+0V",L_ARIAL,"Revised Factor:")                  --revised factor
          Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12,"<033>&a",
                                L_LIMIT_POS,"h+0V",Str(0,"ZZZZ,ZZZ.99"))
        }
      Else
        {
          Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12,"<033>&a",
                                L_LIMIT_POS,"h+0V",Str(0,"ZZZZ,ZZZ.99"))
          Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",L_REVISED_FACTOR_POS,
                       "h+120V",L_ARIAL,"Revised Factor:")                  --revised factor
          Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12,"<033>&a",
                           L_LIMIT_POS,"h+0V",
                           Str(BOPGENERAL:BUILDING_CODE_PERCENT divide 100,"ZZZZ,ZZZ.99"))
        }
    }
else
  {
    If BPSDEFAULT:BUILDING_CODE_LIMIT > 0 Then
      {
        Writefile(L_FILE_NAME,"%s%s%n%s%s%s%n%s%s%s",L_ARIAL,"<033>&a",
                          L_BASIC_POS,"h+0V","Basic Limit:",
                          "<033>&a",L_DOLLAR_POS,
                          "h+0V",L_ARIAL_BOLD,"$")                  --Basic Limit

        Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12,"<033>&a",
                          L_LIMIT_POS,"h+0V",
                          Str(BPSDEFAULT:BUILDING_CODE_LIMIT,"ZZZ,ZZZ,ZZ9"),
                          "<NL>")
      }
    Else
      {
        Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",L_FACTOR_POS,
                          "h+0V",L_ARIAL,"Factor:")                  --factor

        L_BUILDING_CODE_PERCENT = BPSDEFAULT:BUILDING_CODE_PERCENT Divide 100
        If SCIPSCONTROL:PRINT_REVISED_ON_SUPP = 1 Then
          {
            If BPSDEFAULT:BUILDING_CODE_PERCENT >= BOPGENERAL:BUILDING_CODE_PERCENT Then
              {
                Writefile(L_FILE_NAME,"%s%n%s%s%s%s","<033>&a",L_LIMIT_POS,"h+0V",
                              L_LETTER_GOTHIC_BOLD_12,
                              Str(L_BUILDING_CODE_PERCENT,"ZZZZ,ZZZ.99"),"<NL>")
              }
            Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",L_REVISED_FACTOR_POS,
                              "h+0V",L_ARIAL,"Revised Factor:")                  --revised factor
            If (BPSDEFAULT:BUILDING_CODE_PERCENT = BOPGENERAL:BUILDING_CODE_PERCENT) Then
              {
                Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12,"<033>&a",
                                  L_LIMIT_POS,"h+0V",Str(0,"ZZZZ,ZZZ.99"))
              }
            Else
              {
                Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12,"<033>&a",
                                  L_LIMIT_POS,"h+0V",
                                  Str(BOPGENERAL:BUILDING_CODE_PERCENT,"ZZZ,ZZZ.99"))

              }
          }  --scips control if
        Else
          {
            If (BPSDEFAULT:BUILDING_CODE_PERCENT >= BOPGENERAL:BUILDING_CODE_PERCENT) Then
              {
                Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12,"<033>&a",
                                  L_LIMIT_POS,"h+0V",
                                  Str(L_BUILDING_CODE_PERCENT,"ZZZZ,ZZZ.99")
                                  ,"<NL>")
              }
            Else
              {
                Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12,"<033>&a",
                                  L_LIMIT_POS,"h+0V",
                                  Str(BOPGENERAL:BUILDING_CODE_PERCENT,"ZZZZ,ZZZ.99")
                                  ,"<NL>")
              }
          }
      } --   If BPSDEFAULT:BUILDING_CODE_LIMIT > 0 Then
  }
  Writefile(L_FILE_NAME,"%s%s%s%n%s%s%s","<NL>",L_ARIAL_ITALIC,"<033>&a",
                        L_COVERGE_POS,"h+0V",
                        "*  Does Not Apply if Insured on Actual Cash Value Basis",
                        "<NL>")

  Writefile(L_FILE_NAME,"%s%s%s%n%s%s%s","<NL>",L_ARIAL_BOLD,"<033>&a",
                         L_COVERGE_POS,"h+0V",
                         "Building Glass Coverage - Limited Coverage",
                         "<NL>")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_REVISED_POS-625,"h+0V","Basic Limit per Occurrence:")

  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

  Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12,"<033>&a",
                        L_LIMIT_POS,"h+0V",Str(BPSDEFAULT:BUILDING_GLASS,"ZZZ,ZZZ,ZZ9"),"<NL>")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",L_REVISED_POS-1050,"h+0V",
                        "Basic Limit on Any One Pane or Unit:")

  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

  Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                        L_LIMIT_POS,"h+0V",
                        Str(BPSDEFAULT:GLASS_PANE,"ZZZ,ZZZ,ZZ9"),"<NL>")

  Writefile(L_FILE_NAME,"%s%s%s%n%s%s%s","<NL>",L_ARIAL_BOLD,"<033>&a",
                        L_COVERGE_POS,"h+0V","Burglary & Robbery ","<NL>")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",L_COVERGE_POS,"h+0V",
                        "On Premises")

  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

  Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                        L_LIMIT_POS,"h+0V",
                        Str(BOPGENERAL:BURGLARY_LIMIT_ON,"ZZZ,ZZZ,ZZ9"),"<NL>")
  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",L_COVERGE_POS,"h+0V",
                        "Off Premises")

  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

  Writefile(L_FILE_NAME,"%s%s%n%s%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                        L_LIMIT_POS,"h+0V",
                        Str(BOPGENERAL:BURGLARY_LIMIT_OFF,"ZZZ,ZZZ,ZZ9"),"<NL>","<NL>")

  Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+0V",
                        "Business Personal Property ","<NL>")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",L_COVERGE_POS,"h+0V",
                        "Customers' Property")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+0V","Basic Limit:")

  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")
  L_LIMIT            = 0 --resets L_LIMIT
  L_REVISED_LIMIT    = BOPGENERAL:CUSTOMER_PROP_LIMIT
  L_BPSDEFAULT_LIMIT = BPSDEFAULT:CUSTOMER_PROP_LIMIT

  Do PRINT_LIMIT

  Writefile(L_FILE_NAME,"%s%s%s%n%s%s%s%s","<NL>",L_ARIAL_ITALIC,"<033>&a",L_COVERGE_POS,
                        "h+0V",
                        "* Separate Specific Amount Not Subject to Coverage B Limit",
                        "<NL>","<NL>")
  Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+0V",
                        "Business Property Extension ","<NL>")
--  Writefile(L_FILE_NAME,"%s",L_ARIAL)
  Writefile(L_FILE_NAME,"%s%n%s%s%s%s%s","<033>&a",L_COVERGE_POS,"h+0V",
                         L_BULLET_6,
                         L_ARIAL_BOLD,"  Consequent Loss","<NL>")
  Writefile(L_FILE_NAME,"%s%n%s%s%s%s","<033>&a",L_COVERGE_POS+100,"h+0V",L_BOX_6,
                         L_ARIAL,"  Utility Services")
  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+0V","Basic Limit:")
  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")
  L_UTILITY_LIMIT = BOPGENERAL:PROPERTY_LIMIT * (BPSDEFAULT:UTILITY_PERCENT Divide 100)
  If (L_UTILITY_LIMIT > BPSDEFAULT:UTILITY_MAX) Then
    {
      L_UTILITY_LIMIT = BPSDEFAULT:UTILITY_MAX
    }
  L_REVISED_LIMIT    = BOPGENERAL:UTILITY_LIMIT
  L_BPSDEFAULT_LIMIT = BPSDEFAULT:UTILITY_LIMIT
  L_LIMIT            = L_UTILITY_LIMIT
  Do PRINT_LIMIT
  Writefile(L_FILE_NAME,"%s%n%s%s%s%s","<033>&a",L_COVERGE_POS+100,
                        "h+0V",L_BOX_6,
                         L_ARIAL,"  Mechanical Breakdown")
  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+0V","Basic Limit:*")
  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

  Writefile(L_FILE_NAME,"%s",l_arial)
  Writefile(L_FILE_NAME,"%s","<033>&a3060h+120V")
  Writefile(L_FILE_NAME,"%s","*")
  Writefile(L_FILE_NAME,"%s","<033>&a0h-120V")

  L_MECHANICAL_LIMIT = BOPGENERAL:PROPERTY_LIMIT * (BPSDEFAULT:MECHANICAL_PERCENT Divide 100)
  If (L_MECHANICAL_LIMIT > BPSDEFAULT:MECHANICAL_MAX) Then
    {
      L_MECHANICAL_LIMIT = BPSDEFAULT:MECHANICAL_MAX
    }
  L_REVISED_LIMIT    = BOPGENERAL:MECHANICAL_LIMIT
  L_BPSDEFAULT_LIMIT = BPSDEFAULT:MECHANICAL_LIMIT
  L_LIMIT            = L_MECHANICAL_LIMIT

  Do PRINT_LIMIT

  Writefile(L_FILE_NAME,"%s%s%n%s%s%s%s",L_ARIAL_ITALIC,"<033>&a",L_COVERGE_POS,
                        "h+0V",
                        "* Annual Aggregate Limit",
                        "<NL>","<NL>")
  Writefile(L_FILE_NAME,"%s%n%s%s%s%s%s","<033>&a",L_COVERGE_POS,"h+0V",
                         L_BULLET_6,
                         L_ARIAL_BOLD,"  Off Premises ","<NL>")
  Writefile(L_FILE_NAME,"%s%n%s%s%s%s","<033>&a",L_COVERGE_POS+100,"h+0V",L_BOX_6,
                         L_ARIAL,"  Coverage A")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+0V","Basic Limit:")

  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                        L_LIMIT_POS,"h+0V",
                       Str(BPSDEFAULT:OFF_PREMISES_A,"ZZZ,ZZZ,ZZ9"))

  Writefile(L_FILE_NAME,"%s%s%n%s%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                        L_LIMIT_POS+700,"h+0V",L_ARIAL,"< Total Limit - All Locations","<NL>")
  Writefile(L_FILE_NAME,"%s%n%s%s%s%s","<033>&a",L_COVERGE_POS+100,"h+0V",L_BOX_6,
                         L_ARIAL,"  Coverage B")
  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+0V","Basic Limit:")
  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

  If SCIPSCONTROL:PRINT_REVISED_ON_SUPP = 1 Then
    {
      If BPSDEFAULT:OFF_PREMISES_B >= L_OFF_PREMISES_LIMIT Then
        {    -- if < do not print it
          Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                                L_LIMIT_POS,"h+0V",
                                Str(BPSDEFAULT:OFF_PREMISES_B,"ZZZ,ZZZ,ZZ9"))
        }
      Writefile(L_FILE_NAME,"%s%s%n%s%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                            L_LIMIT_POS+700,"h+0V",L_ARIAL,"< Total Limit - All Locations","<NL>")

      Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_REVISED_POS,"h+0V","Revised Limit:")

      Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

      If bpsdefault:off_premises_b <> l_off_premises_limit and
         bpsdefault:off_premises_b <> bopgeneral:off_premises_limit then
        {
          If BOPGENERAL:OFF_PREMISES_LIMIT = l_off_premises_limit Or
             BOPGENERAL:OFF_PREMISES_LIMIT = 0 Then
            {
              Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                                     L_LIMIT_POS,"h+0V",
                                     Str(l_off_premises_limit,"ZZZ,ZZZ,ZZ9"))
            }
          Else
            {
              Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                                     L_LIMIT_POS,"h+0V",
                                     Str(BOPGENERAL:OFF_PREMISES_LIMIT,"ZZZ,ZZZ,ZZ9"))
            }
        }
      Else
        {
          Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                                 L_LIMIT_POS,"h+0V",
                                 Str(0,"ZZZ,ZZZ,ZZ9"))
        }
    }
  Else --do not print revised limit
    {
      If BPSDEFAULT:OFF_PREMISES_B >= l_off_premises_limit Then
        {
          Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                                 L_LIMIT_POS,"h+0V",
                                  Str(BPSDEFAULT:OFF_PREMISES_B ,"ZZZ,ZZZ,ZZ9"))
        }
      Else
        {
          Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                                 L_LIMIT_POS,"h+0V",
                                 Str(l_off_premises_limit,"ZZZ,ZZZ,ZZ9"))
        }
    }

/*
  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+0V","Basic Limit:")
  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")
  If SCIPSCONTROL:PRINT_REVISED_ON_SUPP = 1 Then
    {
      If BPSDEFAULT:OFF_PREMISES_B >= l_off_premises_limit Then
        {    -- if < do not print it
          Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                                L_LIMIT_POS,"h+0V",
                                Str(BPSDEFAULT:OFF_PREMISES_B,"ZZZ,ZZZ,ZZ9"))
        }
      Writefile(L_FILE_NAME,"%s%s%n%s%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                            L_LIMIT_POS+700,"h+0V",L_ARIAL,"< Total Limit - All Locations","<NL>")
      Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_REVISED_POS,"h+0V","Revised Limit:")
      Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

      If ((BOPGENERAL:OFF_PREMISES_LIMIT = l_off_premises_limit) and
         (bpsdefault:off_premises_b <> l_off_premises_limit) and
         (bpsdefault:off_premises_b <> bopgeneral:off_premises_limit)) Or
         BOPGENERAL:OFF_PREMISES_LIMIT = 0 Then
        {
          Writefile(L_FILE_NAME,"!1!%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                                L_LIMIT_POS,"h+0V",
                                Str(l_off_premises_limit,"ZZZ,ZZZ,ZZ9"))
        }
      Else
        {
          Writefile(L_FILE_NAME,"!2!%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                                L_LIMIT_POS,"h+0V",
                                Str(BOPGENERAL:OFF_PREMISES_LIMIT,"ZZZ,ZZZ,ZZ9"))
        }

      If BPSDEFAULT:OFF_PREMISES_B = l_off_premises_limit Then
        {    -- if < do not print it
          Writefile(L_FILE_NAME,"!3!%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                                L_LIMIT_POS,"h+0V",
                                Str(0,"ZZZ,ZZZ,ZZ9"))
        }
      Else
        {
          Writefile(L_FILE_NAME,"!4!%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                                L_LIMIT_POS,"h+0V",
                                Str(l_off_premises_limit,"ZZZ,ZZZ,ZZ9"))
        }
    }
  Else --do not print revised limit
    {
      If BPSDEFAULT:OFF_PREMISES_B >= l_off_premises_limit Then
        {
          Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12,"<033>&a",
                                 L_LIMIT_POS,"h+0V",
                                 Str(BPSDEFAULT:OFF_PREMISES_B,"ZZZ,ZZZ,ZZ9"))
        }
      Else
        If BOPGENERAL:OFF_PREMISES_LIMIT = l_off_premises_limit Or
           BOPGENERAL:OFF_PREMISES_LIMIT  = 0 Then
          {
            Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                                 L_LIMIT_POS,"h+0V",
                                 Str(l_off_premises_limit,"ZZZ,ZZZ,ZZ9"))
          }
        Else
          {
            Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                                 L_LIMIT_POS,"h+0V",
                                 Str(BOPGENERAL:OFF_PREMISES_LIMIT,"ZZZ,ZZZ,ZZ9"))
          }
    }
*/
  Writefile(L_FILE_NAME,"%s%s%n%s%s%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                        L_LIMIT_POS+700,"h+0V",L_ARIAL,"< Total Limit - All Locations",
                        "<NL>","<NL>")
  Writefile(L_FILE_NAME,"%s%n%s%s%s%s","<033>&a",L_COVERGE_POS,"h+0V",
                         L_BULLET_6,L_ARIAL_BOLD,
                         "  Personal Effects ")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+0V","Basic Limit:")

  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

  Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                        L_LIMIT_POS,"h+0V",
                        Str(BPSDEFAULT:PERSONAL_EFFECTS,"ZZZ,ZZZ,ZZ9"),
                        "<NL>")

                                   -- PAGE 2

 Writefile(L_FILE_NAME,"%s","<FF>")

  L_PAGE_NUMBER = L_PAGE_NUMBER + 1
  If SCIPSCONTROL:PRINT_BORDERS_ON_DEC_PAGE = 1 Then
    {
      Writefile(L_FILE_NAME,"%s","<033>&a140h-220V<033>*c10a3100b0P")   --left vertical li
      Writefile(L_FILE_NAME,"%s","<033>&a5585h-0V<033>*c10a3100b0P")   --right vertical
      Writefile(L_FILE_NAME,"%s","<033>&a140h-0V<033>*c5467h20v0P") --top horizontal line to
      Writefile(L_FILE_NAME,"%s","<033>&a140h7300V<033>*c5467h20v0P") --bottom horizontal line
    }
  Writefile(L_FILE_NAME,"%s%s%s%n", L_ARIAL_BOLD_9,
                        "<033>&a5000h7250V","Page ",L_PAGE_NUMBER)

  If sfscompany:company_id one of "DELOS", "GGUND" then
  do header

  Else
  do header1


  Writefile(L_FILE_NAME,"%s%s%s%s","<NL>",L_ARIAL_BOLD,
                      "<033>&a180h+0V","Part I - CONTINUED")

  Writefile(L_FILE_NAME,"%s%s%s%s%n%s%s%s%n%s%S",L_ARIAL_BOLD,"<033>&a2300h+0V",
                      "Location","<033>&a3000h+0V",SFPLOCATION:PREM_NO,
                      "<033>&a3300h+0V","Building","<033>&a3900h+0V",
                      SFPLOCATION:BUILD_NO,"<NL>","<NL>")

  Writefile(L_FILE_NAME,"%s%s%n%s%s%s","<NL>","<033>&a",L_COVERGE_POS,"h+0V",
                        L_ARIAL_BOLD,"Debris Removal ")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_FACTOR_POS,"h+0V","Factor:")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12,"<033>&a",
                                L_LIMIT_POS,"h+0V",Str(bpsdefault:DEBRIS_REMOVAL_FACTOR,"ZZZZ,ZZZ.99"))

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+120V","Basic Limit:")

  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                         L_LIMIT_POS,"h+0V",Str(BPSDEFAULT:DEBRIS_REMOVAL,"ZZZ,ZZZ,ZZ9"))

  Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+240V",
                        "Fire Expense Coverages ","<NL>")
  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",L_COVERGE_POS,"h+0V",
                        "* Fire Department Service Charge")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS+250,"h+0V","Limit:")

  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")
  Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                         L_LIMIT_POS,"h+0V",Str(BPSDEFAULT:FIRE_DEPARTMENT,"ZZZ,ZZZ,ZZ9"),"<NL>")
  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",L_COVERGE_POS,"h+0V",
                        "* Fire Extinguisher Recharge Expenses")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS+250,"h+0V","Limit:")

  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")
  Writefile(L_FILE_NAME,"%s%s%n%s%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                         L_LIMIT_POS,"h+0V",Str(BPSDEFAULT:FIRE_EXTINGUISHER,"ZZZ,ZZZ,ZZ9"),"<NL>","<NL>")

  Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+0V",
                        "Outdoor (Exterior) Signs ","<NL>")

  If L_ATTACHED_TO_BUILDING = 1 Then
    {
      Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+0V",
                            "Attached to Building")
    }
  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+0V","Basic Limit:")

  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

  L_EXTERIOR_SIGNS_LIMIT = BOPGENERAL:PROPERTY_LIMIT  * (BPSDEFAULT:EXTERIOR_SIGNS_PERCENT Divide 100)

L_REVISED_LIMIT    = BOPGENERAL:SIGNS_LIMIT
L_BPSDEFAULT_LIMIT = BPSDEFAULT:SIGNS_LIMIT
L_LIMIT            = L_EXTERIOR_SIGNS_LIMIT
Do PRINT_LIMIT

  If L_DEDUCTIBLE_SIGNS_OUTDOOR = 1 Then
    {
      Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",L_DEDUCTIBLE_POS,"h+0V",
                        "Deductible:")

      Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")
      If (BOPGENERAL:SIGNS_LIMIT > 0) Or (BPSDEFAULT:SIGNS_LIMIT > 0) Then
        {
          If BOPGENERAL:SIGNS_DEDUCTIBLE[1] > BPSDEFAULT:SIGNS_DEDUCTIBLE Then
            {
              Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12,
                            "<033>&a",L_LIMIT_POS,"h+0V",
                            Str(BOPGENERAL:SIGNS_DEDUCTIBLE[1],"ZZZ,ZZZ,ZZ9"),"<NL>")
            }
          Else
            {
              Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12,
                                    "<033>&a",L_LIMIT_POS,"h+0V",
                            Str(BPSDEFAULT:SIGNS_DEDUCTIBLE,"ZZZ,ZZZ,ZZ9"),"<NL>")
            }
        }  --end of if
      Else  --write zero in for the deductable if limit = 0
        {
          Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12,
                                "<033>&a",L_LIMIT_POS,"h+0V",
                            Str(0,"ZZZ,ZZZ,ZZ9"),"<NL>")
        }
    }
  If L_SIGNS_NOT_ATTACHED = 1 Then
    {
      Writefile(L_FILE_NAME,"%s%s%s%n%s%s%s","<NL>",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+0V",
                            "Outdoor (Exterior) Signs (BU 25 18)","<NL>")

      Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+0V",
                            "Not Attached to Building")

      Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                            L_BASIC_POS,"h+0V","Basic Limit:")

      Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                            L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

      L_EXTERIOR_SIGNS_LIMIT_NOT_ATTC = 0

      L_REVISED_LIMIT    = BOPGENERAL:SIGNS_NOT_ATTACHED_LIMIT
      L_BPSDEFAULT_LIMIT = BPSDEFAULT:SIGNS_LIMIT_NOT_ATTACHED
      L_LIMIT            = L_EXTERIOR_SIGNS_LIMIT_NOT_ATTC
      Do PRINT_LIMIT

      Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",L_DEDUCTIBLE_POS,"h+0V",
                            "Deductible:")

      Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                            L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

      If (BOPGENERAL:SIGNS_NOT_ATTACHED_LIMIT > 0) Or
         (BPSDEFAULT:SIGNS_LIMIT_NOT_ATTACHED > 0) Then
        {
          If BOPGENERAL:SIGNS_DEDUCTIBLE[2] > BPSDEFAULT:SIGNS_DEDUCTIBLE Then
            {
              Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12,"<033>&a",L_LIMIT_POS,"h+0V",
                      Str(BOPGENERAL:SIGNS_DEDUCTIBLE[2],"ZZZ,ZZZ,ZZ9"),"<NL>")
            }
          Else
            {
              Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12,"<033>&a",L_LIMIT_POS,"h+0V",
                        Str(BPSDEFAULT:SIGNS_DEDUCTIBLE,"ZZZ,ZZZ,ZZ9"),"<NL>")
            }
        }  --end of if to make sure signs not attached is greater then 0
      Else
        {
          Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12,"<033>&a",L_LIMIT_POS,"h+0V",
                        Str(0,"ZZZ,ZZZ,ZZ9"),"<NL>")
        }
    }  --end of if L_SIGNS_NOT_ATTACHED = 1
  Writefile(L_FILE_NAME,"%s%s%s%n%s%s","<NL>",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+0V",
                        "Pollution Clean-Up ")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+0V","Basic Limit:")

  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")
L_LIMIT            = 0 --resets L_LIMIT
L_REVISED_LIMIT    = BOPGENERAL:POLLUTION_LIMIT
L_BPSDEFAULT_LIMIT = BPSDEFAULT:POLLUTION_LIMIT

Do PRINT_LIMIT

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_REVISED_POS-709,"h+0V","Separate, Specific Deductible:")
  Writefile(L_FILE_NAME,"%s%n%s%s%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$","<NL>","<NL>")
  Writefile(L_FILE_NAME,"%s%n%s%s%s%s","<033>&a",L_COVERGE_POS,"h+0V",
                         L_ARIAL_BOLD,"Property Restrictions ","<NL>")
  Writefile(L_FILE_NAME,"%s%n%s%s%s%s","<033>&a",L_COVERGE_POS,"h+0V",L_BULLET_6,
                         L_ARIAL,"  Furs")
  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+0V","Basic Limit:")
  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")
  Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                        L_LIMIT_POS,"h+0V",
                       Str(BPSDEFAULT:FURS,"ZZZ,ZZZ,ZZ9"),"<Nl>")
  Writefile(L_FILE_NAME,"%s%n%s","<033>&a",L_COVERGE_POS,"h+0V")
  Writefile(L_FILE_NAME,"%s%s%s",L_BULLET_6,
                         L_ARIAL,"  Jewelry")
  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+0V","Basic Limit:")
  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")
  Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                        L_LIMIT_POS,"h+0V",
                        Str(BPSDEFAULT:JEWELRY,"ZZZ,ZZZ,ZZ9"),"<NL>")
  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",L_COVERGE_POS+50,"h+0V",
                         L_ARIAL,"  (Jewelry Value Waiver Limit)")
  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")
  Writefile(L_FILE_NAME,"%s%s%n%s%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                        L_LIMIT_POS,"h+0V",
                        Str(BPSDEFAULT:JEWELRY_WAIVER,"ZZZ,ZZZ,ZZ9"),"<NL>","<NL>")
  if sfpname:eff_date => 06.01.2017 then
   {
    Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+0V",
                          "Replacement Threshold ","<NL>")
    Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                          L_basic_POS+250,"h+0V"," Limit:")
    Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                          L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")
    Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                          L_LIMIT_POS,"h+0V",
                          Str(bpsdefault:replacement_threshold,"ZZZ,ZZZ,ZZ9"),"<NL>")
    Writefile(L_FILE_NAME,"%s","<033>&a+0h+100V")
   }

  Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+0V",
                        "Trees, Shrubs, and Plants ","<NL>")
  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_REVISED_POS-610,"h+0V","Basic Limit per Occurrence:")
  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")
  Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                        L_LIMIT_POS,"h+0V",
                       Str(BPSDEFAULT:TREES_SHRUBS[1],"ZZZ,ZZZ,ZZ9"),"<Nl>")
  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_REVISED_POS-1360,"h+0V","Basic Limit on Any one Tree, Plant or Shrub:")
  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")
  Writefile(L_FILE_NAME,"%s%s%n%s%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                        L_LIMIT_POS,"h+0V",
                       Str(BPSDEFAULT:TREES_SHRUBS[2],"ZZZ,ZZZ,ZZ9"),"<Nl>","<NL>")
  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL_BOLD,"<033>&a",
                        L_COVERGE_POS,"h+0V","Valuable Papers and Records ")--L_VALUABLE_PAPERS_NO,
--                        ")")
  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+0V","Basic Limit:")
  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")


  L_VALUEABLE_PAPERS_LIMIT = BOPGENERAL:PROPERTY_LIMIT * (BPSDEFAULT:VALUABLE_PERCENT Divide 100)

  L_REVISED_LIMIT    = BOPGENERAL:VALUABLE_PAPERS_LIMIT
  L_BPSDEFAULT_LIMIT = BPSDEFAULT:VALUABLE_PAPERS_LIMIT
  L_LIMIT            = L_VALUEABLE_PAPERS_LIMIT
  Do PRINT_LIMIT   --valueable_papers

  If sfscompany:company_id not one of "DELOS", "GGUND" THEN
    {
      If L_WATER_DAMAGE = 1 Then
        {
          Writefile(L_FILE_NAME,"%s%s%s%n%s%s%s","<Nl>",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+0V",
                            "Water Damage -Sewer / Drain Backup ","<NL>")
          Writefile(L_FILE_NAME,"%s%s%n%s%s%s%n%s%s",L_ARIAL,"<033>&a",
                            L_COVERGE_POS+100,"h+0V","When BU 50 03 applies:",
                            "<033>&a",L_BASIC_POS,"h+0V",
                            "Basic Limit:")
          Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                            L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

          L_WATER_BACKUP_LIMIT = BOPGENERAL:PROPERTY_LIMIT * (BPSDEFAULT:SEWER_BKUP_PERCENT Divide 100)

          L_REVISED_LIMIT    = BOPGENERAL:WATER_BACKUP_LIMIT
          L_BPSDEFAULT_LIMIT = BPSDEFAULT:WATER_BACKUP_LIMIT
          L_LIMIT            = L_WATER_BACKUP_LIMIT
          Do PRINT_LIMIT
        }
    }

  Else
    {

      If bopgeneral:WATER_backup_limited = "Y" Then
        {
          Writefile(L_FILE_NAME,"%s%s%s%n%s%s%s","<Nl>",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+0V",
                         "Water Damage -Sewer / Drain Backup ","<NL>")
          Writefile(L_FILE_NAME,"%s%s%n%s%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_COVERGE_POS+100,"h+0V","When BU 50 03 applies:",
                        "<033>&a",L_BASIC_POS,"h+0V",
                        "Basic Limit:")
          Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

          Writefile(L_FILE_NAME,"%s",L_LETTER_GOTHIC_BOLD_12)
          Writefile(L_FILE_NAME,"%s",str(bopgeneral:water_backup_limit,"ZZZ,ZZZ,ZZZ"))
          Writefile(L_FILE_NAME,"%s%s%s%n%s%s%s%n%s%s%s%s","<NL>",L_ARIAL,"<033>&a",
                    L_REVISED_POS,"h+0V","Revised Limit:","<033>&a",
                    L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$",
                    L_LETTER_GOTHIC_BOLD_12)
          Writefile(L_FILE_NAME,"%s","<033>&ah+240V")
        }
      Else
        {
          Writefile(L_FILE_NAME,"%s%s%s%n%s%s%s","<Nl>",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+0V",
                         "Water Damage -Sewer / Drain Backup ","<NL>")
          Writefile(L_FILE_NAME,"%s%s%n%s%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_COVERGE_POS+100,"h+0V","When BU 50 03 applies:",
                        "<033>&a",L_BASIC_POS,"h+0V",
                        "Basic Limit:")
          Writefile(L_FILE_NAME,"%s%n%s%s%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_letter_gothic_bold_12,"$","<033>&a4275h+0V","0")

          Writefile(L_FILE_NAME,"%s%s%s%n%s%s%s%n%s%s%s%s","<NL>",L_ARIAL,"<033>&a",
                    L_REVISED_POS,"h+0V","Revised Limit:","<033>&a",
                    L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$",
                    L_LETTER_GOTHIC_BOLD_12)
          Writefile(L_FILE_NAME,"%s","<033>&ah+240V")
        }
    }


  Writefile(L_FILE_NAME,"%s%s%s%n%s%s","<NL>",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+0V",
                        "Outdoor (Exterior) Building Glass ")
  If L_GLASS_SQFT = 1 Then
    {
      Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS+180,"h+0V","Sq. Ft.:")
    }
  Else
    {
      Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS+180,"h+0V","Linear:")
    }
  Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                         L_LIMIT_POS,"h+0V",
                         Str(BOPGENERAL:GLASS_LIMIT,"ZZZ,ZZZ,ZZ9"),
                         "<NL>")
  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_REVISED_POS-600,"h+0V","Deductible per Occurrence:")

  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

  If BOPGENERAL:INCLUDE_GLASS_DEDUCTIBLE = "Y" Then
    {
      Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                         L_LIMIT_POS,"h+0V",
                         Str(BOPGENERAL:GLASS_DEDUCTIBLE,"ZZZ,ZZZ,ZZ9"),"<NL>")
    }
  Else
    {
      Writefile(L_FILE_NAME,"%s","<NL>")
    }


  Writefile(L_FILE_NAME,"%s%s%s%s%s%s",L_ARIAL,"<033>&a750h+0V",
                        "The following limits apply if limits for such are not ",
                        "shown in the Declarations","<NL>","<NL>")
  Writefile(L_FILE_NAME,"%s%s%s%s%s",L_ARIAL_BOLD,"<033>&a1150h+0V",
                        "PART II","<NL>","<NL>")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+0V",
                        "Fire and Explosion Legal Liability ")
  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+0V","Basic Limit:")
  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

L_REVISED_LIMIT    = BOPGENERAL:FIRE_LIMIT
L_BPSDEFAULT_LIMIT = BPSDEFAULT:FIRE_LIMIT
L_LIMIT            = 0 --resets L_LIMIT
Do PRINT_LIMIT

  Writefile(L_FILE_NAME,"%s%s%s%n%s%s","<NL>",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+0V",
                        "Personal Injury / Advertising Injury ")

  Access SFPPRINT3,
             Set SFPPRINT3:POLICY_NO    = SFPPRINT1:POLICY_NO,
                 SFPPRINT3:POL_YEAR     = SFPPRINT1:POL_YEAR,
                 SFPPRINT3:END_SEQUENCE = SFPPRINT1:END_SEQUENCE,
                 sfpprint3:prem_no      = sfplocation:prem_no,
                 sfpprint3:build_no     = sfplocation:build_no, Generic
  --cheking for deletion of personal injury on part II
  L_FMA100 = 0
  L_BU0507 = 0

  While SFPPRINT3:POLICY_NO    = SFPPRINT1:POLICY_NO And
        SFPPRINT3:POL_YEAR     = SFPPRINT1:POL_YEAR And
        SFPPRINT3:END_SEQUENCE = SFPPRINT1:END_SEQUENCE and
        sfpprint3:prem_no      = sfplocation:prem_no and
        sfpprint3:build_no     = sfplocation:build_no
    {
    if sfpprint3:lob_end_code = "X" then
    begin
      If SFPPRINT3:CODE One Of "FMA100" Then
        {
          L_FMA100 = 1
        }
      If SFPPRINT3:CODE One Of "BU0507" Then
        {
          Access BOPOPERATIONS,
                 Set BOPOPERATIONS:POLICY_NO    = SFPPRINT1:POLICY_NO ,
                     BOPOPERATIONS:POL_YEAR     = SFPPRINT1:POL_YEAR ,
                     BOPOPERATIONS:END_SEQUENCE = SFPPRINT1:END_SEQUENCE, Generic
          If (BOPOPERATIONS:EXCLUDE_PRODUCTS[2] = "Y") Then
            {
              L_BU0507 = 1  --only need to to see if personal liability is checkd on bu0507
            }
        }
        end
      Next SFPPRINT3
    }

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+0V","Basic Limit:")

  Writefile(L_FILE_NAME,"%s","<033>&f0S")--pop to return to basic limit

  If L_FMA100 = 1 Then  --endorsement deletes coverage for personal injury
    {
      Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                            L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

      Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                             L_LIMIT_POS,"h+0V",Str(0,"ZZZ,ZZZ,ZZ9"))

      If SCIPSCONTROL:PRINT_REVISED_ON_SUPP = 1 Then
        {
          Writefile(L_FILE_NAME,"%s%s%s%n%s%s","<NL>",L_ARIAL,"<033>&a",
                                L_REVISED_POS,"h+0V","Revised Limit:")
          Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                                L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")
          Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                                L_LIMIT_POS,"h+0V",Str(0,"ZZZ,ZZZ,ZZ9"))

        }
    }
  Else
  If L_BU0507 = 1 Then
    {
      Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL, "<033>&a",
                             L_DOLLAR_POS,"h+0V","Not Applicable")

      If SCIPSCONTROL:PRINT_REVISED_ON_SUPP = 1 Then
        {
           Writefile(L_FILE_NAME,"%s%s%s%n%s%s","<NL>",L_ARIAL,"<033>&a",
                                 L_REVISED_POS,"h+0V","Revised Limit:")
           Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                                L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")
           Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                                L_LIMIT_POS,"h+0V",Str(0,"ZZZ,ZZZ,ZZ9"))

        }
   }
 Else
   {
     Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

     L_REVISED_LIMIT    = L_PERSONAL_ADD_INJURY
     L_BPSDEFAULT_LIMIT = BPSDEFAULT:PERSONAL_ADD_INJURY
     L_LIMIT            = 0
     Do PRINT_LIMIT

   }

  Writefile(L_FILE_NAME,"%s","<033>&f1S") --pushes current cursor onto stack

  Writefile(L_FILE_NAME,"%s%s%n%s%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                        L_LIMIT_POS+700,"h+0V",L_ARIAL,"< Limit - All Locations",
                        "<NL>")

  If SCIPSCONTROL:PRINT_REVISED_ON_SUPP = 1 Then
    {
      Writefile(L_FILE_NAME,"%s%s%n%s%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                L_LIMIT_POS+700,"h+0V",L_ARIAL,"< Limit - All Locations",
                "<NL>")
    }

                                  -- PAGE 3

 Writefile(L_FILE_NAME,"%s","<FF>")

  L_PAGE_NUMBER = L_PAGE_NUMBER + 1
  --border
  If SCIPSCONTROL:PRINT_BORDERS_ON_DEC_PAGE = 1 Then
    {
      Writefile(L_FILE_NAME,"%s","<033>&a140h-220V<033>*c10a3100b0P")   --left vertical li
      Writefile(L_FILE_NAME,"%s","<033>&a5585h-0V<033>*c10a3100b0P")   --right vertical
      Writefile(L_FILE_NAME,"%s","<033>&a140h-0V<033>*c5467h20v0P") --top horizontal line to
      Writefile(L_FILE_NAME,"%s","<033>&a140h7300V<033>*c5467h20v0P") --bottom horizontal line
    }
  Writefile(L_FILE_NAME,"%s%s%s%n", L_ARIAL_BOLD_9,
                        "<033>&a5000h7250V","Page ",L_PAGE_NUMBER)

  If sfscompany:company_id one of "DELOS", "GGUND" then
  do header

  Else
  do header1


  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+0V",
                      "Supplemental - Continued")
  Writefile(L_FILE_NAME,"%s%s%s%s%n%s%s%s%n%s%s",L_ARIAL_BOLD,"<033>&a2300h+0V",
                      "Location","<033>&a3000h+0V",SFPLOCATION:PREM_NO,
                      "<033>&a3300h+0V","Building","<033>&a3900h+0V",
                      SFPLOCATION:BUILD_NO,"<NL>","<NL>")

  Writefile(L_FILE_NAME,"%s%s%n%s%s%s%s",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,
                        "h+0V","OTHER SPECIAL POLICY CONDITIONS:","<nl>","<nl>")

If sfscompany:company_id one of "DELOS", "GGUND" then
  {
    Writefile(L_FILE_NAME,"%s%s%n%s%s",l_arial_bold,"<033>&a",L_COVERGE_POS,"h+0V",
              "Computer Coverage")

    Access sfpname_alias,
       Set sfpname_alias:POLICY_NO    = SFPPRINT1:POLICY_NO,
           sfpname_alias:POL_YEAR     = SFPPRINT1:POL_Year,
           sfpname_alias:END_SEQUENCE = SFPPRINT1:end_sequence, generic

    While sfpname_alias:POLICY_NO    = SFPPRINT1:POLICY_NO And
          sfpname_alias:POL_YEAR     = SFPPRINT1:POL_YEAR And
          sfpname_alias:END_SEQUENCE = SFPPRINT1:END_SEQUENCE
      {
            Writefile(L_FILE_NAME,"%s%s%n%s%s%s%n%s%s",l_arial,"<033>&a",
                      L_COVERGE_POS+100,"h+120V","When SIBU-0005 applies:",
                      "<033>&a",L_BASIC_POS+250,"h+0V","Limit:")
            Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                      L_DOLLAR_POS,"h+0V",l_arial_bold,"$")
       next sfpname_alias
      }

    Access sfpend,
       Set sfpend:POLICY_NO    = SFPPRINT1:POLICY_NO,
           sfpend:POL_YEAR     = SFPPRINT1:POL_Year,
           sfpend:END_SEQUENCE = SFPPRINT1:end_sequence,
           sfpend:prem_no      = sfplocation:prem_no,
           sfpend:build_no     = sfplocation:build_no, generic

    While SFPEND:POLICY_NO    = SFPPRINT1:POLICY_NO And
          SFPEND:POL_YEAR     = SFPPRINT1:POL_YEAR And
          SFPEND:END_SEQUENCE = SFPPRINT1:END_SEQUENCE and
          sfpend:prem_no      = sfplocation:prem_no and
          sfpend:build_no     = sfplocation:build_no
    {
      If sfpend:code one of "BU0370", "SIR003" then
        {
          Access BPSDEFAULT,
             Set BPSDEFAULT:COMPANY_ID       = SFPNAME:COMPANY_ID,
                 BPSDEFAULT:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS,
                 BPSDEFAULT:FORM             = L_SFPMASTER_FORM, Generic

          if bpsdefault:computer_limit <> 0 then
            {
              Writefile(L_FILE_NAME,"%s%s%n%s%s%s",l_letter_gothic_bold_12, "<033>&a",
                        L_LIMIT_POS,"h+0V",str(bpsdefault:computer_limit,"ZZZ,ZZZ,ZZ9"),"<NL>")
            }
          else
            {
              Access bopcompdesc,
                 Set bopcompdesc:POLICY_NO    = SFPPRINT1:POLICY_NO,
                     bopcompdesc:POL_YEAR     = SFPPRINT1:POL_Year,
                     bopcompdesc:END_SEQUENCE = SFPPRINT1:end_sequence,
                     bopcompdesc:prem_no      = sfpend:prem_no,
                     bopcompdesc:build_no     = sfpend:build_no, generic

              Writefile(L_FILE_NAME,"%s%s%n%s%s%s",l_letter_gothic_bold_12, "<033>&a",
                        L_LIMIT_POS,"h+0V",str(bopcompdesc:limit,"ZZZ,ZZZ,ZZ9"),"<NL>")
            }
        }
        next sfpend
    }

    Writefile(L_FILE_NAME,"%s%s%s%n%s%s","<NL>",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+240V",
                        "Liquor Receipts")
    Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

    Access bopendorse,
       Set bopendorse:POLICY_NO    = SFPlocation:POLICY_NO,
           bopendorse:POL_YEAR     = SFPlocation:POL_YEAR,
           bopendorse:END_SEQUENCE = SFPlocation:END_SEQUENCE,
           bopendorse:prem_no      = sfplocation:prem_no,
           bopendorse:build_no     = sfplocation:build_no, generic

    l_bu0197 = 0

    While bopendorse:POLICY_NO    = SFPlocation:POLICY_NO And
          bopendorse:POL_YEAR     = SFPlocation:POL_YEAR And
          bopendorse:END_SEQUENCE = SFPlocation:END_SEQUENCE and
          bopendorse:prem_no      = sfplocation:prem_no and
          bopendorse:build_no     = sfplocation:build_no
      {
        If bopendorse:code one of "BU0197" then
          {
            l_bu0197 = 1
            Writefile(L_FILE_NAME,"%s%s%n%s%s",l_letter_gothic_bold_12, "<033>&a",
                      L_LIMIT_POS,"h+0V",Str(bopendorse:limit[1],"ZZZ,ZZZ,ZZ9"))
          }

       next bopendorse
      }

      if l_bu0197 = 0 then
        begin
          Writefile(L_FILE_NAME,"%s%s%n%s%s",l_letter_gothic_bold_12, "<033>&a",
                    L_LIMIT_POS,"h+0V",str(0,"ZZZ,ZZZ,ZZ9"))
        end

  }
/*--------------------------------------------------------------------------
 The following code is for non-manditory endorsements
 ---------------------------------------------------------------------------*/
  Access SFPPRINT3,
             Set SFPPRINT3:POLICY_NO    = SFPPRINT1:POLICY_NO,
                 SFPPRINT3:POL_YEAR     = SFPPRINT1:POL_YEAR,
                 SFPPRINT3:END_SEQUENCE = SFPPRINT1:END_SEQUENCE,
                 sfpprint3:prem_no      = sfplocation:prem_no,
                 sfpprint3:build_no     = sfplocation:build_no, Generic

  While SFPPRINT3:POLICY_NO    = SFPPRINT1:POLICY_NO And
        SFPPRINT3:POL_YEAR     = SFPPRINT1:POL_YEAR And
        SFPPRINT3:END_SEQUENCE = SFPPRINT1:END_SEQUENCE and
        sfpprint3:prem_no      = sfplocation:prem_no and
        sfpprint3:build_no     = sfplocation:build_no
    {
    if sfpprint3:lob_end_code = "X" then
    begin
      If L_LINE_PCOUNTER >= L_MAX_LINES - 6 Then
        {
          L_PAGE_NUMBER = L_PAGE_NUMBER +1
          Writefile(L_FILE_NAME,"%s%s%s%s%n","<FF>",L_ARIAL_BOLD_9,
                                "<033>&a5000h7250V",
                                "Page ",L_PAGE_NUMBER)
          L_LINE_PCOUNTER = 1
         --border
          If SCIPSCONTROL:PRINT_BORDERS_ON_DEC_PAGE = 1 Then
            {
              Writefile(L_FILE_NAME,"%s","<033>&a140h0V<033>*c10a3045b0P")   --left vertical li
              Writefile(L_FILE_NAME,"%s","<033>&a5585h0V<033>*c10a3045b0P")   --right vertical
              Writefile(L_FILE_NAME,"%s","<033>&a140h0V<033>*c5467h20v0P") --top horizontal line to
              Writefile(L_FILE_NAME,"%s","<033>&a140h7300V<033>*c5467h20v0P") --bottom horizontal line
            }
          Writefile(L_FILE_NAME,"%s%s","<033>&a+0h0V","<NL>") --sets starting point for newpage
          Writefile(L_FILE_NAME,"%s%s%s%s",L_ARIAL_BOLD,"<033>&a1800h+0V",
                           "FORMS AND ENDORSEMENTS CONTINUED","<NL>")
          L_LINE_PCOUNTER = L_LINE_PCOUNTER +1

          Writefile(L_FILE_NAME,"%s%s%s","<033>&a150h-80V<033>*c5455h20v0P","<NL>",
                               "<033>&a+0h+20V")
          L_LINE_PCOUNTER = L_LINE_PCOUNTER +1
        }

      If SFPPRINT3:PRINT_FORM = "Y" Then
        {
          Writefile(L_FILE_NAME,"%s%s%s%s%s%s",L_ARIAL,"<033>&a1000h+0V",
                                SFPPRINT3:FORM_EDITION,"<033>&a2400h+0V",
                                SFPPRINT3:DESCRIPTION,"<NL>")
          L_LINE_PCOUNTER = L_LINE_PCOUNTER + 1
        }
        end
      Next SFPPRINT3
    }
  If sfscompany:company_id not one of "DELOS", "GGUND" then
    {
      Writefile(L_FILE_NAME,"%S%s%s%n%s%s","<nl>",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+0V",
                      "IMPORTANT MESSAGES")
    }

 Writefile(L_FILE_NAME,"%s","<FF>")

-- If L_PAGE_NUMBER = 3 Then
--   {
--     Writefile(L_FILE_NAME,"%s","<FF>")
--   }


  Next SFPLOCATION
}

Screen Exit
  Writefile(L_FILE_NAME,"%s%s",L_FORMFEED,L_RESET)
  Closefile(L_FILE_NAME)

Procedure Definition

Procedure header
Begin
l_state            = bopgeneral:state
L_COMPANY_ID       = sfpname:COMPANY_ID
L_LINE_OF_BUSINESS = sfpname:LINE_OF_BUSINESS

Access SFSOPTEND,
   Set SFSOPTEND:COMPANY_ID       = L_COMPANY_ID,
       SFSOPTEND:STATE            = L_STATE,
       SFSOPTEND:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS,
       SFSOPTEND:CODE             = I_CODE, generic

 While SFSOPTEND:COMPANY_ID       = L_COMPANY_ID and
       SFSOPTEND:STATE            = L_STATE and
       SFSOPTEND:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS and
       SFSOPTEND:CODE             = I_CODE

   {  --start of sfsoptend check
     If (sfpname:eff_date >= sfsoptend:eff_date and
        (sfpname:eff_date < sfsoptend:exp_date or
         sfsoptend:exp_date = 0)) then
       {
         l_eff_date = sfsoptend:eff_date
       }
     next sfsoptend
   }

Access SFSOPTEND,
   Set SFSOPTEND:COMPANY_ID       = L_COMPANY_ID,
       SFSOPTEND:STATE            = L_STATE,
       SFSOPTEND:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS,
       SFSOPTEND:CODE             = I_CODE,
       SFSOPTEND:EFF_DATE         = L_EFF_DATE, exact

If sfsoptend:edition <> 0 then
  {
    Writefile(L_FILE_NAME,"%s",L_ARIAL_9)
    Writefile(L_FILE_NAME,"%s","<033>&a420h7080V")
    Writefile(L_FILE_NAME,"%s","Ed. ")
    Writefile(L_FILE_NAME,"%n",sfsoptend:edition)
  }

Writefile(L_FILE_NAME,"%s",L_ARIAL_9)
Writefile(L_FILE_NAME,"%s","<033>&a420h7200V")
Writefile(L_FILE_NAME,"%s",l_copyright_6)
Writefile(L_FILE_NAME,"%s"," ")
Writefile(L_FILE_NAME,"%s",L_ARIAL_9)
Writefile(L_FILE_NAME,"%s",sfsoptend:COPYRIGHT)
Writefile(L_FILE_NAME,"%s","<033>&a200h+120V")

Writefile(L_FILE_NAME,"%s%s%s%s%s%s%s%s%s%s%s%s",L_ARIAL_BOLD_12,"<033>&a180h0V",
                      "DECLARATION SUPPLEMENT - ",SFSSTATE:DESCRIPTION,L_ARIAL,
                      "<033>&a4750h0V",Trun(sfsoptend:FORM_PRINT),L_ARIAL_BOLD_9,
                      " ",sfsoptend:EDITION_PRINT,"<033>&a140h+60V<033>*c5467h5v0P",
                      "<NL>")

Writefile(L_FILE_NAME,"%s%s%s%s","<NL>",L_ARIAL_BOLD,
                      "<033>&a180h+0V","Policy Number: ")
Writefile(L_FILE_NAME,"%s",Trun(SFSLINE:ALPHA))
Writefile(L_FILE_NAME,"%s",trun(str(SFPPRINT1:POLICY_NO)))
if sfsline2:USE_POL_YEAR_END_SEQ_SUFFIX one of 1 then
  {
    Writefile(L_FILE_NAME,"%s%s"," ",str(sfpname:pol_year,"9999"))
    Writefile(L_FILE_NAME,"%s%n"," ",sfpname:end_sequence)
  }

Writefile(L_FILE_NAME,"%s","<033>&a3275h+0V")
Writefile(L_FILE_NAME,"%s","Effective:")
Writefile(L_FILE_NAME,"%s","<033>&a3750h+0V")
Writefile(L_FILE_NAME,"%d",SFPNAME:EFF_DATE)
Writefile(L_FILE_NAME,"%s","<NL>")
Writefile(L_FILE_NAME,"%s","<NL>")
End


Procedure header1
Begin
Writefile(L_FILE_NAME,"%s%s%s%s%s%s%s%s%s%s%s%s",L_ARIAL_BOLD_12,"<033>&a180h0V",
         "DECLARATION SUPPLEMENT - ",SFSSTATE:DESCRIPTION,L_ARIAL,
         "<033>&a4750h0V",Trun(SFPPRINT4:FORM_PRINT),L_ARIAL_BOLD_9,
        " ",SFPPRINT4:EDITION_PRINT,"<033>&a140h+60V<033>*c5467h5v0P",
            "<NL>")

Writefile(L_FILE_NAME,"%s%s%s%s","<NL>",L_ARIAL_BOLD,
                       "<033>&a180h+0V","Policy Number: ")
                          Writefile(L_FILE_NAME,"%s",Trun(SFSLINE:ALPHA))

 Writefile(L_FILE_NAME,"%n%s%s%s%d%s%s",SFPPRINT1:POLICY_NO,"<033>&a3275h+0V",
                            "Effective:","<033>&a3750h+0V",SFPNAME:EFF_DATE,"<NL>",
                                                     "<NL>")

End

Procedure PRINT_LIMIT

{
  If SFSLINE:OPTION = "P" Then        -- means it is chatham square
    {
      If SCIPSCONTROL:PRINT_REVISED_ON_SUPP = 1 Then
        {
          If (L_LIMIT >= L_BPSDEFAULT_LIMIT) Or
              L_LIMIT >= L_REVISED_LIMIT  Then
            {
              Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12,
                        "<033>&a",L_LIMIT_POS,"h+0V",
                         Str(L_LIMIT,"ZZZ,ZZZ,ZZ9"))
            }  --l_limit is greater then both bpsdefault and revised
          Else
            {
              If (L_BPSDEFAULT_LIMIT = L_REVISED_LIMIT) Then
                {
                  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",L_LIMIT_POS,"h+0V",
                                  L_LETTER_GOTHIC_BOLD_12 ,
                                  Str(L_BPSDEFAULT_LIMIT,"ZZZ,ZZZ,ZZ9"))
                  Writefile(L_FILE_NAME,"%s%s%s%n%s%s%s%n%s%s%s%s","<NL>",l_arial,"<033>&a",
                            L_REVISED_POS,"h+0V","Revised Limit:","<033>&a",
                            L_DOLLAR_POS,"h+0V",l_arial_bold,"$",
                            l_letter_gothic_bold_12)
                  Writefile(L_FILE_NAME,"%s%s%n%s%s",l_letter_gothic_bold_12,"<033>&a",
                            L_LIMIT_POS+440,"h+0V","0")
                }
              Else
                If (L_BPSDEFAULT_LIMIT > L_REVISED_LIMIT) Then
                  {
                    Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",L_LIMIT_POS,"h+0V",
                                  L_LETTER_GOTHIC_BOLD_12 ,Str(L_BPSDEFAULT_LIMIT,"ZZZ,ZZZ,ZZ9"))
                    Writefile(L_FILE_NAME,"%s%s%s%n%s%s%s%n%s%s%s%s","<NL>",l_arial,"<033>&a",
                              L_REVISED_POS,"h+0V","Revised Limit:","<033>&a",
                              L_DOLLAR_POS,"h+0V",l_arial_bold,"$",l_letter_gothic_bold_12)
                    Writefile(L_FILE_NAME,"%s%s%n%s%s",l_letter_gothic_bold_12,"<033>&a",
                              L_LIMIT_POS+440,"h+0V","0")
                  }
            }
          Writefile(L_FILE_NAME,"%s%s%s%n%s%s%s%n%s%s%s%s","<NL>",L_ARIAL,"<033>&a",
                        L_REVISED_POS,"h+0V","Revised Limit:","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$",
                        L_LETTER_GOTHIC_BOLD_12)

          If L_REVISED_LIMIT > L_BPSDEFAULT_LIMIT Then
            {
              Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12,
                                "<033>&a",L_LIMIT_POS,"h+0V",
                               Str(L_REVISED_LIMIT,"ZZZ,ZZZ,ZZ9"))
           }
           Writefile(L_FILE_NAME,"%s","<NL>")
        } --end of print revised on supp
      Else
        {
          If (L_LIMIT >= L_BPSDEFAULT_LIMIT) And
             (L_LIMIT >= L_REVISED_LIMIT) Then
            {
              Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12,
                        "<033>&a",L_LIMIT_POS,"h+0V",
                        Str(L_LIMIT,"ZZZ,ZZZ,ZZ9")) --basic limit
            }
          Else
            If (L_LIMIT < L_BPSDEFAULT_LIMIT) And       --default value is printed
               (L_BPSDEFAULT_LIMIT >= L_REVISED_LIMIT) Then
              {
                Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12,
                          "<033>&a",L_LIMIT_POS,"h+0V",
                          Str(L_BPSDEFAULT_LIMIT,"ZZZ,ZZZ,ZZ9")) --basic limit
                Writefile(L_FILE_NAME,"%s%s%s%n%s%s%s%n%s%s%s%s","<NL>",l_arial,"<033>&a",
                          L_REVISED_POS,"h+0V","Revised Limit:","<033>&a",
                          L_DOLLAR_POS,"h+0V",l_arial_bold,"$",l_letter_gothic_bold_12)
                Writefile(L_FILE_NAME,"%s%s%n%s%s",l_letter_gothic_bold_12,"<033>&a",
                          L_LIMIT_POS+440,"h+0V","0")
              }
            Else
              {
                Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12,
                         "<033>&a",L_LIMIT_POS,"h+0V",
                          Str(L_REVISED_LIMIT,"ZZZ,ZZZ,ZZ9"))  --revised limit
              }
            Writefile(L_FILE_NAME,"%s","<NL>") --moves "Applies only with coverage B" down two lines
        }

    }
  Else  -- if not chatham square do below for limit
    {
      If SCIPSCONTROL:PRINT_REVISED_ON_SUPP = 1 Then
        {
          If (L_BPSDEFAULT_LIMIT >= L_REVISED_LIMIT) Then
            {
              Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12,
                        "<033>&a",L_LIMIT_POS,"h+0V",
                         Str(L_BPSDEFAULT_LIMIT,"ZZZ,ZZZ,ZZ9"))
            }  --if l_bpsdefault_limit < l_revised_limit  do not print basic limit

          else
          if l_revised_limit = 0 then
            {
              Writefile(L_FILE_NAME,"%s%s%s%n%s%s%s%n%s%s%s%s","<NL>",l_arial,"<033>&a",
                        L_REVISED_POS,"h+0V","Revised Limit:","<033>&a",
                        L_DOLLAR_POS,"h+0V",l_arial_bold,"$",l_letter_gothic_bold_12)
              Writefile(L_FILE_NAME,"%s%s%n%s%s",l_letter_gothic_bold_12,"<033>&a",L_LIMIT_POS,"h+0V",Str(0,"ZZZ,ZZZ,ZZ9"))
            }

          If (L_BPSDEFAULT_LIMIT = L_REVISED_LIMIT) Then
            {
              Writefile(L_FILE_NAME,"%s%s%s%n%s%s%s%n%s%s%s%s","<NL>",L_ARIAL,"<033>&a",
                        L_REVISED_POS,"h+0V","Revised Limit:","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$",
                        L_LETTER_GOTHIC_BOLD_12)
              Writefile(L_FILE_NAME,"%s%n%s%s%s%s","<033>&a",L_LIMIT_POS,"h+0V",
                               L_LETTER_GOTHIC_BOLD_12 ,Str(0,"ZZZ,ZZZ,ZZ9"),
                               "<NL>")
            }
          Else
            {
              Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",L_LIMIT_POS,"h+0V",
                        l_letter_gothic_bold_12 ,Str(0,"ZZZ,ZZZ,ZZ9"))
              Writefile(L_FILE_NAME,"%s%s%s%n%s%s%s%n%s%s%s%s","<NL>",L_ARIAL,"<033>&a",
                        L_REVISED_POS,"h+0V","Revised Limit:","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$",
                        L_LETTER_GOTHIC_BOLD_12)
              Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12,
                                "<033>&a",L_LIMIT_POS,"h+0V",
                               Str(L_REVISED_LIMIT,"ZZZ,ZZZ,ZZ9"),"<NL>")
           }
        }
      Else --do not print the revised limit
        {
          If (L_BPSDEFAULT_LIMIT >= L_REVISED_LIMIT) Then
            {
              Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12,
                        "<033>&a",L_LIMIT_POS,"h+0V",
                         Str(L_BPSDEFAULT_LIMIT,"ZZZ,ZZZ,ZZ9"),"<NL>")
              Writefile(L_FILE_NAME,"%s%s%s%n%s%s%s%n%s%s%s%s","<NL>",L_ARIAL,"<033>&a",
                        L_REVISED_POS,"h+0V","Revised Limit:","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$",
                        L_LETTER_GOTHIC_BOLD_12)
              Writefile(L_FILE_NAME,"%s%n%s%s%s%s","<033>&a",L_LIMIT_POS,"h+0V",
                               L_LETTER_GOTHIC_BOLD_12 ,Str(0,"ZZZ,ZZZ,ZZ9"),
                               "<NL>")
            }  --print l_bpsdefault_limit
          Else --print l_revised_limit
            {
              Writefile(L_FILE_NAME,"%s%n%s%s%s%s","<033>&a",L_LIMIT_POS,"h+0V",
                               L_LETTER_GOTHIC_BOLD_12 ,Str(0,"ZZZ,ZZZ,ZZ9"),
                               "<NL>")
              Writefile(L_FILE_NAME,"%s%s%s%n%s%s%s%n%s%s%s%s","<NL>",L_ARIAL,"<033>&a",
                        L_REVISED_POS,"h+0V","Revised Limit:","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$",
                        L_LETTER_GOTHIC_BOLD_12)
              Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12,
                        "<033>&a",L_LIMIT_POS,"h+0V",
                         Str(L_REVISED_LIMIT,"ZZZ,ZZZ,ZZ9"),"<NL>")
            }
        }
    }
}


End
